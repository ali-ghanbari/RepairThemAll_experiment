cd /tmp/Nopol_Bug_dot_jar_Commons-Math_b2f3f6db;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4g -Xms1g -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis smt \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 7 \
	--source src/main/java \
	--classpath "target/classes:target/test-classes:/home/tdurieux/.m2/repository/junit/junit/4.4/junit-4.4.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
08:53:55.343 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
08:53:55.357 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/Nopol_Bug_dot_jar_Commons-Math_b2f3f6db/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Commons-Math_b2f3f6db/target/test-classes/, file:/home/tdurieux/.m2/repository/junit/junit/4.4/junit-4.4.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
08:53:55.357 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
08:53:55.357 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.math.ArgumentOutsideDomainExceptionTest, org.apache.commons.math.ConvergenceExceptionTest, org.apache.commons.math.DuplicateSampleAbscissaExceptionTest, org.apache.commons.math.FunctionEvaluationExceptionTest, org.apache.commons.math.MathConfigurationExceptionTest, org.apache.commons.math.MathExceptionTest, org.apache.commons.math.MaxIterationsExceededExceptionTest, org.apache.commons.math.analysis.BinaryFunctionTest, org.apache.commons.math.analysis.ComposableFunctionTest, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math.analysis.integration.RombergIntegratorTest, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math.analysis.solvers.BisectionSolverTest, org.apache.commons.math.analysis.solvers.BrentSolverTest, org.apache.commons.math.analysis.solvers.LaguerreSolverTest, org.apache.commons.math.analysis.solvers.MullerSolverTest, org.apache.commons.math.analysis.solvers.NewtonSolverTest, org.apache.commons.math.analysis.solvers.RiddersSolverTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, org.apache.commons.math.complex.ComplexFieldTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.distribution.BetaDistributionTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.distribution.ZipfDistributionTest, org.apache.commons.math.estimation.EstimatedParameterTest, org.apache.commons.math.estimation.GaussNewtonEstimatorTest, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, org.apache.commons.math.estimation.MinpackTest, org.apache.commons.math.estimation.WeightedMeasurementTest, org.apache.commons.math.fraction.BigFractionFieldTest, org.apache.commons.math.fraction.BigFractionFormatTest, org.apache.commons.math.fraction.BigFractionTest, org.apache.commons.math.fraction.FractionFieldTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.genetics.BinaryChromosomeTest, org.apache.commons.math.genetics.BinaryMutationTest, org.apache.commons.math.genetics.ChromosomeTest, org.apache.commons.math.genetics.ElitisticListPopulationTest, org.apache.commons.math.genetics.FitnessCachingTest, org.apache.commons.math.genetics.FixedGenerationCountTest, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math.genetics.ListPopulationTest, org.apache.commons.math.genetics.OnePointCrossoverTest, org.apache.commons.math.genetics.RandomKeyMutationTest, org.apache.commons.math.genetics.RandomKeyTest, org.apache.commons.math.genetics.TournamentSelectionTest, org.apache.commons.math.geometry.FrenchVector3DFormatTest, org.apache.commons.math.geometry.RotationOrderTest, org.apache.commons.math.geometry.RotationTest, org.apache.commons.math.geometry.Vector3DFormatTest, org.apache.commons.math.geometry.Vector3DTest, org.apache.commons.math.linear.AbstractRealVectorTest, org.apache.commons.math.linear.Array2DRowRealMatrixTest, org.apache.commons.math.linear.ArrayFieldVectorTest, org.apache.commons.math.linear.ArrayRealVectorTest, org.apache.commons.math.linear.BiDiagonalTransformerTest, org.apache.commons.math.linear.BigMatrixImplTest, org.apache.commons.math.linear.BlockFieldMatrixTest, org.apache.commons.math.linear.BlockRealMatrixTest, org.apache.commons.math.linear.CholeskyDecompositionImplTest, org.apache.commons.math.linear.CholeskySolverTest, org.apache.commons.math.linear.EigenDecompositionImplTest, org.apache.commons.math.linear.EigenSolverTest, org.apache.commons.math.linear.FieldLUDecompositionImplTest, org.apache.commons.math.linear.FieldMatrixImplTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.InvalidMatrixExceptionTest, org.apache.commons.math.linear.LUDecompositionImplTest, org.apache.commons.math.linear.LUSolverTest, org.apache.commons.math.linear.MatrixIndexExceptionTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.QRDecompositionImplTest, org.apache.commons.math.linear.QRSolverTest, org.apache.commons.math.linear.RealMatrixImplTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.SingularValueDecompositionImplTest, org.apache.commons.math.linear.SingularValueSolverTest, org.apache.commons.math.linear.SparseFieldMatrixTest, org.apache.commons.math.linear.SparseFieldVectorTest, org.apache.commons.math.linear.SparseRealMatrixTest, org.apache.commons.math.linear.SparseRealVectorTest, org.apache.commons.math.linear.TriDiagonalTransformerTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.events.EventStateTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest, org.apache.commons.math.optimization.direct.MultiDirectionalTest, org.apache.commons.math.optimization.direct.NelderMeadTest, org.apache.commons.math.optimization.fitting.CurveFitterTest, org.apache.commons.math.optimization.fitting.HarmonicFitterTest, org.apache.commons.math.optimization.fitting.PolynomialFitterTest, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math.optimization.general.MinpackTest, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math.optimization.linear.SimplexSolverTest, org.apache.commons.math.optimization.linear.SimplexTableauTest, org.apache.commons.math.optimization.univariate.BrentMinimizerTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.MersenneTwisterTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math.stat.correlation.CovarianceTest, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.inference.ChiSquareFactoryTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.TTestFactoryTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.ranking.NaturalRankingTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastHadamardTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.util.BigRealFieldTest, org.apache.commons.math.util.BigRealTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest, org.apache.commons.math.util.OpenIntToFieldTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.TransformerMapTest]
08:53:55.359 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@66d33a', projectTests=[org.apache.commons.math.ArgumentOutsideDomainExceptionTest, org.apache.commons.math.ConvergenceExceptionTest, org.apache.commons.math.DuplicateSampleAbscissaExceptionTest, org.apache.commons.math.FunctionEvaluationExceptionTest, org.apache.commons.math.MathConfigurationExceptionTest, org.apache.commons.math.MathExceptionTest, org.apache.commons.math.MaxIterationsExceededExceptionTest, org.apache.commons.math.analysis.BinaryFunctionTest, org.apache.commons.math.analysis.ComposableFunctionTest, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math.analysis.integration.RombergIntegratorTest, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math.analysis.solvers.BisectionSolverTest, org.apache.commons.math.analysis.solvers.BrentSolverTest, org.apache.commons.math.analysis.solvers.LaguerreSolverTest, org.apache.commons.math.analysis.solvers.MullerSolverTest, org.apache.commons.math.analysis.solvers.NewtonSolverTest, org.apache.commons.math.analysis.solvers.RiddersSolverTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest, org.apache.commons.math.complex.ComplexFieldTest, org.apache.commons.math.complex.ComplexFormatTest, org.apache.commons.math.complex.ComplexTest, org.apache.commons.math.complex.ComplexUtilsTest, org.apache.commons.math.complex.FrenchComplexFormatTest, org.apache.commons.math.distribution.BetaDistributionTest, org.apache.commons.math.distribution.BinomialDistributionTest, org.apache.commons.math.distribution.CauchyDistributionTest, org.apache.commons.math.distribution.ChiSquareDistributionTest, org.apache.commons.math.distribution.ExponentialDistributionTest, org.apache.commons.math.distribution.FDistributionTest, org.apache.commons.math.distribution.GammaDistributionTest, org.apache.commons.math.distribution.HypergeometricDistributionTest, org.apache.commons.math.distribution.NormalDistributionTest, org.apache.commons.math.distribution.PascalDistributionTest, org.apache.commons.math.distribution.PoissonDistributionTest, org.apache.commons.math.distribution.TDistributionTest, org.apache.commons.math.distribution.WeibullDistributionTest, org.apache.commons.math.distribution.ZipfDistributionTest, org.apache.commons.math.estimation.EstimatedParameterTest, org.apache.commons.math.estimation.GaussNewtonEstimatorTest, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest, org.apache.commons.math.estimation.MinpackTest, org.apache.commons.math.estimation.WeightedMeasurementTest, org.apache.commons.math.fraction.BigFractionFieldTest, org.apache.commons.math.fraction.BigFractionFormatTest, org.apache.commons.math.fraction.BigFractionTest, org.apache.commons.math.fraction.FractionFieldTest, org.apache.commons.math.fraction.FractionFormatTest, org.apache.commons.math.fraction.FractionTest, org.apache.commons.math.genetics.BinaryChromosomeTest, org.apache.commons.math.genetics.BinaryMutationTest, org.apache.commons.math.genetics.ChromosomeTest, org.apache.commons.math.genetics.ElitisticListPopulationTest, org.apache.commons.math.genetics.FitnessCachingTest, org.apache.commons.math.genetics.FixedGenerationCountTest, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math.genetics.ListPopulationTest, org.apache.commons.math.genetics.OnePointCrossoverTest, org.apache.commons.math.genetics.RandomKeyMutationTest, org.apache.commons.math.genetics.RandomKeyTest, org.apache.commons.math.genetics.TournamentSelectionTest, org.apache.commons.math.geometry.FrenchVector3DFormatTest, org.apache.commons.math.geometry.RotationOrderTest, org.apache.commons.math.geometry.RotationTest, org.apache.commons.math.geometry.Vector3DFormatTest, org.apache.commons.math.geometry.Vector3DTest, org.apache.commons.math.linear.AbstractRealVectorTest, org.apache.commons.math.linear.Array2DRowRealMatrixTest, org.apache.commons.math.linear.ArrayFieldVectorTest, org.apache.commons.math.linear.ArrayRealVectorTest, org.apache.commons.math.linear.BiDiagonalTransformerTest, org.apache.commons.math.linear.BigMatrixImplTest, org.apache.commons.math.linear.BlockFieldMatrixTest, org.apache.commons.math.linear.BlockRealMatrixTest, org.apache.commons.math.linear.CholeskyDecompositionImplTest, org.apache.commons.math.linear.CholeskySolverTest, org.apache.commons.math.linear.EigenDecompositionImplTest, org.apache.commons.math.linear.EigenSolverTest, org.apache.commons.math.linear.FieldLUDecompositionImplTest, org.apache.commons.math.linear.FieldMatrixImplTest, org.apache.commons.math.linear.FrenchRealVectorFormatTest, org.apache.commons.math.linear.InvalidMatrixExceptionTest, org.apache.commons.math.linear.LUDecompositionImplTest, org.apache.commons.math.linear.LUSolverTest, org.apache.commons.math.linear.MatrixIndexExceptionTest, org.apache.commons.math.linear.MatrixUtilsTest, org.apache.commons.math.linear.QRDecompositionImplTest, org.apache.commons.math.linear.QRSolverTest, org.apache.commons.math.linear.RealMatrixImplTest, org.apache.commons.math.linear.RealVectorFormatTest, org.apache.commons.math.linear.SingularValueDecompositionImplTest, org.apache.commons.math.linear.SingularValueSolverTest, org.apache.commons.math.linear.SparseFieldMatrixTest, org.apache.commons.math.linear.SparseFieldVectorTest, org.apache.commons.math.linear.SparseRealMatrixTest, org.apache.commons.math.linear.SparseRealVectorTest, org.apache.commons.math.linear.TriDiagonalTransformerTest, org.apache.commons.math.ode.ContinuousOutputModelTest, org.apache.commons.math.ode.FirstOrderConverterTest, org.apache.commons.math.ode.events.EventStateTest, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GillIntegratorTest, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math.ode.sampling.StepNormalizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest, org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest, org.apache.commons.math.optimization.direct.MultiDirectionalTest, org.apache.commons.math.optimization.direct.NelderMeadTest, org.apache.commons.math.optimization.fitting.CurveFitterTest, org.apache.commons.math.optimization.fitting.HarmonicFitterTest, org.apache.commons.math.optimization.fitting.PolynomialFitterTest, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math.optimization.general.MinpackTest, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math.optimization.linear.SimplexSolverTest, org.apache.commons.math.optimization.linear.SimplexTableauTest, org.apache.commons.math.optimization.univariate.BrentMinimizerTest, org.apache.commons.math.random.AbstractRandomGeneratorTest, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.EmpiricalDistributionTest, org.apache.commons.math.random.GaussianRandomGeneratorTest, org.apache.commons.math.random.MersenneTwisterTest, org.apache.commons.math.random.RandomAdaptorTest, org.apache.commons.math.random.RandomDataTest, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math.random.UniformRandomGeneratorTest, org.apache.commons.math.random.ValueServerTest, org.apache.commons.math.special.BetaTest, org.apache.commons.math.special.ErfTest, org.apache.commons.math.special.GammaTest, org.apache.commons.math.stat.CertifiedDataTest, org.apache.commons.math.stat.FrequencyTest, org.apache.commons.math.stat.StatUtilsTest, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math.stat.correlation.CovarianceTest, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math.stat.data.LewTest, org.apache.commons.math.stat.data.LotteryTest, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.InteractionTest, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math.stat.descriptive.moment.KurtosisTest, org.apache.commons.math.stat.descriptive.moment.MeanTest, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math.stat.descriptive.moment.SkewnessTest, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math.stat.descriptive.moment.VarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math.stat.descriptive.rank.MaxTest, org.apache.commons.math.stat.descriptive.rank.MedianTest, org.apache.commons.math.stat.descriptive.rank.MinTest, org.apache.commons.math.stat.descriptive.rank.PercentileTest, org.apache.commons.math.stat.descriptive.summary.ProductTest, org.apache.commons.math.stat.descriptive.summary.SumLogTest, org.apache.commons.math.stat.descriptive.summary.SumSqTest, org.apache.commons.math.stat.descriptive.summary.SumTest, org.apache.commons.math.stat.inference.ChiSquareFactoryTest, org.apache.commons.math.stat.inference.ChiSquareTestTest, org.apache.commons.math.stat.inference.OneWayAnovaTest, org.apache.commons.math.stat.inference.TTestFactoryTest, org.apache.commons.math.stat.inference.TTestTest, org.apache.commons.math.stat.inference.TestUtilsTest, org.apache.commons.math.stat.ranking.NaturalRankingTest, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math.stat.regression.SimpleRegressionTest, org.apache.commons.math.transform.FastCosineTransformerTest, org.apache.commons.math.transform.FastFourierTransformerTest, org.apache.commons.math.transform.FastHadamardTransformerTest, org.apache.commons.math.transform.FastSineTransformerTest, org.apache.commons.math.util.BigRealFieldTest, org.apache.commons.math.util.BigRealTest, org.apache.commons.math.util.ContinuedFractionTest, org.apache.commons.math.util.DefaultTransformerTest, org.apache.commons.math.util.MathUtilsTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest, org.apache.commons.math.util.OpenIntToFieldTest, org.apache.commons.math.util.ResizableDoubleArrayTest, org.apache.commons.math.util.TransformerMapTest], complianceLevel=7, outputFolder=., json=true}
08:53:55.360 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 4
08:53:55.365 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 930 MB
08:53:55.366 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
08:53:55.366 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 981 MB
08:53:55.366 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
08:53:55.367 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
08:53:55.367 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
08:54:15.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
08:54:15.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:293 which is executed by 4 tests
-1130256400
08:54:16.079 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
08:54:16.079 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:289 which is executed by 4 tests
-1130256400
08:54:16.193 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:16.252 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (32 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:54:17.475 [pool-5-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (20 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:54:17.477 [pool-6-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:17.479 [pool-7-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:17.481 [pool-8-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:17.482 [pool-3-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:17.482 [pool-3-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:17.483 [pool-3-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:289.
08:54:17.483 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
08:54:17.483 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:288 which is executed by 4 tests
-1130256400
08:54:17.594 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:17.624 [pool-10-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:54:17.913 [pool-11-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:54:17.922 [pool-12-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:17.925 [pool-13-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:17.927 [pool-14-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:17.930 [pool-9-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:17.931 [pool-9-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:17.931 [pool-9-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:288.
08:54:17.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:17.972 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (26 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:54:18.235 [pool-17-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:54:18.237 [pool-18-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:18.240 [pool-19-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:18.242 [pool-20-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:18.243 [pool-15-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:18.243 [pool-15-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:18.243 [pool-15-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:288.
08:54:18.243 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
08:54:18.243 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:225 which is executed by 7 tests
-1130256400
08:54:18.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
08:54:18.336 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:222 which is executed by 7 tests
-1130256400
08:54:18.427 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:18.456 [pool-22-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:54:18.689 [pool-23-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:54:18.691 [pool-24-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:18.694 [pool-25-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:18.696 [pool-26-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:18.700 [pool-21-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:18.700 [pool-21-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:18.700 [pool-21-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:222.
08:54:18.700 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
08:54:18.700 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:219 which is executed by 7 tests
-1130256400
08:54:18.790 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:18.829 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:54:19.106 [pool-29-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:54:19.115 [pool-30-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:19.118 [pool-31-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:19.120 [pool-32-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:19.121 [pool-27-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:19.121 [pool-27-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:19.121 [pool-27-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:219.
08:54:19.121 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:19.156 [pool-34-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:54:19.375 [pool-35-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:54:19.378 [pool-36-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:650)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:19.392 [pool-37-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:19.393 [pool-38-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:19.394 [pool-33-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:19.394 [pool-33-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:19.394 [pool-33-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:219.
08:54:19.394 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
08:54:19.394 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:184 which is executed by 7 tests
-1130256400
08:54:19.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:19.517 [pool-40-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:19.741 [pool-41-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:19.743 [pool-42-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:19.745 [pool-43-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:19.746 [pool-44-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:19.753 [pool-39-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:19.753 [pool-39-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:19.753 [pool-39-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:184.
08:54:19.753 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
08:54:19.753 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:206 which is executed by 9 tests
1308483921
08:54:19.873 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
08:54:19.874 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:204 which is executed by 9 tests
1308483921
08:54:19.987 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:20.015 [pool-46-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:20.301 [pool-47-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:20.304 [pool-48-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:20.305 [pool-49-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:20.306 [pool-50-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:20.308 [pool-45-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:20.308 [pool-45-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:20.308 [pool-45-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.MatrixUtils:204.
08:54:20.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
08:54:20.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:203 which is executed by 9 tests
1308483921
08:54:20.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:20.448 [pool-52-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:20.741 [pool-53-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:20.743 [pool-54-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:20.744 [pool-55-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:20.745 [pool-56-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:20.746 [pool-51-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:20.746 [pool-51-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:20.746 [pool-51-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.MatrixUtils:203.
08:54:20.746 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
08:54:20.746 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:202 which is executed by 9 tests
1308483921
08:54:20.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
08:54:20.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:198 which is executed by 11 tests
-1130256400
08:54:20.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
08:54:20.948 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:188 which is executed by 11 tests
-1130256400
08:54:21.037 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
08:54:21.037 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:187 which is executed by 11 tests
-1130256400
08:54:21.128 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
08:54:21.128 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:186 which is executed by 11 tests
-1130256400
08:54:21.217 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:21.249 [pool-58-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (27 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
08:54:21.452 [pool-59-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
08:54:21.455 [pool-60-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:21.458 [pool-61-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:21.459 [pool-62-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:21.459 [pool-57-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:21.459 [pool-57-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:21.460 [pool-57-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:186.
08:54:21.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
08:54:21.460 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:183 which is executed by 11 tests
-1130256400
08:54:21.565 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:21.593 [pool-64-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:21.792 [pool-65-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:21.794 [pool-66-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:21.797 [pool-67-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:21.800 [pool-68-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:21.804 [pool-63-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:21.804 [pool-63-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:21.804 [pool-63-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:183.
08:54:21.804 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
08:54:21.804 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:181 which is executed by 11 tests
-1130256400
08:54:21.894 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:21.923 [pool-70-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<1.4285714285714217>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:22.147 [pool-71-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<1.4285714285714217>]
java.lang.AssertionError: expected:<0.0> but was:<1.4285714285714217>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:22.148 [pool-72-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:22.149 [pool-73-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:22.151 [pool-74-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:22.151 [pool-69-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<1.4285714285714217>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:22.151 [pool-69-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:22.151 [pool-69-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:181.
08:54:22.151 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
08:54:22.151 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:180 which is executed by 11 tests
-1130256400
08:54:22.239 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:22.266 [pool-76-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<1.4285714285714217>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:22.497 [pool-77-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (19 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<1.4285714285714217>]
java.lang.AssertionError: expected:<0.0> but was:<1.4285714285714217>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:22.499 [pool-78-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:22.501 [pool-79-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:22.504 [pool-80-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:22.504 [pool-75-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<1.4285714285714217>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:22.504 [pool-75-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:22.504 [pool-75-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:180.
08:54:22.504 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
08:54:22.504 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:179 which is executed by 11 tests
-1130256400
08:54:22.610 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
08:54:22.611 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:178 which is executed by 11 tests
-1130256400
08:54:22.731 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
08:54:22.732 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:166 which is executed by 11 tests
-1130256400
08:54:22.819 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:22.846 [pool-82-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<13.947436504980086>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:23.031 [pool-83-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<13.947436504980086>]
java.lang.AssertionError: expected:<0.0> but was:<13.947436504980086>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:23.033 [pool-84-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:23.035 [pool-85-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:23.037 [pool-86-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:23.037 [pool-81-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<13.947436504980086>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:23.037 [pool-81-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:23.038 [pool-81-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:166.
08:54:23.038 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
08:54:23.038 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:165 which is executed by 11 tests
-1130256400
08:54:23.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
08:54:23.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:164 which is executed by 11 tests
-1130256400
08:54:23.211 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
08:54:23.211 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:163 which is executed by 11 tests
-1130256400
08:54:23.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
08:54:23.296 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:162 which is executed by 11 tests
-1130256400
08:54:23.384 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
08:54:23.384 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:161 which is executed by 11 tests
-1130256400
08:54:23.470 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
08:54:23.470 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:159 which is executed by 11 tests
-1130256400
08:54:23.559 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:23.587 [pool-88-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
08:54:23.765 [pool-89-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
08:54:23.768 [pool-90-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:23.775 [pool-91-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:23.777 [pool-92-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:23.777 [pool-87-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:23.777 [pool-87-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:23.777 [pool-87-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:159.
08:54:23.777 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:23.806 [pool-94-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<20.900808951227496>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:23.995 [pool-95-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<20.900808951227496>]
java.lang.AssertionError: expected:<0.0> but was:<20.900808951227496>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<5.7888543819998315>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:23.997 [pool-96-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<5.7888543819998315>]
java.lang.AssertionError: expected:<0.0> but was:<5.7888543819998315>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:23.998 [pool-97-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:23.998 [pool-98-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:23.999 [pool-93-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<20.900808951227496>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<5.7888543819998315>]
08:54:23.999 [pool-93-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:23.999 [pool-93-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:159.
08:54:23.999 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
08:54:23.999 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:158 which is executed by 11 tests
-1130256400
08:54:24.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
08:54:24.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:156 which is executed by 11 tests
-1130256400
08:54:24.179 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:24.206 [pool-100-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
08:54:24.388 [pool-101-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
08:54:24.390 [pool-102-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:24.396 [pool-103-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:24.398 [pool-104-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:24.398 [pool-99-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:24.398 [pool-99-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:24.398 [pool-99-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:156.
08:54:24.398 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:24.425 [pool-106-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
08:54:24.622 [pool-107-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
08:54:24.623 [pool-108-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:24.630 [pool-109-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:24.631 [pool-110-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:24.631 [pool-105-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:24.631 [pool-105-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:24.631 [pool-105-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:156.
08:54:24.631 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
08:54:24.631 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:280 which is executed by 12 tests
-1130256400
08:54:24.719 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
08:54:24.720 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:246 which is executed by 12 tests
-1130256400
08:54:24.806 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
08:54:24.806 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:245 which is executed by 12 tests
-1130256400
08:54:24.892 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:24.920 [pool-112-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:186)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
08:54:25.100 [pool-113-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:186)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:186)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
08:54:25.101 [pool-114-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:186)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:25.103 [pool-115-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:25.104 [pool-116-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:25.104 [pool-111-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:25.104 [pool-111-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:25.104 [pool-111-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:245.
08:54:25.104 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
08:54:25.104 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:244 which is executed by 12 tests
-1130256400
08:54:25.192 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
08:54:25.192 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:243 which is executed by 12 tests
-1130256400
08:54:25.278 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
08:54:25.279 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:241 which is executed by 12 tests
-1130256400
08:54:25.366 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:25.396 [pool-118-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:184)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
08:54:25.575 [pool-119-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:184)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:184)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
08:54:25.579 [pool-120-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:184)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:25.581 [pool-121-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:25.582 [pool-122-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:25.582 [pool-117-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:25.582 [pool-117-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:25.582 [pool-117-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:241.
08:54:25.582 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:25.608 [pool-124-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<24.14966052720429>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:25.788 [pool-125-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<24.14966052720429>]
java.lang.AssertionError: expected:<0.0> but was:<24.14966052720429>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:25.789 [pool-126-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:25.791 [pool-127-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:25.792 [pool-128-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:25.792 [pool-123-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<24.14966052720429>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:25.792 [pool-123-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:25.792 [pool-123-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:241.
08:54:25.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
08:54:25.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:240 which is executed by 12 tests
-1130256400
08:54:25.879 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
08:54:25.879 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:238 which is executed by 12 tests
-1130256400
08:54:25.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:25.995 [pool-130-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:184)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
08:54:26.185 [pool-131-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:184)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:184)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
08:54:26.186 [pool-132-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:184)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:26.192 [pool-133-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:26.194 [pool-134-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:26.194 [pool-129-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:26.194 [pool-129-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:26.194 [pool-129-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:238.
08:54:26.194 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:26.221 [pool-136-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:184)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
08:54:26.416 [pool-137-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:184)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:184)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
08:54:26.417 [pool-138-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:184)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:26.419 [pool-139-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:26.420 [pool-140-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:26.420 [pool-135-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:26.420 [pool-135-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:26.420 [pool-135-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:238.
08:54:26.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
08:54:26.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:196 which is executed by 16 tests
1647785406
08:54:26.522 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:26.552 [pool-142-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<27.197941781403024>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:26.723 [pool-143-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<27.197941781403024>]
java.lang.AssertionError: expected:<0.0> but was:<27.197941781403024>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.800000000000001>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:26.724 [pool-144-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.800000000000001>]
java.lang.AssertionError: expected:<0.0> but was:<4.800000000000001>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:26.725 [pool-145-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:26.726 [pool-146-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:26.727 [pool-141-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<27.197941781403024>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.800000000000001>]
08:54:26.727 [pool-141-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:26.727 [pool-141-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:196.
08:54:26.727 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
08:54:26.727 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:195 which is executed by 16 tests
1647785406
08:54:26.830 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:26.867 [pool-148-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<27.197941781403024>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:27.043 [pool-149-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<27.197941781403024>]
java.lang.AssertionError: expected:<0.0> but was:<27.197941781403024>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.800000000000001>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:27.044 [pool-150-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.800000000000001>]
java.lang.AssertionError: expected:<0.0> but was:<4.800000000000001>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:27.051 [pool-151-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:27.052 [pool-152-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:27.053 [pool-147-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<27.197941781403024>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.800000000000001>]
08:54:27.053 [pool-147-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:27.053 [pool-147-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:195.
08:54:27.053 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
08:54:27.054 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:193 which is executed by 16 tests
1647785406
08:54:27.158 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:27.186 [pool-154-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4818.149644722711>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:27.347 [pool-155-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4818.149644722711>]
java.lang.AssertionError: expected:<0.0> but was:<4818.149644722711>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<30.399999999999995>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:27.351 [pool-156-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<30.399999999999995>]
java.lang.AssertionError: expected:<0.0> but was:<30.399999999999995>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:27.352 [pool-157-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:27.353 [pool-158-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:27.353 [pool-153-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4818.149644722711>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<30.399999999999995>]
08:54:27.353 [pool-153-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:27.353 [pool-153-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:193.
08:54:27.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
08:54:27.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:191 which is executed by 16 tests
1647785406
08:54:27.434 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:27.929 [pool-160-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<27.197941781403024>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:28.088 [pool-161-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<27.197941781403024>]
java.lang.AssertionError: expected:<0.0> but was:<27.197941781403024>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.800000000000001>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:28.089 [pool-162-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.800000000000001>]
java.lang.AssertionError: expected:<0.0> but was:<4.800000000000001>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:28.090 [pool-163-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:28.091 [pool-164-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:28.091 [pool-159-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<27.197941781403024>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.800000000000001>]
08:54:28.091 [pool-159-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:28.091 [pool-159-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:191.
08:54:28.091 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
08:54:28.091 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:190 which is executed by 16 tests
1647785406
08:54:28.172 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:28.198 [pool-166-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<27.197941781403024>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:28.335 [pool-167-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<27.197941781403024>]
java.lang.AssertionError: expected:<0.0> but was:<27.197941781403024>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.800000000000001>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:28.336 [pool-168-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.800000000000001>]
java.lang.AssertionError: expected:<0.0> but was:<4.800000000000001>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:28.337 [pool-169-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:28.337 [pool-170-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:28.337 [pool-165-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<27.197941781403024>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.800000000000001>]
08:54:28.337 [pool-165-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:28.338 [pool-165-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:190.
08:54:28.338 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
08:54:28.338 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:189 which is executed by 16 tests
1647785406
08:54:28.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
08:54:28.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:188 which is executed by 16 tests
1647785406
08:54:28.499 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:28.525 [pool-172-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<27.197941781403024>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:28.667 [pool-173-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<27.197941781403024>]
java.lang.AssertionError: expected:<0.0> but was:<27.197941781403024>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.800000000000001>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:28.668 [pool-174-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.800000000000001>]
java.lang.AssertionError: expected:<0.0> but was:<4.800000000000001>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:28.669 [pool-175-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:28.671 [pool-176-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:28.671 [pool-171-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<27.197941781403024>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.800000000000001>]
08:54:28.671 [pool-171-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:28.671 [pool-171-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:188.
08:54:28.671 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
08:54:28.671 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:127 which is executed by 16 tests
1647785406
08:54:28.752 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
08:54:28.752 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:120 which is executed by 16 tests
1647785406
08:54:28.832 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:28.859 [pool-178-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:28.996 [pool-179-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:28.997 [pool-180-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:28.999 [pool-181-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.000 [pool-182-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:29.000 [pool-177-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:29.000 [pool-177-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:29.000 [pool-177-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:120.
08:54:29.000 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.025 [pool-184-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.158 [pool-185-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.159 [pool-186-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<10.892806802185609>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.160 [pool-187-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<10.892806802185609>]
java.lang.AssertionError: expected:<0.0> but was:<10.892806802185609>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.165685424949238>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.161 [pool-188-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.165685424949238>]
java.lang.AssertionError: expected:<0.0> but was:<4.165685424949238>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:29.161 [pool-183-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:29.161 [pool-183-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<10.892806802185609>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.165685424949238>]
08:54:29.161 [pool-183-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:120.
08:54:29.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
08:54:29.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:115 which is executed by 16 tests
1647785406
08:54:29.247 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.273 [pool-190-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<21.662010533850374>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.427 [pool-191-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<21.662010533850374>]
java.lang.AssertionError: expected:<0.0> but was:<21.662010533850374>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.565685424949239>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.428 [pool-192-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.565685424949239>]
java.lang.AssertionError: expected:<0.0> but was:<4.565685424949239>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.429 [pool-193-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.430 [pool-194-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:29.431 [pool-189-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<21.662010533850374>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.565685424949239>]
08:54:29.431 [pool-189-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:29.431 [pool-189-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:115.
08:54:29.432 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
08:54:29.432 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:114 which is executed by 16 tests
1647785406
08:54:29.512 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.544 [pool-196-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<21.662010533850374>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.686 [pool-197-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<21.662010533850374>]
java.lang.AssertionError: expected:<0.0> but was:<21.662010533850374>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.565685424949239>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.687 [pool-198-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.565685424949239>]
java.lang.AssertionError: expected:<0.0> but was:<4.565685424949239>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.688 [pool-199-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.689 [pool-200-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:29.689 [pool-195-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<21.662010533850374>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.565685424949239>]
08:54:29.689 [pool-195-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:29.689 [pool-195-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:114.
08:54:29.689 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
08:54:29.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:112 which is executed by 16 tests
1647785406
08:54:29.769 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.793 [pool-202-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<309.2567462935875>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.931 [pool-203-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<309.2567462935875>]
java.lang.AssertionError: expected:<0.0> but was:<309.2567462935875>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<9.228427124746194>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.932 [pool-204-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<9.228427124746194>]
java.lang.AssertionError: expected:<0.0> but was:<9.228427124746194>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.933 [pool-205-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:29.934 [pool-206-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:29.934 [pool-201-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<309.2567462935875>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<9.228427124746194>]
08:54:29.934 [pool-201-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:29.934 [pool-201-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:112.
08:54:29.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
08:54:29.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:110 which is executed by 16 tests
1647785406
08:54:30.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:30.040 [pool-208-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<21.662010533850374>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:30.182 [pool-209-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<21.662010533850374>]
java.lang.AssertionError: expected:<0.0> but was:<21.662010533850374>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.565685424949239>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:30.183 [pool-210-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.565685424949239>]
java.lang.AssertionError: expected:<0.0> but was:<4.565685424949239>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:30.184 [pool-211-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:30.185 [pool-212-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:30.186 [pool-207-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<21.662010533850374>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.565685424949239>]
08:54:30.186 [pool-207-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:30.186 [pool-207-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:110.
08:54:30.186 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
08:54:30.186 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:109 which is executed by 16 tests
1647785406
08:54:30.272 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:30.305 [pool-214-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<21.662010533850374>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:30.459 [pool-215-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<21.662010533850374>]
java.lang.AssertionError: expected:<0.0> but was:<21.662010533850374>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.565685424949239>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:30.460 [pool-216-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.565685424949239>]
java.lang.AssertionError: expected:<0.0> but was:<4.565685424949239>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:30.461 [pool-217-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:30.462 [pool-218-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:30.462 [pool-213-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<21.662010533850374>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.565685424949239>]
08:54:30.462 [pool-213-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:30.462 [pool-213-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:109.
08:54:30.463 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
08:54:30.463 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:108 which is executed by 16 tests
1647785406
08:54:30.560 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
08:54:30.560 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:107 which is executed by 16 tests
1647785406
08:54:30.662 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:30.687 [pool-220-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<21.662010533850374>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:30.841 [pool-221-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<21.662010533850374>]
java.lang.AssertionError: expected:<0.0> but was:<21.662010533850374>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.565685424949239>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:30.842 [pool-222-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.565685424949239>]
java.lang.AssertionError: expected:<0.0> but was:<4.565685424949239>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:30.843 [pool-223-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:30.844 [pool-224-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:30.844 [pool-219-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<21.662010533850374>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.565685424949239>]
08:54:30.844 [pool-219-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:30.845 [pool-219-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:107.
08:54:30.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
08:54:30.845 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:106 which is executed by 16 tests
1647785406
08:54:30.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:30.981 [pool-226-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<21.662010533850374>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.118 [pool-227-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<21.662010533850374>]
java.lang.AssertionError: expected:<0.0> but was:<21.662010533850374>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.565685424949239>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.123 [pool-228-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.565685424949239>]
java.lang.AssertionError: expected:<0.0> but was:<4.565685424949239>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.123 [pool-229-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.124 [pool-230-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:31.124 [pool-225-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<21.662010533850374>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.565685424949239>]
08:54:31.124 [pool-225-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:31.124 [pool-225-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:106.
08:54:31.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.149 [pool-232-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<21.662010533850374>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.290 [pool-233-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<21.662010533850374>]
java.lang.AssertionError: expected:<0.0> but was:<21.662010533850374>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.565685424949239>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.291 [pool-234-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.565685424949239>]
java.lang.AssertionError: expected:<0.0> but was:<4.565685424949239>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.292 [pool-235-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.293 [pool-236-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:31.293 [pool-231-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<21.662010533850374>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.565685424949239>]
08:54:31.293 [pool-231-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<NaN>]
08:54:31.293 [pool-231-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:106.
08:54:31.293 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
08:54:31.293 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:105 which is executed by 16 tests
1647785406
08:54:31.373 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.398 [pool-238-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.534 [pool-239-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.535 [pool-240-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.536 [pool-241-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.537 [pool-242-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:31.537 [pool-237-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:31.537 [pool-237-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:31.537 [pool-237-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:105.
08:54:31.537 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
08:54:31.537 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:104 which is executed by 16 tests
1647785406
08:54:31.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
08:54:31.617 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:103 which is executed by 16 tests
1647785406
08:54:31.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.721 [pool-244-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.850 [pool-245-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.851 [pool-246-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.852 [pool-247-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.853 [pool-248-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:31.853 [pool-243-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:31.853 [pool-243-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:31.853 [pool-243-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:103.
08:54:31.853 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
08:54:31.853 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:98 which is executed by 16 tests
1647785406
08:54:31.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:31.957 [pool-250-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:32.087 [pool-251-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:32.088 [pool-252-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:32.088 [pool-253-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:32.089 [pool-254-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:32.089 [pool-249-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:32.089 [pool-249-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:32.089 [pool-249-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:98.
08:54:32.089 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
08:54:32.089 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:95 which is executed by 16 tests
1647785406
08:54:32.168 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:32.193 [pool-256-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.BiDiagonalTransformer.getU(BiDiagonalTransformer.java:69)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:187)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
08:54:32.328 [pool-257-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.BiDiagonalTransformer.getU(BiDiagonalTransformer.java:69)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:187)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.NullPointerException
    at org.apache.commons.math.linear.BiDiagonalTransformer.getU(BiDiagonalTransformer.java:69)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:187)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
08:54:32.329 [pool-258-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.BiDiagonalTransformer.getU(BiDiagonalTransformer.java:69)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:187)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:32.353 [pool-259-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:32.354 [pool-260-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:32.354 [pool-255-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:32.354 [pool-255-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:32.354 [pool-255-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:95.
08:54:32.354 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
08:54:32.354 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:94 which is executed by 16 tests
1647785406
08:54:32.435 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
08:54:32.435 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:93 which is executed by 16 tests
1647785406
08:54:32.515 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
08:54:32.515 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:92 which is executed by 16 tests
1647785406
08:54:32.594 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
08:54:32.594 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:91 which is executed by 16 tests
1647785406
08:54:32.677 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
08:54:32.677 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:90 which is executed by 16 tests
1647785406
08:54:32.761 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
08:54:32.761 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:88 which is executed by 16 tests
1647785406
08:54:32.842 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:32.866 [pool-262-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:187)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
08:54:33.003 [pool-263-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:187)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:187)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
08:54:33.004 [pool-264-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:187)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:33.005 [pool-265-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:33.006 [pool-266-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:33.006 [pool-261-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:33.006 [pool-261-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:33.006 [pool-261-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:88.
08:54:33.006 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:33.031 [pool-268-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:187)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
08:54:33.168 [pool-269-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:187)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:187)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
08:54:33.169 [pool-270-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:187)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:33.170 [pool-271-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:33.171 [pool-272-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:33.171 [pool-267-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:33.171 [pool-267-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:33.171 [pool-267-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:88.
08:54:33.171 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
08:54:33.171 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:239 which is executed by 17 tests
1647785406
08:54:33.251 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
08:54:33.251 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:229 which is executed by 17 tests
1647785406
08:54:33.330 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
08:54:33.330 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:208 which is executed by 17 tests
1647785406
08:54:33.410 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
08:54:33.410 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:202 which is executed by 17 tests
1647785406
08:54:33.506 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:33.530 [pool-274-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<6.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:33.659 [pool-275-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<6.0>]
java.lang.AssertionError: expected:<0.0> but was:<6.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:33.660 [pool-276-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:33.660 [pool-277-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:33.661 [pool-278-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:33.661 [pool-273-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<6.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:33.661 [pool-273-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:33.661 [pool-273-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:202.
08:54:33.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
08:54:33.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:201 which is executed by 17 tests
1647785406
08:54:33.743 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:33.768 [pool-280-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<6.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:33.909 [pool-281-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<6.0>]
java.lang.AssertionError: expected:<0.0> but was:<6.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:33.910 [pool-282-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:33.921 [pool-283-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:33.922 [pool-284-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:33.922 [pool-279-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<6.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:33.922 [pool-279-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:33.922 [pool-279-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:201.
08:54:33.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:33.946 [pool-286-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<6.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.079 [pool-287-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<6.0>]
java.lang.AssertionError: expected:<0.0> but was:<6.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.080 [pool-288-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.080 [pool-289-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.081 [pool-290-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:34.081 [pool-285-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<6.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:34.081 [pool-285-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:34.081 [pool-285-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:201.
08:54:34.081 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
08:54:34.081 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:187 which is executed by 17 tests
1647785406
08:54:34.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.185 [pool-292-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<27.197941781403024>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.314 [pool-293-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<27.197941781403024>]
java.lang.AssertionError: expected:<0.0> but was:<27.197941781403024>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.800000000000001>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.315 [pool-294-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.800000000000001>]
java.lang.AssertionError: expected:<0.0> but was:<4.800000000000001>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.316 [pool-295-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.316 [pool-296-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:34.316 [pool-291-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<27.197941781403024>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.800000000000001>]
08:54:34.317 [pool-291-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:34.317 [pool-291-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:187.
08:54:34.317 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.340 [pool-298-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<27.197941781403024>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.470 [pool-299-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<27.197941781403024>]
java.lang.AssertionError: expected:<0.0> but was:<27.197941781403024>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.800000000000001>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.471 [pool-300-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.800000000000001>]
java.lang.AssertionError: expected:<0.0> but was:<4.800000000000001>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.471 [pool-301-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.472 [pool-302-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:34.472 [pool-297-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<27.197941781403024>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.800000000000001>]
08:54:34.472 [pool-297-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:34.472 [pool-297-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:187.
08:54:34.472 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
08:54:34.472 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:186 which is executed by 17 tests
1647785406
08:54:34.551 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.576 [pool-304-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.712 [pool-305-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.713 [pool-306-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.714 [pool-307-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.714 [pool-308-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:34.714 [pool-303-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:34.714 [pool-303-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:34.714 [pool-303-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:186.
08:54:34.715 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
08:54:34.715 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:185 which is executed by 17 tests
1647785406
08:54:34.794 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
08:54:34.794 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:184 which is executed by 17 tests
1647785406
08:54:34.873 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:34.898 [pool-310-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:35.027 [pool-311-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:35.028 [pool-312-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:35.029 [pool-313-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:35.029 [pool-314-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:35.030 [pool-309-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:35.030 [pool-309-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:35.030 [pool-309-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:184.
08:54:35.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
08:54:35.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:179 which is executed by 17 tests
1647785406
08:54:35.109 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:35.134 [pool-316-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:35.264 [pool-317-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:35.265 [pool-318-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:35.265 [pool-319-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:35.266 [pool-320-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:35.266 [pool-315-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:35.266 [pool-315-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:35.266 [pool-315-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:179.
08:54:35.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
08:54:35.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:176 which is executed by 17 tests
1647785406
08:54:35.348 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:35.373 [pool-322-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.BiDiagonalTransformer.getV(BiDiagonalTransformer.java:124)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(SingularValueDecompositionImpl.java:245)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:289)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:54:35.508 [pool-323-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.BiDiagonalTransformer.getV(BiDiagonalTransformer.java:124)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(SingularValueDecompositionImpl.java:245)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:289)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at org.apache.commons.math.linear.BiDiagonalTransformer.getV(BiDiagonalTransformer.java:124)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(SingularValueDecompositionImpl.java:245)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:289)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:54:35.509 [pool-324-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.BiDiagonalTransformer.getV(BiDiagonalTransformer.java:124)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(SingularValueDecompositionImpl.java:245)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:289)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:35.510 [pool-325-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:35.511 [pool-326-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:35.511 [pool-321-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:35.511 [pool-321-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:35.511 [pool-321-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:176.
08:54:35.511 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
08:54:35.511 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:175 which is executed by 17 tests
1647785406
08:54:35.590 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
08:54:35.590 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:174 which is executed by 17 tests
1647785406
08:54:35.669 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
08:54:35.669 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:173 which is executed by 17 tests
1647785406
08:54:35.748 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
08:54:35.749 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:172 which is executed by 17 tests
1647785406
08:54:35.827 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
08:54:35.827 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:171 which is executed by 17 tests
1647785406
08:54:35.912 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
08:54:35.912 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:169 which is executed by 17 tests
1647785406
08:54:35.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:36.018 [pool-328-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(SingularValueDecompositionImpl.java:245)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:289)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
08:54:36.146 [pool-329-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(SingularValueDecompositionImpl.java:245)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:289)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(SingularValueDecompositionImpl.java:245)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:289)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
08:54:36.147 [pool-330-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(SingularValueDecompositionImpl.java:245)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:289)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:36.149 [pool-331-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:36.149 [pool-332-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:36.150 [pool-327-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:36.150 [pool-327-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:36.150 [pool-327-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:169.
08:54:36.150 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:36.175 [pool-334-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(SingularValueDecompositionImpl.java:245)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:289)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
08:54:36.304 [pool-335-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(SingularValueDecompositionImpl.java:245)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:289)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(SingularValueDecompositionImpl.java:245)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:289)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
08:54:36.305 [pool-336-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(SingularValueDecompositionImpl.java:245)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(SingularValueDecompositionImpl.java:289)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:36.308 [pool-337-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:36.308 [pool-338-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:36.309 [pool-333-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:36.309 [pool-333-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:36.309 [pool-333-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:169.
08:54:36.309 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
08:54:36.309 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:272 which is executed by 19 tests
-464947810
08:54:36.439 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
08:54:36.439 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:266 which is executed by 19 tests
-464947810
08:54:36.560 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:36.585 [pool-340-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:37.038 [pool-341-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:37.039 [pool-342-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:37.040 [pool-343-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:37.040 [pool-344-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:37.040 [pool-339-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:37.041 [pool-339-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:37.041 [pool-339-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:266.
08:54:37.041 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
08:54:37.041 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:265 which is executed by 19 tests
-464947810
08:54:37.188 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:37.213 [pool-346-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:37.598 [pool-347-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:37.599 [pool-348-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:37.600 [pool-349-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:37.600 [pool-350-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:37.600 [pool-345-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:37.600 [pool-345-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:37.600 [pool-345-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:265.
08:54:37.601 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
08:54:37.601 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:264 which is executed by 19 tests
-464947810
08:54:37.715 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:37.740 [pool-352-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:167)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
08:54:38.027 [pool-353-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:167)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.NullPointerException
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:167)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
08:54:38.028 [pool-354-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:167)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:38.033 [pool-355-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:38.034 [pool-356-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:38.034 [pool-351-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:38.034 [pool-351-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:38.034 [pool-351-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:264.
08:54:38.034 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
08:54:38.034 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:263 which is executed by 19 tests
-464947810
08:54:38.146 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
08:54:38.146 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:260 which is executed by 19 tests
-464947810
08:54:38.257 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:38.282 [pool-358-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:163)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
08:54:38.557 [pool-359-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:163)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.NullPointerException
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:163)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
08:54:38.558 [pool-360-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:163)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:38.569 [pool-361-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:38.570 [pool-362-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:38.570 [pool-357-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:38.570 [pool-357-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:38.570 [pool-357-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:260.
08:54:38.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
08:54:38.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:259 which is executed by 19 tests
-464947810
08:54:38.682 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:38.707 [pool-364-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:163)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
08:54:38.978 [pool-365-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:163)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.NullPointerException
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:163)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
08:54:38.979 [pool-366-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:163)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:38.990 [pool-367-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:38.991 [pool-368-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:38.991 [pool-363-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:38.991 [pool-363-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:38.991 [pool-363-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:259.
08:54:38.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:39.015 [pool-370-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:163)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
08:54:39.286 [pool-371-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:163)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.NullPointerException
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:163)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
08:54:39.287 [pool-372-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:163)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:39.297 [pool-373-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:39.298 [pool-374-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:39.298 [pool-369-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:39.298 [pool-369-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:39.298 [pool-369-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:259.
08:54:39.298 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
08:54:39.299 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:257 which is executed by 19 tests
-464947810
08:54:39.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:39.436 [pool-376-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
08:54:39.700 [pool-377-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
08:54:39.701 [pool-378-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:39.711 [pool-379-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:39.712 [pool-380-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:39.715 [pool-375-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:39.715 [pool-375-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:39.715 [pool-375-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:257.
08:54:39.715 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:39.740 [pool-382-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
08:54:40.004 [pool-383-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.NullPointerException
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
08:54:40.007 [pool-384-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:40.019 [pool-385-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:40.020 [pool-386-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:40.027 [pool-381-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:54:40.027 [pool-381-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:40.027 [pool-381-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:257.
08:54:40.027 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
08:54:40.027 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:231 which is executed by 5 tests
-1130256400
08:54:40.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
08:54:40.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:274 which is executed by 20 tests
816641250
08:54:40.215 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
08:54:40.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:270 which is executed by 20 tests
816641250
08:54:40.321 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:40.348 [pool-388-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:40.724 [pool-389-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:40.725 [pool-390-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:40.726 [pool-391-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:40.727 [pool-392-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:40.727 [pool-387-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:40.727 [pool-387-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:40.727 [pool-387-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:270.
08:54:40.727 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
08:54:40.727 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:269 which is executed by 20 tests
816641250
08:54:40.830 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:40.855 [pool-394-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:41.198 [pool-395-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:41.199 [pool-396-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:41.199 [pool-397-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:41.200 [pool-398-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:41.200 [pool-393-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:41.200 [pool-393-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:41.200 [pool-393-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:269.
08:54:41.200 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
08:54:41.200 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:268 which is executed by 20 tests
816641250
08:54:41.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:41.325 [pool-400-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:41.666 [pool-401-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:41.667 [pool-402-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:41.668 [pool-403-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:41.668 [pool-404-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:41.668 [pool-399-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:41.668 [pool-399-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:41.668 [pool-399-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:268.
08:54:41.669 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
08:54:41.669 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:267 which is executed by 20 tests
816641250
08:54:41.771 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #97
08:54:41.772 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:266 which is executed by 20 tests
816641250
08:54:41.870 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #98
08:54:41.870 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:264 which is executed by 20 tests
816641250
08:54:41.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:41.993 [pool-406-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:42.333 [pool-407-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:42.333 [pool-408-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:42.334 [pool-409-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:42.335 [pool-410-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:42.335 [pool-405-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:42.335 [pool-405-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:42.335 [pool-405-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:264.
08:54:42.335 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #99
08:54:42.335 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:518 which is executed by 21 tests
816641250
08:54:42.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #100
08:54:42.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:515 which is executed by 21 tests
816641250
08:54:42.542 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:42.568 [pool-412-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:42.915 [pool-413-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:42.916 [pool-414-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:42.917 [pool-415-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:42.918 [pool-416-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:42.918 [pool-411-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:42.918 [pool-411-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:42.918 [pool-411-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:515.
08:54:42.918 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #101
08:54:42.919 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:514 which is executed by 21 tests
816641250
08:54:43.019 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:43.044 [pool-418-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:43.392 [pool-419-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:43.392 [pool-420-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:43.393 [pool-421-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:43.394 [pool-422-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:43.394 [pool-417-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:43.394 [pool-417-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:43.394 [pool-417-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:514.
08:54:43.394 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #102
08:54:43.394 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:509 which is executed by 21 tests
816641250
08:54:43.494 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:43.520 [pool-424-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:43.884 [pool-425-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:43.885 [pool-426-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:43.886 [pool-427-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:43.887 [pool-428-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:43.887 [pool-423-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:43.887 [pool-423-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:43.887 [pool-423-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:509.
08:54:43.887 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:43.913 [pool-430-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:44.268 [pool-431-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:44.269 [pool-432-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.linear.InvalidMatrixException: dimensions mismatch: got 3x1 but expected 3x1
    at org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(AbstractRealMatrix.java:320)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:266)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:54:44.275 [pool-433-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[dimensions mismatch: got 3x1 but expected 3x1]
org.apache.commons.math.linear.InvalidMatrixException: dimensions mismatch: got 3x1 but expected 3x1    at org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(AbstractRealMatrix.java:320)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:266)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

org.apache.commons.math.linear.InvalidMatrixException: dimensions mismatch: got 2x1 but expected 2x1
    at org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(AbstractRealMatrix.java:320)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:266)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:54:44.277 [pool-434-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[dimensions mismatch: got 2x1 but expected 2x1]
org.apache.commons.math.linear.InvalidMatrixException: dimensions mismatch: got 2x1 but expected 2x1    at org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(AbstractRealMatrix.java:320)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:266)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

08:54:44.277 [pool-429-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:44.277 [pool-429-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): dimensions mismatch: got 3x1 but expected 3x1, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): dimensions mismatch: got 2x1 but expected 2x1]
08:54:44.277 [pool-429-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:509.
08:54:44.278 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #103
08:54:44.278 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:508 which is executed by 21 tests
816641250
08:54:44.376 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #104
08:54:44.376 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:507 which is executed by 21 tests
816641250
08:54:44.475 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:44.502 [pool-436-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:44.831 [pool-437-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:44.834 [pool-438-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:44.834 [pool-439-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:44.835 [pool-440-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:44.835 [pool-435-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:44.835 [pool-435-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:44.835 [pool-435-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:507.
08:54:44.835 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #105
08:54:44.835 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:305 which is executed by 23 tests
1647785406
08:54:44.915 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:44.940 [pool-442-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<11.218599757513006> but was:<11.185713786405364>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.054 [pool-443-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<11.218599757513006> but was:<11.185713786405364>]
java.lang.AssertionError: expected:<11.218599757513006> but was:<11.185713786405364>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.064 [pool-444-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.065 [pool-445-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.065 [pool-446-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:45.065 [pool-441-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<11.218599757513006> but was:<11.185713786405364>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:45.065 [pool-441-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:45.065 [pool-441-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:305.
08:54:45.066 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #106
08:54:45.066 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:304 which is executed by 23 tests
1647785406
08:54:45.145 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.169 [pool-448-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<11.218599757513006> but was:<11.185713786405364>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.283 [pool-449-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<11.218599757513006> but was:<11.185713786405364>]
java.lang.AssertionError: expected:<11.218599757513006> but was:<11.185713786405364>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.293 [pool-450-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.293 [pool-451-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.294 [pool-452-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:45.294 [pool-447-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<11.218599757513006> but was:<11.185713786405364>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:45.294 [pool-447-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:45.294 [pool-447-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:304.
08:54:45.294 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #107
08:54:45.294 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:303 which is executed by 23 tests
1647785406
08:54:45.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.398 [pool-454-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:54:45.510 [pool-455-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<3>]
java.lang.AssertionError: expected:<2> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.520 [pool-456-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.520 [pool-457-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.521 [pool-458-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:45.521 [pool-453-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<3>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:45.521 [pool-453-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:45.521 [pool-453-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:303.
08:54:45.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #108
08:54:45.521 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:301 which is executed by 23 tests
1647785406
08:54:45.600 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.624 [pool-460-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<11.218599757513006> but was:<11.185713786405364>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.744 [pool-461-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<11.218599757513006> but was:<11.185713786405364>]
java.lang.AssertionError: expected:<11.218599757513006> but was:<11.185713786405364>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.754 [pool-462-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.759 [pool-463-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.761 [pool-464-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:45.761 [pool-459-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<11.218599757513006> but was:<11.185713786405364>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:45.761 [pool-459-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:45.761 [pool-459-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:301.
08:54:45.761 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #109
08:54:45.761 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:300 which is executed by 23 tests
1647785406
08:54:45.840 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.876 [pool-466-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<11.218599757513006> but was:<11.185713786405364>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.989 [pool-467-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<11.218599757513006> but was:<11.185713786405364>]
java.lang.AssertionError: expected:<11.218599757513006> but was:<11.185713786405364>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:45.999 [pool-468-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:46.000 [pool-469-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:46.001 [pool-470-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:46.001 [pool-465-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<11.218599757513006> but was:<11.185713786405364>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:46.001 [pool-465-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:46.001 [pool-465-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:300.
08:54:46.001 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #110
08:54:46.001 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:299 which is executed by 23 tests
1647785406
08:54:46.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #111
08:54:46.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:298 which is executed by 23 tests
1647785406
08:54:46.159 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #112
08:54:46.159 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:297 which is executed by 23 tests
1647785406
08:54:46.239 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:46.263 [pool-472-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<11.218599757513006> but was:<11.185713786405364>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:46.377 [pool-473-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<11.218599757513006> but was:<11.185713786405364>]
java.lang.AssertionError: expected:<11.218599757513006> but was:<11.185713786405364>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:46.387 [pool-474-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:46.387 [pool-475-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:46.388 [pool-476-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:46.388 [pool-471-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<11.218599757513006> but was:<11.185713786405364>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:46.388 [pool-471-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:46.388 [pool-471-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:297.
08:54:46.388 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #113
08:54:46.388 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:296 which is executed by 23 tests
1647785406
08:54:46.467 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:46.494 [pool-478-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<11.218599757513006> but was:<11.189579960152109>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:46.606 [pool-479-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<11.218599757513006> but was:<11.189579960152109>]
java.lang.AssertionError: expected:<11.218599757513006> but was:<11.189579960152109>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:46.616 [pool-480-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:46.617 [pool-481-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:46.617 [pool-482-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:46.617 [pool-477-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<11.218599757513006> but was:<11.189579960152109>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:46.617 [pool-477-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:46.617 [pool-477-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:296.
08:54:46.618 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #114
08:54:46.618 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:312 which is executed by 24 tests
1647785406
08:54:46.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #115
08:54:46.697 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:295 which is executed by 24 tests
1647785406
08:54:46.776 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:46.800 [pool-484-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<11.218599757513006> but was:<11.185713786405364>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:46.924 [pool-485-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<11.218599757513006> but was:<11.185713786405364>]
java.lang.AssertionError: expected:<11.218599757513006> but was:<11.185713786405364>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:46.933 [pool-486-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:46.934 [pool-487-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:46.935 [pool-488-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:46.935 [pool-483-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<11.218599757513006> but was:<11.185713786405364>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:46.936 [pool-483-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:46.936 [pool-483-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:295.
08:54:46.936 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:46.960 [pool-490-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<11.218599757513006> but was:<11.185713786405364>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:47.074 [pool-491-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<11.218599757513006> but was:<11.185713786405364>]
java.lang.AssertionError: expected:<11.218599757513006> but was:<11.185713786405364>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:47.084 [pool-492-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:47.085 [pool-493-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:47.086 [pool-494-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:47.086 [pool-489-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<11.218599757513006> but was:<11.185713786405364>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:47.086 [pool-489-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:47.086 [pool-489-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:295.
08:54:47.086 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #116
08:54:47.086 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:294 which is executed by 24 tests
1647785406
08:54:47.165 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:47.189 [pool-496-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:54:47.301 [pool-497-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<3>]
java.lang.AssertionError: expected:<2> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:47.311 [pool-498-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:47.312 [pool-499-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:47.313 [pool-500-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:47.313 [pool-495-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<3>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<NaN>]
08:54:47.313 [pool-495-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:47.313 [pool-495-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:294.
08:54:47.313 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #117
08:54:47.313 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:293 which is executed by 24 tests
1647785406
08:54:47.392 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #118
08:54:47.392 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:291 which is executed by 24 tests
1647785406
08:54:47.470 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:47.494 [pool-502-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<11.218599757513006> but was:<3.7416573867739413>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:47.606 [pool-503-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<11.218599757513006> but was:<3.7416573867739413>]
java.lang.AssertionError: expected:<11.218599757513006> but was:<3.7416573867739413>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:47.616 [pool-504-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:47.617 [pool-505-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:47.618 [pool-506-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:47.618 [pool-501-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<11.218599757513006> but was:<3.7416573867739413>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<NaN>]
08:54:47.618 [pool-501-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:47.618 [pool-501-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:291.
08:54:47.618 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #119
08:54:47.618 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:290 which is executed by 24 tests
1647785406
08:54:47.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #120
08:54:47.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:289 which is executed by 24 tests
1647785406
08:54:47.775 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:47.799 [pool-508-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<11.218599757513006> but was:<3.7416573867739413>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:47.910 [pool-509-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<11.218599757513006> but was:<3.7416573867739413>]
java.lang.AssertionError: expected:<11.218599757513006> but was:<3.7416573867739413>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:47.920 [pool-510-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:47.923 [pool-511-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:47.923 [pool-512-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:47.923 [pool-507-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<11.218599757513006> but was:<3.7416573867739413>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<NaN>]
08:54:47.924 [pool-507-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:47.924 [pool-507-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:289.
08:54:47.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #121
08:54:47.924 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:288 which is executed by 24 tests
1647785406
08:54:48.002 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.027 [pool-514-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:54:48.150 [pool-515-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<3>]
java.lang.AssertionError: expected:<2> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<3.3333333333333335>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.159 [pool-516-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.3333333333333335>]
java.lang.AssertionError: expected:<0.0> but was:<3.3333333333333335>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.160 [pool-517-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.161 [pool-518-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:48.161 [pool-513-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<3>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.3333333333333335>]
08:54:48.161 [pool-513-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:48.161 [pool-513-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:288.
08:54:48.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #122
08:54:48.161 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:286 which is executed by 24 tests
1647785406
08:54:48.240 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.264 [pool-520-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<11.218599757513006> but was:<3.7416573867739413>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.377 [pool-521-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<11.218599757513006> but was:<3.7416573867739413>]
java.lang.AssertionError: expected:<11.218599757513006> but was:<3.7416573867739413>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.386 [pool-522-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.387 [pool-523-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.387 [pool-524-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:48.388 [pool-519-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<11.218599757513006> but was:<3.7416573867739413>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<NaN>]
08:54:48.388 [pool-519-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:48.388 [pool-519-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:286.
08:54:48.388 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.411 [pool-526-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<11.218599757513006> but was:<3.7416573867739413>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.533 [pool-527-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<11.218599757513006> but was:<3.7416573867739413>]
java.lang.AssertionError: expected:<11.218599757513006> but was:<3.7416573867739413>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.542 [pool-528-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.ArrayIndexOutOfBoundsException: 3
    at org.apache.commons.math.linear.BiDiagonalTransformer.transformToUpperBiDiagonal(BiDiagonalTransformer.java:196)
    at org.apache.commons.math.linear.BiDiagonalTransformer.<init>(BiDiagonalTransformer.java:26)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:120)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:176)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.543 [pool-529-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[3]
java.lang.ArrayIndexOutOfBoundsException: 3    at org.apache.commons.math.linear.BiDiagonalTransformer.transformToUpperBiDiagonal(BiDiagonalTransformer.java:196)
    at org.apache.commons.math.linear.BiDiagonalTransformer.<init>(BiDiagonalTransformer.java:26)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:120)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:176)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.ArrayIndexOutOfBoundsException: 2
    at org.apache.commons.math.linear.BiDiagonalTransformer.transformToUpperBiDiagonal(BiDiagonalTransformer.java:196)
    at org.apache.commons.math.linear.BiDiagonalTransformer.<init>(BiDiagonalTransformer.java:26)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:120)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:216)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.544 [pool-530-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[2]
java.lang.ArrayIndexOutOfBoundsException: 2    at org.apache.commons.math.linear.BiDiagonalTransformer.transformToUpperBiDiagonal(BiDiagonalTransformer.java:196)
    at org.apache.commons.math.linear.BiDiagonalTransformer.<init>(BiDiagonalTransformer.java:26)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:120)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:216)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:48.544 [pool-525-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<11.218599757513006> but was:<3.7416573867739413>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<NaN>]
08:54:48.544 [pool-525-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): 3, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): 2]
08:54:48.544 [pool-525-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:286.
08:54:48.544 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #123
08:54:48.544 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:281 which is executed by 24 tests
1647785406
08:54:48.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.648 [pool-532-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:54:48.760 [pool-533-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<3>]
java.lang.AssertionError: expected:<2> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<6.82842712474619>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.770 [pool-534-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<6.82842712474619>]
java.lang.AssertionError: expected:<0.0> but was:<6.82842712474619>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.771 [pool-535-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.771 [pool-536-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:48.771 [pool-531-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<3>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<6.82842712474619>]
08:54:48.771 [pool-531-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:48.772 [pool-531-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:281.
08:54:48.772 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #124
08:54:48.772 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:280 which is executed by 24 tests
1647785406
08:54:48.851 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #125
08:54:48.852 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:279 which is executed by 24 tests
1647785406
08:54:48.931 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:48.956 [pool-538-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:54:49.088 [pool-539-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<3>]
java.lang.AssertionError: expected:<2> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<6.82842712474619>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:49.098 [pool-540-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<6.82842712474619>]
java.lang.AssertionError: expected:<0.0> but was:<6.82842712474619>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:49.099 [pool-541-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:49.099 [pool-542-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:49.099 [pool-537-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<3>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<6.82842712474619>]
08:54:49.099 [pool-537-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:49.099 [pool-537-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:279.
08:54:49.099 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #126
08:54:49.100 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:278 which is executed by 24 tests
1647785406
08:54:49.178 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:49.202 [pool-544-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:54:49.313 [pool-545-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<3>]
java.lang.AssertionError: expected:<2> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<30.142135623730937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:49.322 [pool-546-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<30.142135623730937>]
java.lang.AssertionError: expected:<0.0> but was:<30.142135623730937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:49.323 [pool-547-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:49.324 [pool-548-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:49.324 [pool-543-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<3>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<30.142135623730937>]
08:54:49.324 [pool-543-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:49.324 [pool-543-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:278.
08:54:49.324 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #127
08:54:49.324 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:276 which is executed by 24 tests
1647785406
08:54:49.402 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:49.427 [pool-550-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:54:49.538 [pool-551-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<3>]
java.lang.AssertionError: expected:<2> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<6.82842712474619>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:49.548 [pool-552-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<6.82842712474619>]
java.lang.AssertionError: expected:<0.0> but was:<6.82842712474619>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:49.548 [pool-553-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:49.549 [pool-554-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:49.549 [pool-549-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<3>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<6.82842712474619>]
08:54:49.549 [pool-549-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:49.549 [pool-549-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:276.
08:54:49.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #128
08:54:49.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:275 which is executed by 24 tests
1647785406
08:54:49.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #129
08:54:49.628 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:274 which is executed by 24 tests
1647785406
08:54:49.706 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:49.730 [pool-556-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:54:49.841 [pool-557-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<3>]
java.lang.AssertionError: expected:<2> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<6.82842712474619>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:49.850 [pool-558-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<6.82842712474619>]
java.lang.AssertionError: expected:<0.0> but was:<6.82842712474619>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:49.851 [pool-559-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:49.852 [pool-560-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:49.852 [pool-555-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<3>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<6.82842712474619>]
08:54:49.852 [pool-555-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:49.852 [pool-555-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:274.
08:54:49.852 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #130
08:54:49.852 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:273 which is executed by 24 tests
1647785406
08:54:49.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #131
08:54:49.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:272 which is executed by 24 tests
1647785406
08:54:50.009 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:50.238 [pool-562-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (227 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:54:50.367 [pool-563-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<3>]
java.lang.AssertionError: expected:<2> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<6.82842712474619>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:50.376 [pool-564-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<6.82842712474619>]
java.lang.AssertionError: expected:<0.0> but was:<6.82842712474619>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:50.377 [pool-565-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:50.377 [pool-566-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:50.377 [pool-561-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<3>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<6.82842712474619>]
08:54:50.377 [pool-561-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:50.377 [pool-561-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:272.
08:54:50.378 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #132
08:54:50.378 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:271 which is executed by 24 tests
1647785406
08:54:50.456 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:50.480 [pool-568-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:54:50.591 [pool-569-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<3>]
java.lang.AssertionError: expected:<2> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<3.6568542494923806>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:50.601 [pool-570-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.6568542494923806>]
java.lang.AssertionError: expected:<0.0> but was:<3.6568542494923806>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:50.602 [pool-571-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:50.603 [pool-572-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:50.603 [pool-567-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<3>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.6568542494923806>]
08:54:50.603 [pool-567-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:50.603 [pool-567-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:271.
08:54:50.603 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #133
08:54:50.603 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:270 which is executed by 24 tests
1647785406
08:54:50.682 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:50.705 [pool-574-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:54:50.817 [pool-575-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<3>]
java.lang.AssertionError: expected:<2> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<4.82842712474619>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:50.827 [pool-576-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.82842712474619>]
java.lang.AssertionError: expected:<0.0> but was:<4.82842712474619>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:50.827 [pool-577-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:50.828 [pool-578-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:50.828 [pool-573-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<3>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.82842712474619>]
08:54:50.828 [pool-573-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:50.828 [pool-573-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:270.
08:54:50.828 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:50.851 [pool-580-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:54:50.962 [pool-581-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<3>]
java.lang.AssertionError: expected:<2> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<4.82842712474619>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:50.972 [pool-582-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.82842712474619>]
java.lang.AssertionError: expected:<0.0> but was:<4.82842712474619>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:50.972 [pool-583-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:50.973 [pool-584-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:50.973 [pool-579-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<3>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.82842712474619>]
08:54:50.973 [pool-579-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:50.973 [pool-579-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:270.
08:54:50.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #134
08:54:50.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:269 which is executed by 24 tests
1647785406
08:54:51.051 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:51.075 [pool-586-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<11.218599757513006> but was:<10.532263357349713>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:51.187 [pool-587-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<11.218599757513006> but was:<10.532263357349713>]
java.lang.AssertionError: expected:<11.218599757513006> but was:<10.532263357349713>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:51.196 [pool-588-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:51.197 [pool-589-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:51.197 [pool-590-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:51.197 [pool-585-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<11.218599757513006> but was:<10.532263357349713>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<NaN>]
08:54:51.197 [pool-585-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:51.197 [pool-585-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:269.
08:54:51.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #135
08:54:51.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:268 which is executed by 24 tests
1647785406
08:54:51.276 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #136
08:54:51.276 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:267 which is executed by 24 tests
1647785406
08:54:51.354 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #137
08:54:51.354 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:265 which is executed by 24 tests
1647785406
08:54:51.432 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:51.456 [pool-592-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<11.218599757513006> but was:<3.605551275463989>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:51.567 [pool-593-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<11.218599757513006> but was:<3.605551275463989>]
java.lang.AssertionError: expected:<11.218599757513006> but was:<3.605551275463989>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:51.576 [pool-594-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:51.576 [pool-595-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:51.577 [pool-596-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:51.577 [pool-591-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<11.218599757513006> but was:<3.605551275463989>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<NaN>]
08:54:51.577 [pool-591-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:51.577 [pool-591-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:265.
08:54:51.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #138
08:54:51.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:264 which is executed by 24 tests
1647785406
08:54:51.655 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #139
08:54:51.655 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:263 which is executed by 24 tests
1647785406
08:54:51.733 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:51.757 [pool-598-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<11.218599757513006> but was:<3.605551275463989>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:51.869 [pool-599-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<11.218599757513006> but was:<3.605551275463989>]
java.lang.AssertionError: expected:<11.218599757513006> but was:<3.605551275463989>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:51.878 [pool-600-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:51.879 [pool-601-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:51.879 [pool-602-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:51.879 [pool-597-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<11.218599757513006> but was:<3.605551275463989>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<NaN>]
08:54:51.879 [pool-597-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:51.879 [pool-597-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:263.
08:54:51.879 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #140
08:54:51.880 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:262 which is executed by 24 tests
1647785406
08:54:51.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #141
08:54:51.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:259 which is executed by 24 tests
1647785406
08:54:52.037 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:52.060 [pool-604-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:54:52.172 [pool-605-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<0>]
java.lang.AssertionError: expected:<2> but was:<0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]
    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:52.184 [pool-606-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[row index -1 out of allowed range [0, 1]]
org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:52.185 [pool-607-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:52.186 [pool-608-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:52.186 [pool-603-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): row index -1 out of allowed range [0, 1]]
08:54:52.186 [pool-603-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:52.186 [pool-603-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:259.
08:54:52.186 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #142
08:54:52.186 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:258 which is executed by 24 tests
1647785406
08:54:52.264 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #143
08:54:52.264 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.BiDiagonalTransformer:257 which is executed by 24 tests
1647785406
08:54:52.342 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #144
08:54:52.342 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:312 which is executed by 26 tests
-464947810
08:54:52.454 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #145
08:54:52.454 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1913 which is executed by 27 tests
-464947810
08:54:52.574 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #146
08:54:52.574 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1912 which is executed by 27 tests
-464947810
08:54:52.690 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:52.714 [pool-610-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:52.965 [pool-611-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:52.966 [pool-612-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:52.967 [pool-613-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:52.967 [pool-614-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:52.968 [pool-609-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:52.968 [pool-609-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:52.968 [pool-609-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1912.
08:54:52.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #147
08:54:52.968 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1911 which is executed by 27 tests
-464947810
08:54:53.082 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:53.106 [pool-616-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:53.358 [pool-617-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:53.359 [pool-618-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:53.360 [pool-619-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:53.361 [pool-620-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:53.361 [pool-615-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:53.361 [pool-615-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:53.361 [pool-615-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1911.
08:54:53.361 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #148
08:54:53.361 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1892 which is executed by 27 tests
-464947810
08:54:53.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:53.509 [pool-622-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:53.758 [pool-623-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:53.759 [pool-624-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:53.760 [pool-625-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:53.760 [pool-626-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:53.760 [pool-621-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:53.760 [pool-621-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:53.761 [pool-621-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1892.
08:54:53.761 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:53.784 [pool-628-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:54.030 [pool-629-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:54.031 [pool-630-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:54.031 [pool-631-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:54.032 [pool-632-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:54.032 [pool-627-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:54.032 [pool-627-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:54.032 [pool-627-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1892.
08:54:54.032 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #149
08:54:54.032 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1890 which is executed by 27 tests
-464947810
08:54:54.147 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:54.171 [pool-634-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546823377>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:54.417 [pool-635-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546823377>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546823377>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:54.418 [pool-636-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:54.419 [pool-637-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:54.420 [pool-638-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:54.420 [pool-633-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546823377>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:54.420 [pool-633-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:54.420 [pool-633-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1890.
08:54:54.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #150
08:54:54.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1889 which is executed by 27 tests
-464947810
08:54:54.535 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:54.558 [pool-640-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546823377>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:54.801 [pool-641-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546823377>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546823377>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:54.801 [pool-642-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:54.802 [pool-643-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:54.803 [pool-644-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:54.803 [pool-639-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546823377>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:54.803 [pool-639-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:54.803 [pool-639-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1889.
08:54:54.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #151
08:54:54.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1888 which is executed by 27 tests
-464947810
08:54:54.918 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:54.941 [pool-646-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<6.05454170739029>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:55.185 [pool-647-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<6.05454170739029>]
java.lang.AssertionError: expected:<0.0> but was:<6.05454170739029>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:55.186 [pool-648-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:55.187 [pool-649-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:55.187 [pool-650-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:55.187 [pool-645-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<6.05454170739029>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:55.187 [pool-645-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:55.187 [pool-645-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1888.
08:54:55.188 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #152
08:54:55.188 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1887 which is executed by 27 tests
-464947810
08:54:55.301 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:55.325 [pool-652-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546823377>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:55.567 [pool-653-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546823377>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546823377>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:55.567 [pool-654-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:55.568 [pool-655-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:55.569 [pool-656-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:55.569 [pool-651-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546823377>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:55.569 [pool-651-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:55.569 [pool-651-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1887.
08:54:55.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #153
08:54:55.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1886 which is executed by 27 tests
-464947810
08:54:55.683 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:55.707 [pool-658-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:55.952 [pool-659-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:55.953 [pool-660-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:55.954 [pool-661-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:55.954 [pool-662-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:55.955 [pool-657-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:55.955 [pool-657-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:55.955 [pool-657-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1886.
08:54:55.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #154
08:54:55.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1885 which is executed by 27 tests
-464947810
08:54:56.068 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #155
08:54:56.068 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1884 which is executed by 27 tests
-464947810
08:54:56.182 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #156
08:54:56.182 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1883 which is executed by 27 tests
-464947810
08:54:56.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #157
08:54:56.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1882 which is executed by 27 tests
-464947810
08:54:56.409 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #158
08:54:56.409 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1881 which is executed by 27 tests
-464947810
08:54:56.524 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:56.548 [pool-664-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.2050085319093764>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:56.791 [pool-665-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.2050085319093764>]
java.lang.AssertionError: expected:<0.0> but was:<0.2050085319093764>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:56.801 [pool-666-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:56.802 [pool-667-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:56.803 [pool-668-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:56.803 [pool-663-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.2050085319093764>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:56.803 [pool-663-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:56.803 [pool-663-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1881.
08:54:56.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #159
08:54:56.803 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1880 which is executed by 27 tests
-464947810
08:54:56.916 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #160
08:54:56.916 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1879 which is executed by 27 tests
-464947810
08:54:57.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #161
08:54:57.030 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1878 which is executed by 27 tests
-464947810
08:54:57.144 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #162
08:54:57.144 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1866 which is executed by 27 tests
-464947810
08:54:57.255 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #163
08:54:57.255 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1865 which is executed by 27 tests
-464947810
08:54:57.366 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:57.390 [pool-670-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:57.631 [pool-671-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:57.632 [pool-672-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:57.633 [pool-673-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:57.634 [pool-674-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:57.634 [pool-669-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:57.634 [pool-669-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:57.634 [pool-669-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1865.
08:54:57.634 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #164
08:54:57.634 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1864 which is executed by 27 tests
-464947810
08:54:57.745 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:57.769 [pool-676-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:58.010 [pool-677-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:58.011 [pool-678-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:58.012 [pool-679-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:58.012 [pool-680-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:58.012 [pool-675-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:58.012 [pool-675-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:58.012 [pool-675-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1864.
08:54:58.013 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #165
08:54:58.013 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1844 which is executed by 27 tests
-464947810
08:54:58.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:58.148 [pool-682-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:58.390 [pool-683-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:58.390 [pool-684-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:58.391 [pool-685-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:58.392 [pool-686-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:58.392 [pool-681-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:58.392 [pool-681-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:58.392 [pool-681-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1844.
08:54:58.392 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:58.415 [pool-688-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:58.659 [pool-689-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:58.660 [pool-690-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:58.661 [pool-691-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:58.661 [pool-692-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:58.661 [pool-687-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:58.661 [pool-687-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:58.661 [pool-687-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1844.
08:54:58.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #166
08:54:58.661 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1842 which is executed by 27 tests
-464947810
08:54:58.773 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:58.797 [pool-694-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:59.041 [pool-695-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:59.041 [pool-696-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:59.042 [pool-697-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:59.043 [pool-698-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:59.043 [pool-693-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:59.043 [pool-693-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:59.043 [pool-693-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1842.
08:54:59.043 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #167
08:54:59.043 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1841 which is executed by 27 tests
-464947810
08:54:59.155 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:59.178 [pool-700-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650959>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:59.421 [pool-701-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650959>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650959>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:59.421 [pool-702-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:59.422 [pool-703-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:59.423 [pool-704-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:59.423 [pool-699-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650959>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:59.423 [pool-699-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:59.423 [pool-699-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1841.
08:54:59.423 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #168
08:54:59.423 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1840 which is executed by 27 tests
-464947810
08:54:59.534 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:59.557 [pool-706-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<6.0358585641934255>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:59.798 [pool-707-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<6.0358585641934255>]
java.lang.AssertionError: expected:<0.0> but was:<6.0358585641934255>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:59.799 [pool-708-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:59.800 [pool-709-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:59.801 [pool-710-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:54:59.801 [pool-705-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<6.0358585641934255>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:54:59.801 [pool-705-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:54:59.801 [pool-705-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1840.
08:54:59.801 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #169
08:54:59.801 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1839 which is executed by 27 tests
-464947810
08:54:59.912 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:54:59.935 [pool-712-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:00.188 [pool-713-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:00.189 [pool-714-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:00.190 [pool-715-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:00.190 [pool-716-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:00.190 [pool-711-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:00.190 [pool-711-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:00.190 [pool-711-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1839.
08:55:00.191 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #170
08:55:00.191 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1838 which is executed by 27 tests
-464947810
08:55:00.302 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:00.326 [pool-718-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546823377>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:00.569 [pool-719-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546823377>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546823377>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:00.570 [pool-720-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:00.570 [pool-721-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:00.571 [pool-722-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:00.571 [pool-717-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546823377>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:00.571 [pool-717-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:00.571 [pool-717-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1838.
08:55:00.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #171
08:55:00.571 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1837 which is executed by 27 tests
-464947810
08:55:00.683 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #172
08:55:00.683 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1836 which is executed by 27 tests
-464947810
08:55:00.795 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #173
08:55:00.795 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1835 which is executed by 27 tests
-464947810
08:55:00.906 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #174
08:55:00.906 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1834 which is executed by 27 tests
-464947810
08:55:01.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #175
08:55:01.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1833 which is executed by 27 tests
-464947810
08:55:01.126 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #176
08:55:01.126 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1832 which is executed by 27 tests
-464947810
08:55:01.239 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:01.263 [pool-724-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<6.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:01.504 [pool-725-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<6.0>]
java.lang.AssertionError: expected:<0.0> but was:<6.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:01.505 [pool-726-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:01.506 [pool-727-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:01.506 [pool-728-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:01.506 [pool-723-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<6.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:01.506 [pool-723-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:01.507 [pool-723-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1832.
08:55:01.507 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #177
08:55:01.507 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1831 which is executed by 27 tests
-464947810
08:55:01.616 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #178
08:55:01.616 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1830 which is executed by 27 tests
-464947810
08:55:01.727 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #179
08:55:01.727 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1829 which is executed by 27 tests
-464947810
08:55:01.837 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #180
08:55:01.837 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1813 which is executed by 27 tests
-464947810
08:55:01.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #181
08:55:01.947 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1810 which is executed by 27 tests
-464947810
08:55:02.057 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:02.081 [pool-730-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<1.730830877562771>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:02.323 [pool-731-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<1.730830877562771>]
java.lang.AssertionError: expected:<0.0> but was:<1.730830877562771>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:02.324 [pool-732-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.0>]
java.lang.AssertionError: expected:<0.0> but was:<3.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:02.325 [pool-733-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:02.326 [pool-734-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:02.326 [pool-729-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<1.730830877562771>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.0>]
08:55:02.326 [pool-729-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:02.326 [pool-729-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1810.
08:55:02.326 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #182
08:55:02.326 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1809 which is executed by 27 tests
-464947810
08:55:02.436 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:02.460 [pool-736-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<1.730830877562771>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:02.702 [pool-737-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<1.730830877562771>]
java.lang.AssertionError: expected:<0.0> but was:<1.730830877562771>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:02.703 [pool-738-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.0>]
java.lang.AssertionError: expected:<0.0> but was:<3.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:02.703 [pool-739-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:02.704 [pool-740-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:02.704 [pool-735-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<1.730830877562771>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.0>]
08:55:02.704 [pool-735-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:02.704 [pool-735-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1809.
08:55:02.704 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #183
08:55:02.704 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1808 which is executed by 27 tests
-464947810
08:55:02.815 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #184
08:55:02.815 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1804 which is executed by 27 tests
-464947810
08:55:02.927 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:02.951 [pool-742-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0595439611290719>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:03.192 [pool-743-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.0595439611290719>]
java.lang.AssertionError: expected:<0.0> but was:<0.0595439611290719>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:03.193 [pool-744-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:03.194 [pool-745-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:03.194 [pool-746-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:03.194 [pool-741-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.0595439611290719>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:03.194 [pool-741-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:03.194 [pool-741-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1804.
08:55:03.194 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #185
08:55:03.194 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1803 which is executed by 27 tests
-464947810
08:55:03.304 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:03.330 [pool-748-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.392036844918156>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:03.582 [pool-749-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.392036844918156>]
java.lang.AssertionError: expected:<0.0> but was:<4.392036844918156>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:03.582 [pool-750-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:03.583 [pool-751-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:03.584 [pool-752-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:03.584 [pool-747-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.392036844918156>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:03.584 [pool-747-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:03.584 [pool-747-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1803.
08:55:03.584 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #186
08:55:03.584 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1802 which is executed by 27 tests
-464947810
08:55:03.694 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:03.718 [pool-754-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<12.93002536604082>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:03.959 [pool-755-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<12.93002536604082>]
java.lang.AssertionError: expected:<0.0> but was:<12.93002536604082>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:03.960 [pool-756-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:03.961 [pool-757-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:03.961 [pool-758-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:03.962 [pool-753-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<12.93002536604082>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:03.962 [pool-753-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:03.962 [pool-753-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1802.
08:55:03.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #187
08:55:03.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1801 which is executed by 27 tests
-464947810
08:55:04.071 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:04.095 [pool-760-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<6.05454170739029>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:04.337 [pool-761-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<6.05454170739029>]
java.lang.AssertionError: expected:<0.0> but was:<6.05454170739029>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:04.338 [pool-762-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:04.339 [pool-763-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:04.340 [pool-764-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:04.340 [pool-759-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<6.05454170739029>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:04.340 [pool-759-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:04.340 [pool-759-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1801.
08:55:04.340 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #188
08:55:04.340 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1800 which is executed by 27 tests
-464947810
08:55:04.450 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:04.474 [pool-766-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.0933711217837696>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:04.717 [pool-767-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.0933711217837696>]
java.lang.AssertionError: expected:<0.0> but was:<0.0933711217837696>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:04.717 [pool-768-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:04.718 [pool-769-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:04.719 [pool-770-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:04.719 [pool-765-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.0933711217837696>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:04.719 [pool-765-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:04.719 [pool-765-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1800.
08:55:04.719 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #189
08:55:04.719 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1798 which is executed by 27 tests
-464947810
08:55:04.829 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:04.853 [pool-772-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<1.7227912232747284>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:05.096 [pool-773-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<1.7227912232747284>]
java.lang.AssertionError: expected:<0.0> but was:<1.7227912232747284>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:05.097 [pool-774-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.0>]
java.lang.AssertionError: expected:<0.0> but was:<3.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:05.097 [pool-775-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:05.098 [pool-776-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:05.098 [pool-771-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<1.7227912232747284>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.0>]
08:55:05.098 [pool-771-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:05.098 [pool-771-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1798.
08:55:05.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #190
08:55:05.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1797 which is executed by 27 tests
-464947810
08:55:05.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:05.233 [pool-778-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<6.0358585641934255>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:05.478 [pool-779-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<6.0358585641934255>]
java.lang.AssertionError: expected:<0.0> but was:<6.0358585641934255>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:05.478 [pool-780-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:05.479 [pool-781-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:05.480 [pool-782-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:05.480 [pool-777-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<6.0358585641934255>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:05.480 [pool-777-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:05.480 [pool-777-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1797.
08:55:05.480 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #191
08:55:05.480 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1796 which is executed by 27 tests
-464947810
08:55:05.591 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:05.615 [pool-784-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<11.638141407403191>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:05.855 [pool-785-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<11.638141407403191>]
java.lang.AssertionError: expected:<0.0> but was:<11.638141407403191>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<5.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:05.855 [pool-786-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<5.0>]
java.lang.AssertionError: expected:<0.0> but was:<5.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:05.856 [pool-787-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:05.857 [pool-788-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:05.857 [pool-783-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<11.638141407403191>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<5.0>]
08:55:05.857 [pool-783-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:05.857 [pool-783-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1796.
08:55:05.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #192
08:55:05.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1795 which is executed by 27 tests
-464947810
08:55:05.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:05.990 [pool-790-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<6.0358585641934255>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:06.229 [pool-791-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<6.0358585641934255>]
java.lang.AssertionError: expected:<0.0> but was:<6.0358585641934255>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:06.230 [pool-792-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:06.231 [pool-793-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:06.231 [pool-794-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:06.231 [pool-789-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<6.0358585641934255>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:06.231 [pool-789-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:06.231 [pool-789-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1795.
08:55:06.231 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #193
08:55:06.232 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1794 which is executed by 27 tests
-464947810
08:55:06.342 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #194
08:55:06.342 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1793 which is executed by 27 tests
-464947810
08:55:06.452 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:06.475 [pool-796-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<11.449217186183478>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:06.727 [pool-797-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<11.449217186183478>]
java.lang.AssertionError: expected:<0.0> but was:<11.449217186183478>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:06.728 [pool-798-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:06.728 [pool-799-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:06.729 [pool-800-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:06.729 [pool-795-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<11.449217186183478>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:06.729 [pool-795-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:06.729 [pool-795-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1793.
08:55:06.729 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #195
08:55:06.729 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1792 which is executed by 27 tests
-464947810
08:55:06.839 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #196
08:55:06.839 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1791 which is executed by 27 tests
-464947810
08:55:06.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #197
08:55:06.949 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1786 which is executed by 27 tests
-464947810
08:55:07.058 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:07.081 [pool-802-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650959>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:07.319 [pool-803-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650959>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650959>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:07.320 [pool-804-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:07.320 [pool-805-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:07.321 [pool-806-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:07.321 [pool-801-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650959>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:07.321 [pool-801-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:07.321 [pool-801-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1786.
08:55:07.321 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #198
08:55:07.321 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1784 which is executed by 27 tests
-464947810
08:55:07.430 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:07.454 [pool-808-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:07.693 [pool-809-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:07.694 [pool-810-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:07.695 [pool-811-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:07.696 [pool-812-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:07.696 [pool-807-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:07.696 [pool-807-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:07.696 [pool-807-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1784.
08:55:07.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #199
08:55:07.696 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1783 which is executed by 27 tests
-464947810
08:55:07.805 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:07.829 [pool-814-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546823377>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:08.069 [pool-815-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546823377>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546823377>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:08.070 [pool-816-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:08.071 [pool-817-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:08.072 [pool-818-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:08.072 [pool-813-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546823377>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:08.072 [pool-813-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:08.072 [pool-813-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1783.
08:55:08.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #200
08:55:08.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1782 which is executed by 27 tests
-464947810
08:55:08.181 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:08.205 [pool-820-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546823377>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:08.446 [pool-821-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546823377>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546823377>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:08.446 [pool-822-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:08.447 [pool-823-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:08.448 [pool-824-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:08.448 [pool-819-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546823377>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:08.448 [pool-819-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:08.448 [pool-819-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1782.
08:55:08.448 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:08.471 [pool-826-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546823377>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:08.711 [pool-827-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546823377>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546823377>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:08.712 [pool-828-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546655045>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:08.712 [pool-829-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546655045>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546655045>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:08.713 [pool-830-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:08.713 [pool-825-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546823377>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:08.713 [pool-825-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546655045>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:08.713 [pool-825-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1782.
08:55:08.713 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #201
08:55:08.713 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1781 which is executed by 27 tests
-464947810
08:55:08.824 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #202
08:55:08.825 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1780 which is executed by 27 tests
-464947810
08:55:08.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:08.958 [pool-832-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546823377>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:09.196 [pool-833-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546823377>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546823377>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:09.197 [pool-834-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:09.197 [pool-835-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:09.198 [pool-836-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:09.198 [pool-831-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546823377>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:09.198 [pool-831-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:09.198 [pool-831-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1780.
08:55:09.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #203
08:55:09.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1779 which is executed by 27 tests
-464947810
08:55:09.308 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #204
08:55:09.309 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1778 which is executed by 27 tests
-464947810
08:55:09.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #205
08:55:09.418 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1777 which is executed by 27 tests
-464947810
08:55:09.527 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #206
08:55:09.527 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1773 which is executed by 27 tests
-464947810
08:55:09.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:09.660 [pool-838-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.2050085319093764>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:09.899 [pool-839-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.2050085319093764>]
java.lang.AssertionError: expected:<0.0> but was:<0.2050085319093764>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:09.900 [pool-840-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:09.900 [pool-841-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:09.913 [pool-842-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:09.913 [pool-837-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.2050085319093764>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:09.914 [pool-837-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:09.914 [pool-837-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1773.
08:55:09.914 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #207
08:55:09.914 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1772 which is executed by 27 tests
-464947810
08:55:10.023 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:10.047 [pool-844-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<6.0358585641934255>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:10.285 [pool-845-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<6.0358585641934255>]
java.lang.AssertionError: expected:<0.0> but was:<6.0358585641934255>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:10.286 [pool-846-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:10.287 [pool-847-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:10.287 [pool-848-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:10.288 [pool-843-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<6.0358585641934255>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:10.288 [pool-843-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:10.288 [pool-843-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1772.
08:55:10.288 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #208
08:55:10.288 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1771 which is executed by 27 tests
-464947810
08:55:10.398 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #209
08:55:10.399 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1755 which is executed by 27 tests
-464947810
08:55:10.511 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #210
08:55:10.511 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1752 which is executed by 27 tests
-464947810
08:55:10.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:10.647 [pool-850-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(AbstractRealMatrix.java:509)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:122)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:55:10.879 [pool-851-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(AbstractRealMatrix.java:509)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:122)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(AbstractRealMatrix.java:509)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:122)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:55:10.880 [pool-852-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(AbstractRealMatrix.java:509)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:122)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:10.885 [pool-853-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:10.886 [pool-854-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:10.886 [pool-849-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:55:10.886 [pool-849-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:10.886 [pool-849-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1752.
08:55:10.886 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #211
08:55:10.886 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1751 which is executed by 27 tests
-464947810
08:55:10.995 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:11.019 [pool-856-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(AbstractRealMatrix.java:509)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:122)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:55:11.251 [pool-857-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(AbstractRealMatrix.java:509)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:122)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(AbstractRealMatrix.java:509)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:122)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:55:11.252 [pool-858-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(AbstractRealMatrix.java:509)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:122)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:11.256 [pool-859-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:11.257 [pool-860-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:11.257 [pool-855-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:55:11.257 [pool-855-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:11.257 [pool-855-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1751.
08:55:11.257 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #212
08:55:11.257 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1747 which is executed by 27 tests
-464947810
08:55:11.367 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:11.391 [pool-862-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.47944698992331447>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:11.627 [pool-863-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.47944698992331447>]
java.lang.AssertionError: expected:<0.0> but was:<0.47944698992331447>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:11.628 [pool-864-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:11.628 [pool-865-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:11.629 [pool-866-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:11.629 [pool-861-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.47944698992331447>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:11.629 [pool-861-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:11.629 [pool-861-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1747.
08:55:11.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #213
08:55:11.629 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1746 which is executed by 27 tests
-464947810
08:55:11.739 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:11.763 [pool-868-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:11.999 [pool-869-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:11.999 [pool-870-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:12.000 [pool-871-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:12.001 [pool-872-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:12.001 [pool-867-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:12.001 [pool-867-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:12.001 [pool-867-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1746.
08:55:12.001 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #214
08:55:12.001 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1745 which is executed by 27 tests
-464947810
08:55:12.110 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:12.134 [pool-874-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.41140964650082323>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:12.377 [pool-875-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.41140964650082323>]
java.lang.AssertionError: expected:<0.0> but was:<0.41140964650082323>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:12.378 [pool-876-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:12.379 [pool-877-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:12.379 [pool-878-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:12.380 [pool-873-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.41140964650082323>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:12.380 [pool-873-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:12.380 [pool-873-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1745.
08:55:12.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #215
08:55:12.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1744 which is executed by 27 tests
-464947810
08:55:12.490 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #216
08:55:12.490 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1743 which is executed by 27 tests
-464947810
08:55:12.599 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #217
08:55:12.599 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1742 which is executed by 27 tests
-464947810
08:55:12.708 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:12.732 [pool-880-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:12.967 [pool-881-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:12.968 [pool-882-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:12.969 [pool-883-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:12.969 [pool-884-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:12.969 [pool-879-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:12.969 [pool-879-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:12.969 [pool-879-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1742.
08:55:12.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #218
08:55:12.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1741 which is executed by 27 tests
-464947810
08:55:13.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:13.104 [pool-886-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<6.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:13.354 [pool-887-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<6.0>]
java.lang.AssertionError: expected:<0.0> but was:<6.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:13.355 [pool-888-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:13.356 [pool-889-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:13.356 [pool-890-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:13.356 [pool-885-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<6.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:13.356 [pool-885-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:13.357 [pool-885-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1741.
08:55:13.357 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #219
08:55:13.357 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1740 which is executed by 27 tests
-464947810
08:55:13.465 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #220
08:55:13.466 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1739 which is executed by 27 tests
-464947810
08:55:13.574 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #221
08:55:13.575 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1737 which is executed by 27 tests
-464947810
08:55:13.683 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #222
08:55:13.683 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1736 which is executed by 27 tests
-464947810
08:55:13.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #223
08:55:13.793 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1733 which is executed by 27 tests
-464947810
08:55:13.902 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:13.926 [pool-892-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.EigenDecompositionImpl.findEigenVectors(EigenDecompositionImpl.java:1202)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:117)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:55:14.156 [pool-893-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.EigenDecompositionImpl.findEigenVectors(EigenDecompositionImpl.java:1202)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:117)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at org.apache.commons.math.linear.EigenDecompositionImpl.findEigenVectors(EigenDecompositionImpl.java:1202)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:117)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:55:14.157 [pool-894-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.EigenDecompositionImpl.findEigenVectors(EigenDecompositionImpl.java:1202)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:117)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:14.162 [pool-895-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:14.162 [pool-896-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:14.162 [pool-891-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:55:14.162 [pool-891-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:14.162 [pool-891-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1733.
08:55:14.162 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #224
08:55:14.162 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:1732 which is executed by 27 tests
-464947810
08:55:14.271 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #225
08:55:14.272 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:174 which is executed by 8 tests
-1130256400
08:55:14.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:14.376 [pool-898-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<13.72523226934046>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:14.524 [pool-899-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<13.72523226934046>]
java.lang.AssertionError: expected:<0.0> but was:<13.72523226934046>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:14.525 [pool-900-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:14.525 [pool-901-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:14.526 [pool-902-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:14.526 [pool-897-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<13.72523226934046>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:14.526 [pool-897-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:14.526 [pool-897-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:174.
08:55:14.526 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #226
08:55:14.526 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:173 which is executed by 8 tests
-1130256400
08:55:14.606 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:14.629 [pool-904-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<13.72523226934046>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:14.777 [pool-905-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<13.72523226934046>]
java.lang.AssertionError: expected:<0.0> but was:<13.72523226934046>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:14.777 [pool-906-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:14.778 [pool-907-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:14.778 [pool-908-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:14.778 [pool-903-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<13.72523226934046>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:14.779 [pool-903-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:14.779 [pool-903-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:173.
08:55:14.779 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #227
08:55:14.779 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:172 which is executed by 8 tests
-1130256400
08:55:14.859 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:14.882 [pool-910-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<15.337146400276389>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:15.031 [pool-911-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<15.337146400276389>]
java.lang.AssertionError: expected:<0.0> but was:<15.337146400276389>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:15.031 [pool-912-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:15.032 [pool-913-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:15.032 [pool-914-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:15.032 [pool-909-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<15.337146400276389>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:15.032 [pool-909-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:15.032 [pool-909-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:172.
08:55:15.033 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #228
08:55:15.033 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:171 which is executed by 8 tests
-1130256400
08:55:15.112 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #229
08:55:15.112 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:170 which is executed by 8 tests
-1130256400
08:55:15.192 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #230
08:55:15.192 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:169 which is executed by 8 tests
-1130256400
08:55:15.272 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #231
08:55:15.272 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.SingularValueDecompositionImpl:168 which is executed by 8 tests
-1130256400
08:55:15.352 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #232
08:55:15.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:579 which is executed by 33 tests
1308483921
08:55:15.457 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #233
08:55:15.457 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:573 which is executed by 33 tests
1308483921
08:55:15.555 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:15.579 [pool-916-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:15.777 [pool-917-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:15.778 [pool-918-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:15.779 [pool-919-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:15.779 [pool-920-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:15.779 [pool-915-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:15.779 [pool-915-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:15.779 [pool-915-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.MatrixUtils:573.
08:55:15.779 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:15.804 [pool-922-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:15.984 [pool-923-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:15.985 [pool-924-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.linear.MatrixIndexException: initial column 0 after final column 1
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:237)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:55:15.988 [pool-925-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[initial column 0 after final column 1]
org.apache.commons.math.linear.MatrixIndexException: initial column 0 after final column 1    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:237)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

org.apache.commons.math.linear.MatrixIndexException: initial column 0 after final column 0
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:237)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:55:15.989 [pool-926-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[initial column 0 after final column 0]
org.apache.commons.math.linear.MatrixIndexException: initial column 0 after final column 0    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:237)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

08:55:15.989 [pool-921-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:15.989 [pool-921-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): initial column 0 after final column 1, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): initial column 0 after final column 0]
08:55:15.989 [pool-921-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.MatrixUtils:573.
08:55:15.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #234
08:55:15.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:572 which is executed by 33 tests
1308483921
08:55:16.085 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:16.109 [pool-928-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:16.287 [pool-929-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:16.288 [pool-930-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:16.288 [pool-931-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:16.289 [pool-932-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:16.289 [pool-927-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:16.289 [pool-927-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:16.289 [pool-927-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.MatrixUtils:572.
08:55:16.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #235
08:55:16.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:571 which is executed by 33 tests
1308483921
08:55:16.384 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:16.409 [pool-934-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:16.603 [pool-935-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:16.604 [pool-936-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:16.604 [pool-937-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:16.605 [pool-938-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:16.605 [pool-933-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:16.605 [pool-933-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:16.605 [pool-933-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.MatrixUtils:571.
08:55:16.605 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #236
08:55:16.605 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:566 which is executed by 33 tests
1308483921
08:55:16.700 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:16.725 [pool-940-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:16.903 [pool-941-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:16.903 [pool-942-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:16.904 [pool-943-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:16.905 [pool-944-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:16.905 [pool-939-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:16.905 [pool-939-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:16.905 [pool-939-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.MatrixUtils:566.
08:55:16.905 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:16.929 [pool-946-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:17.108 [pool-947-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:17.109 [pool-948-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.linear.MatrixIndexException: initial row 0 after final row 1
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:232)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:55:17.112 [pool-949-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[initial row 0 after final row 1]
org.apache.commons.math.linear.MatrixIndexException: initial row 0 after final row 1    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:232)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

org.apache.commons.math.linear.MatrixIndexException: initial row 0 after final row 0
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:232)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:55:17.113 [pool-950-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[initial row 0 after final row 0]
org.apache.commons.math.linear.MatrixIndexException: initial row 0 after final row 0    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:232)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

08:55:17.113 [pool-945-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:17.113 [pool-945-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): initial row 0 after final row 1, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): initial row 0 after final row 0]
08:55:17.113 [pool-945-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.MatrixUtils:566.
08:55:17.113 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #237
08:55:17.114 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:565 which is executed by 33 tests
1308483921
08:55:17.208 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:17.232 [pool-952-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:17.405 [pool-953-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:17.406 [pool-954-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:17.406 [pool-955-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:17.407 [pool-956-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:17.407 [pool-951-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:17.407 [pool-951-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:17.407 [pool-951-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.MatrixUtils:565.
08:55:17.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #238
08:55:17.407 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:564 which is executed by 33 tests
1308483921
08:55:17.502 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:17.526 [pool-958-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:17.700 [pool-959-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:17.700 [pool-960-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:17.701 [pool-961-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:17.701 [pool-962-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:17.702 [pool-957-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:17.702 [pool-957-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:17.702 [pool-957-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.MatrixUtils:564.
08:55:17.702 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #239
08:55:17.702 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:810 which is executed by 9 tests
-464947810
08:55:17.812 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #240
08:55:17.812 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:808 which is executed by 9 tests
-464947810
08:55:17.918 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:17.941 [pool-964-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650959>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:18.190 [pool-965-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650959>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650959>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:18.190 [pool-966-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:18.191 [pool-967-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:18.192 [pool-968-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:18.192 [pool-963-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650959>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:18.192 [pool-963-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:18.192 [pool-963-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:808.
08:55:18.192 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #241
08:55:18.192 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:807 which is executed by 9 tests
-464947810
08:55:18.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:18.320 [pool-970-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<1>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:55:18.555 [pool-971-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<1>]
java.lang.AssertionError: expected:<2> but was:<1>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:18.565 [pool-972-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:18.565 [pool-973-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:18.566 [pool-974-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:18.566 [pool-969-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<1>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:18.566 [pool-969-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:18.566 [pool-969-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:807.
08:55:18.566 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #242
08:55:18.566 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:806 which is executed by 9 tests
-464947810
08:55:18.673 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:18.696 [pool-976-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<1>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:55:18.929 [pool-977-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<1>]
java.lang.AssertionError: expected:<2> but was:<1>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:18.939 [pool-978-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:18.940 [pool-979-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:18.940 [pool-980-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:18.940 [pool-975-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<1>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:18.940 [pool-975-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:18.940 [pool-975-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:806.
08:55:18.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #243
08:55:18.941 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:801 which is executed by 9 tests
-464947810
08:55:19.046 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:19.069 [pool-982-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:19.309 [pool-983-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:19.310 [pool-984-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:19.311 [pool-985-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:19.311 [pool-986-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:19.311 [pool-981-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:19.311 [pool-981-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:19.311 [pool-981-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:801.
08:55:19.312 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:19.334 [pool-988-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:19.575 [pool-989-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:19.575 [pool-990-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:19.576 [pool-991-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:19.576 [pool-992-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:19.577 [pool-987-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:19.577 [pool-987-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:19.577 [pool-987-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:801.
08:55:19.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #244
08:55:19.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:799 which is executed by 9 tests
-464947810
08:55:19.682 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:19.705 [pool-994-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:55:19.955 [pool-995-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<3>]
java.lang.AssertionError: expected:<2> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:19.964 [pool-996-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:19.965 [pool-997-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:19.965 [pool-998-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:19.965 [pool-993-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<3>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:19.965 [pool-993-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:19.966 [pool-993-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:799.
08:55:19.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #245
08:55:19.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:798 which is executed by 9 tests
-464947810
08:55:20.071 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:20.094 [pool-1000-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<1>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:55:20.325 [pool-1001-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<1>]
java.lang.AssertionError: expected:<2> but was:<1>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:20.335 [pool-1002-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:20.336 [pool-1003-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:20.336 [pool-1004-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:20.336 [pool-999-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<1>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:20.337 [pool-999-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:20.337 [pool-999-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:798.
08:55:20.337 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #246
08:55:20.337 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:797 which is executed by 9 tests
-464947810
08:55:20.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #247
08:55:20.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:796 which is executed by 9 tests
-464947810
08:55:20.547 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:20.570 [pool-1006-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:20.810 [pool-1007-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:20.811 [pool-1008-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:20.811 [pool-1009-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:20.812 [pool-1010-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:20.812 [pool-1005-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:20.812 [pool-1005-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:20.812 [pool-1005-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:796.
08:55:20.812 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:20.834 [pool-1012-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:21.075 [pool-1013-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:21.075 [pool-1014-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:21.076 [pool-1015-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:21.077 [pool-1016-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:21.077 [pool-1011-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:21.077 [pool-1011-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:21.077 [pool-1011-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:796.
08:55:21.077 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #248
08:55:21.077 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:791 which is executed by 9 tests
-464947810
08:55:21.183 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:21.205 [pool-1018-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:21.447 [pool-1019-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:21.448 [pool-1020-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:21.448 [pool-1021-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:21.449 [pool-1022-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:21.449 [pool-1017-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:21.449 [pool-1017-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:21.449 [pool-1017-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:791.
08:55:21.449 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:21.471 [pool-1024-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:21.711 [pool-1025-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:21.712 [pool-1026-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:21.713 [pool-1027-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:21.713 [pool-1028-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:21.713 [pool-1023-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:21.713 [pool-1023-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:21.713 [pool-1023-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:791.
08:55:21.713 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #249
08:55:21.713 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:790 which is executed by 9 tests
-464947810
08:55:21.820 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #250
08:55:21.820 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:789 which is executed by 9 tests
-464947810
08:55:21.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #251
08:55:21.926 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:788 which is executed by 9 tests
-464947810
08:55:22.031 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #252
08:55:22.032 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:786 which is executed by 9 tests
-464947810
08:55:22.137 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #253
08:55:22.137 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:785 which is executed by 9 tests
-464947810
08:55:22.243 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #254
08:55:22.243 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:784 which is executed by 9 tests
-464947810
08:55:22.349 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #255
08:55:22.350 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:783 which is executed by 9 tests
-464947810
08:55:22.456 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #256
08:55:22.457 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:777 which is executed by 9 tests
-464947810
08:55:22.564 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:22.587 [pool-1030-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:22.829 [pool-1031-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:22.830 [pool-1032-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:22.831 [pool-1033-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:22.831 [pool-1034-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:22.831 [pool-1029-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:22.831 [pool-1029-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:22.832 [pool-1029-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:777.
08:55:22.832 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:22.855 [pool-1036-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:23.118 [pool-1037-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:23.119 [pool-1038-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.linear.InvalidMatrixException: cannot solve degree 3 equation
    at org.apache.commons.math.linear.EigenDecompositionImpl.process3RowsBlock(EigenDecompositionImpl.java:496)
    at org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(EigenDecompositionImpl.java:354)
    at org.apache.commons.math.linear.EigenDecompositionImpl.decompose(EigenDecompositionImpl.java:110)
    at org.apache.commons.math.linear.EigenDecompositionImpl.<init>(EigenDecompositionImpl.java:85)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:137)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
08:55:23.123 [pool-1039-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[cannot solve degree 3 equation]
org.apache.commons.math.linear.InvalidMatrixException: cannot solve degree 3 equation    at org.apache.commons.math.linear.EigenDecompositionImpl.process3RowsBlock(EigenDecompositionImpl.java:496)
    at org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(EigenDecompositionImpl.java:354)
    at org.apache.commons.math.linear.EigenDecompositionImpl.decompose(EigenDecompositionImpl.java:110)
    at org.apache.commons.math.linear.EigenDecompositionImpl.<init>(EigenDecompositionImpl.java:85)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:137)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:23.123 [pool-1040-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:23.123 [pool-1035-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:23.124 [pool-1035-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): cannot solve degree 3 equation, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:23.124 [pool-1035-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:777.
08:55:23.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #257
08:55:23.124 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:776 which is executed by 9 tests
-464947810
08:55:23.229 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #258
08:55:23.229 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:775 which is executed by 9 tests
-464947810
08:55:23.335 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #259
08:55:23.335 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:774 which is executed by 9 tests
-464947810
08:55:23.440 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #260
08:55:23.440 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:773 which is executed by 9 tests
-464947810
08:55:23.546 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #261
08:55:23.546 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:770 which is executed by 9 tests
-464947810
08:55:23.652 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #262
08:55:23.652 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:769 which is executed by 9 tests
-464947810
08:55:23.757 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #263
08:55:23.757 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:768 which is executed by 9 tests
-464947810
08:55:23.862 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #264
08:55:23.862 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:765 which is executed by 9 tests
-464947810
08:55:23.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #265
08:55:23.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:764 which is executed by 9 tests
-464947810
08:55:24.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #266
08:55:24.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:763 which is executed by 9 tests
-464947810
08:55:24.177 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #267
08:55:24.177 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:762 which is executed by 9 tests
-464947810
08:55:24.282 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #268
08:55:24.282 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:761 which is executed by 9 tests
-464947810
08:55:24.387 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #269
08:55:24.387 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:639 which is executed by 9 tests
-464947810
08:55:24.492 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:24.517 [pool-1042-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.093367675466838>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:24.751 [pool-1043-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.093367675466838>]
java.lang.AssertionError: expected:<0.0> but was:<0.093367675466838>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:24.752 [pool-1044-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:24.753 [pool-1045-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:24.753 [pool-1046-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:24.753 [pool-1041-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.093367675466838>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:24.753 [pool-1041-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:24.753 [pool-1041-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:639.
08:55:24.754 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #270
08:55:24.754 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:638 which is executed by 9 tests
-464947810
08:55:24.858 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:24.881 [pool-1048-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:55:25.108 [pool-1049-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<0>]
java.lang.AssertionError: expected:<2> but was:<0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:25.118 [pool-1050-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:25.119 [pool-1051-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:25.119 [pool-1052-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:25.119 [pool-1047-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:25.119 [pool-1047-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:25.119 [pool-1047-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:638.
08:55:25.119 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #271
08:55:25.119 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:701 which is executed by 39 tests
-464947810
08:55:25.225 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:25.249 [pool-1054-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:25.485 [pool-1055-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:25.486 [pool-1056-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:25.486 [pool-1057-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:25.487 [pool-1058-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:25.487 [pool-1053-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:25.487 [pool-1053-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:25.487 [pool-1053-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:701.
08:55:25.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:25.511 [pool-1060-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:25.746 [pool-1061-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:25.747 [pool-1062-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:55:25.747 [pool-1063-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<3>]
java.lang.AssertionError: expected:<2> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

08:55:25.748 [pool-1064-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

08:55:25.748 [pool-1059-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:25.748 [pool-1059-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<3>]
08:55:25.748 [pool-1059-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:701.
08:55:25.748 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #272
08:55:25.748 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:700 which is executed by 39 tests
-464947810
08:55:25.853 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #273
08:55:25.853 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:699 which is executed by 39 tests
-464947810
08:55:25.958 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:25.982 [pool-1066-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:26.218 [pool-1067-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:26.219 [pool-1068-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:26.219 [pool-1069-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:26.220 [pool-1070-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:26.220 [pool-1065-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:26.220 [pool-1065-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:26.220 [pool-1065-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:699.
08:55:26.220 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #274
08:55:26.220 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:698 which is executed by 39 tests
-464947810
08:55:26.325 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #275
08:55:26.325 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:682 which is executed by 39 tests
-464947810
08:55:26.430 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:26.455 [pool-1072-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:55:26.699 [pool-1073-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<3>]
java.lang.AssertionError: expected:<2> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:26.708 [pool-1074-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:26.709 [pool-1075-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:26.709 [pool-1076-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:26.709 [pool-1071-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<3>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:26.710 [pool-1071-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:26.710 [pool-1071-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:682.
08:55:26.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #276
08:55:26.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:681 which is executed by 39 tests
-464947810
08:55:26.814 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:26.838 [pool-1078-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:55:27.063 [pool-1079-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<3>]
java.lang.AssertionError: expected:<2> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<3.999999999999997>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:27.073 [pool-1080-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.999999999999997>]
java.lang.AssertionError: expected:<0.0> but was:<3.999999999999997>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:27.074 [pool-1081-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:27.074 [pool-1082-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:27.074 [pool-1077-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<3>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.999999999999997>]
08:55:27.075 [pool-1077-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:27.075 [pool-1077-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:681.
08:55:27.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #277
08:55:27.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:680 which is executed by 39 tests
-464947810
08:55:27.180 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:27.205 [pool-1084-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<11.218599757513006> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:27.429 [pool-1085-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<11.218599757513006> but was:<NaN>]
java.lang.AssertionError: expected:<11.218599757513006> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:183)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]
    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:27.441 [pool-1086-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[row index -1 out of allowed range [0, 1]]
org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:27.442 [pool-1087-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:27.443 [pool-1088-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:27.443 [pool-1083-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<11.218599757513006> but was:<NaN>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): row index -1 out of allowed range [0, 1]]
08:55:27.443 [pool-1083-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:27.443 [pool-1083-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:680.
08:55:27.443 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #278
08:55:27.443 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:679 which is executed by 39 tests
-464947810
08:55:27.548 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #279
08:55:27.548 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:593 which is executed by 39 tests
-464947810
08:55:27.652 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:27.677 [pool-1090-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:27.911 [pool-1091-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:27.912 [pool-1092-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:27.912 [pool-1093-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:27.913 [pool-1094-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:27.913 [pool-1089-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:27.913 [pool-1089-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:27.913 [pool-1089-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:593.
08:55:27.913 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #280
08:55:27.913 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:592 which is executed by 39 tests
-464947810
08:55:28.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:28.041 [pool-1096-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:28.276 [pool-1097-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:28.276 [pool-1098-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:28.277 [pool-1099-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:28.278 [pool-1100-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:28.278 [pool-1095-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:28.278 [pool-1095-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:28.278 [pool-1095-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:592.
08:55:28.278 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #281
08:55:28.278 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:591 which is executed by 39 tests
-464947810
08:55:28.382 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #282
08:55:28.382 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:589 which is executed by 39 tests
-464947810
08:55:28.486 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:28.510 [pool-1102-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:28.745 [pool-1103-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:28.746 [pool-1104-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:28.747 [pool-1105-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:28.747 [pool-1106-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:28.747 [pool-1101-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:28.747 [pool-1101-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:28.747 [pool-1101-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:589.
08:55:28.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #283
08:55:28.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:588 which is executed by 39 tests
-464947810
08:55:28.852 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:28.876 [pool-1108-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:29.110 [pool-1109-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:29.110 [pool-1110-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:29.111 [pool-1111-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:29.111 [pool-1112-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:29.112 [pool-1107-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:29.112 [pool-1107-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:29.112 [pool-1107-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:588.
08:55:29.112 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #284
08:55:29.112 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:587 which is executed by 39 tests
-464947810
08:55:29.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #285
08:55:29.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:585 which is executed by 39 tests
-464947810
08:55:29.320 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #286
08:55:29.320 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:584 which is executed by 39 tests
-464947810
08:55:29.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:29.448 [pool-1114-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:29.682 [pool-1115-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:29.682 [pool-1116-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:29.683 [pool-1117-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:29.702 [pool-1118-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:29.702 [pool-1113-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:29.702 [pool-1113-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:29.702 [pool-1113-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:584.
08:55:29.702 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #287
08:55:29.702 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:583 which is executed by 39 tests
-464947810
08:55:29.807 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:29.831 [pool-1120-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:30.064 [pool-1121-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:30.065 [pool-1122-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:30.065 [pool-1123-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:30.066 [pool-1124-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:30.066 [pool-1119-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:30.066 [pool-1119-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:30.066 [pool-1119-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:583.
08:55:30.066 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #288
08:55:30.066 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:582 which is executed by 39 tests
-464947810
08:55:30.171 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #289
08:55:30.171 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:581 which is executed by 39 tests
-464947810
08:55:30.275 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #290
08:55:30.275 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:709 which is executed by 40 tests
-464947810
08:55:30.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #291
08:55:30.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:708 which is executed by 40 tests
-464947810
08:55:30.484 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:30.509 [pool-1126-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:55:30.734 [pool-1127-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<0>]
java.lang.AssertionError: expected:<2> but was:<0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]
    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:30.745 [pool-1128-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[row index -1 out of allowed range [0, 1]]
org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:30.746 [pool-1129-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:30.747 [pool-1130-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:30.747 [pool-1125-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): row index -1 out of allowed range [0, 1]]
08:55:30.747 [pool-1125-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:30.747 [pool-1125-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:708.
08:55:30.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #292
08:55:30.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:697 which is executed by 40 tests
-464947810
08:55:30.852 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:30.876 [pool-1132-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:31.110 [pool-1133-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:31.111 [pool-1134-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:31.111 [pool-1135-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:31.112 [pool-1136-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:31.112 [pool-1131-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:31.112 [pool-1131-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:31.112 [pool-1131-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:697.
08:55:31.112 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #293
08:55:31.112 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:696 which is executed by 40 tests
-464947810
08:55:31.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #294
08:55:31.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:693 which is executed by 40 tests
-464947810
08:55:31.325 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #295
08:55:31.325 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:685 which is executed by 40 tests
-464947810
08:55:31.434 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #296
08:55:31.434 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:678 which is executed by 40 tests
-464947810
08:55:31.540 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:31.564 [pool-1138-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:55:31.789 [pool-1139-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<3>]
java.lang.AssertionError: expected:<2> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:31.798 [pool-1140-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:31.799 [pool-1141-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:31.800 [pool-1142-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:31.800 [pool-1137-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<3>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<NaN>]
08:55:31.800 [pool-1137-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:31.800 [pool-1137-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:678.
08:55:31.800 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #297
08:55:31.800 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:677 which is executed by 40 tests
-464947810
08:55:31.904 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #298
08:55:31.904 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:676 which is executed by 40 tests
-464947810
08:55:32.009 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:32.033 [pool-1144-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<3>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:55:32.258 [pool-1145-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<3>]
java.lang.AssertionError: expected:<2> but was:<3>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

java.lang.AssertionError: expected:<0.0> but was:<NaN>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:32.267 [pool-1146-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<NaN>]
java.lang.AssertionError: expected:<0.0> but was:<NaN>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:32.268 [pool-1147-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:32.269 [pool-1148-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:32.269 [pool-1143-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<3>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<NaN>]
08:55:32.269 [pool-1143-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:32.269 [pool-1143-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:676.
08:55:32.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #299
08:55:32.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:673 which is executed by 40 tests
-464947810
08:55:32.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #300
08:55:32.380 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:672 which is executed by 40 tests
-464947810
08:55:32.485 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:32.510 [pool-1150-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:32.744 [pool-1151-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:32.744 [pool-1152-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:32.745 [pool-1153-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:32.746 [pool-1154-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:32.746 [pool-1149-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:32.746 [pool-1149-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:32.746 [pool-1149-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:672.
08:55:32.746 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #301
08:55:32.746 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:624 which is executed by 40 tests
-464947810
08:55:32.851 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:32.876 [pool-1156-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:55:33.120 [pool-1157-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<0>]
java.lang.AssertionError: expected:<2> but was:<0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]
    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:33.132 [pool-1158-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[row index -1 out of allowed range [0, 1]]
org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:33.133 [pool-1159-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:33.134 [pool-1160-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:33.134 [pool-1155-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): row index -1 out of allowed range [0, 1]]
08:55:33.134 [pool-1155-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:33.134 [pool-1155-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:624.
08:55:33.134 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #302
08:55:33.134 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:623 which is executed by 40 tests
-464947810
08:55:33.239 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #303
08:55:33.239 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:622 which is executed by 40 tests
-464947810
08:55:33.345 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:33.371 [pool-1162-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:55:33.595 [pool-1163-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<0>]
java.lang.AssertionError: expected:<2> but was:<0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]
    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:33.607 [pool-1164-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[row index -1 out of allowed range [0, 1]]
org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:33.608 [pool-1165-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:33.609 [pool-1166-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:33.609 [pool-1161-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): row index -1 out of allowed range [0, 1]]
08:55:33.609 [pool-1161-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:33.609 [pool-1161-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:622.
08:55:33.609 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #304
08:55:33.609 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:621 which is executed by 40 tests
-464947810
08:55:33.713 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #305
08:55:33.713 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:620 which is executed by 40 tests
-464947810
08:55:33.818 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:33.843 [pool-1168-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:34.078 [pool-1169-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:34.079 [pool-1170-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:34.080 [pool-1171-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:34.080 [pool-1172-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:34.080 [pool-1167-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:34.080 [pool-1167-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:34.080 [pool-1167-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:620.
08:55:34.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #306
08:55:34.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:619 which is executed by 40 tests
-464947810
08:55:34.185 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:34.209 [pool-1174-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.EigenDecompositionImpl.process3RowsBlock(EigenDecompositionImpl.java:508)
    at org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(EigenDecompositionImpl.java:399)
    at org.apache.commons.math.linear.EigenDecompositionImpl.decompose(EigenDecompositionImpl.java:110)
    at org.apache.commons.math.linear.EigenDecompositionImpl.<init>(EigenDecompositionImpl.java:85)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:137)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
08:55:34.432 [pool-1175-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.EigenDecompositionImpl.process3RowsBlock(EigenDecompositionImpl.java:508)
    at org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(EigenDecompositionImpl.java:399)
    at org.apache.commons.math.linear.EigenDecompositionImpl.decompose(EigenDecompositionImpl.java:110)
    at org.apache.commons.math.linear.EigenDecompositionImpl.<init>(EigenDecompositionImpl.java:85)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:137)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)

java.lang.NullPointerException
    at org.apache.commons.math.linear.EigenDecompositionImpl.process2RowsBlock(EigenDecompositionImpl.java:466)
    at org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(EigenDecompositionImpl.java:396)
    at org.apache.commons.math.linear.EigenDecompositionImpl.decompose(EigenDecompositionImpl.java:110)
    at org.apache.commons.math.linear.EigenDecompositionImpl.<init>(EigenDecompositionImpl.java:85)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:137)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
08:55:34.432 [pool-1176-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.EigenDecompositionImpl.process2RowsBlock(EigenDecompositionImpl.java:466)
    at org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(EigenDecompositionImpl.java:396)
    at org.apache.commons.math.linear.EigenDecompositionImpl.decompose(EigenDecompositionImpl.java:110)
    at org.apache.commons.math.linear.EigenDecompositionImpl.<init>(EigenDecompositionImpl.java:85)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:137)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:34.442 [pool-1177-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:34.443 [pool-1178-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:34.443 [pool-1173-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:55:34.443 [pool-1173-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:34.443 [pool-1173-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:619.
08:55:34.443 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #307
08:55:34.443 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:616 which is executed by 40 tests
-464947810
08:55:34.547 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #308
08:55:34.547 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:606 which is executed by 40 tests
-464947810
08:55:34.656 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #309
08:55:34.656 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:604 which is executed by 40 tests
-464947810
08:55:34.761 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:34.785 [pool-1180-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:35.018 [pool-1181-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:35.019 [pool-1182-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:35.020 [pool-1183-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:35.020 [pool-1184-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:35.020 [pool-1179-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:35.020 [pool-1179-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:35.020 [pool-1179-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:604.
08:55:35.021 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #310
08:55:35.021 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:603 which is executed by 40 tests
-464947810
08:55:35.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:35.149 [pool-1186-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:35.384 [pool-1187-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:35.385 [pool-1188-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:35.386 [pool-1189-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:35.386 [pool-1190-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:35.386 [pool-1185-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:35.386 [pool-1185-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:35.386 [pool-1185-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:603.
08:55:35.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #311
08:55:35.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:602 which is executed by 40 tests
-464947810
08:55:35.492 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:35.517 [pool-1192-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:35.750 [pool-1193-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:35.751 [pool-1194-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:35.751 [pool-1195-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:35.752 [pool-1196-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:35.752 [pool-1191-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:35.752 [pool-1191-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:35.752 [pool-1191-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:602.
08:55:35.752 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #312
08:55:35.752 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:601 which is executed by 40 tests
-464947810
08:55:35.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #313
08:55:35.857 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:600 which is executed by 40 tests
-464947810
08:55:35.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:35.986 [pool-1198-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:36.219 [pool-1199-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:36.219 [pool-1200-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:36.244 [pool-1201-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:36.247 [pool-1202-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:36.247 [pool-1197-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:36.247 [pool-1197-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:36.247 [pool-1197-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:600.
08:55:36.247 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #314
08:55:36.247 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:599 which is executed by 40 tests
-464947810
08:55:36.351 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:36.376 [pool-1204-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:36.609 [pool-1205-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:36.610 [pool-1206-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:36.610 [pool-1207-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:36.611 [pool-1208-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:36.611 [pool-1203-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:36.611 [pool-1203-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:36.611 [pool-1203-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:599.
08:55:36.611 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #315
08:55:36.611 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:598 which is executed by 40 tests
-464947810
08:55:36.715 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #316
08:55:36.715 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:597 which is executed by 40 tests
-464947810
08:55:36.818 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #317
08:55:36.818 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:579 which is executed by 40 tests
-464947810
08:55:36.923 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:36.947 [pool-1210-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:37.180 [pool-1211-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:37.180 [pool-1212-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:37.181 [pool-1213-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:37.181 [pool-1214-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:37.181 [pool-1209-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:37.182 [pool-1209-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:37.182 [pool-1209-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:579.
08:55:37.182 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #318
08:55:37.182 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:578 which is executed by 40 tests
-464947810
08:55:37.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #319
08:55:37.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:576 which is executed by 40 tests
-464947810
08:55:37.389 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #320
08:55:37.390 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:575 which is executed by 40 tests
-464947810
08:55:37.493 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:37.518 [pool-1216-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:37.750 [pool-1217-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:37.750 [pool-1218-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:37.751 [pool-1219-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:37.752 [pool-1220-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:37.752 [pool-1215-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:37.752 [pool-1215-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:37.752 [pool-1215-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:575.
08:55:37.752 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #321
08:55:37.752 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:574 which is executed by 40 tests
-464947810
08:55:37.856 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:37.880 [pool-1222-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:38.112 [pool-1223-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:38.112 [pool-1224-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:38.113 [pool-1225-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:38.114 [pool-1226-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:38.114 [pool-1221-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:38.114 [pool-1221-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:38.114 [pool-1221-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:574.
08:55:38.114 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #322
08:55:38.114 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:573 which is executed by 40 tests
-464947810
08:55:38.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #323
08:55:38.218 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:572 which is executed by 40 tests
-464947810
08:55:38.322 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #324
08:55:38.322 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:571 which is executed by 40 tests
-464947810
08:55:38.426 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #325
08:55:38.427 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:251 which is executed by 40 tests
-464947810
08:55:38.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #326
08:55:38.536 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:249 which is executed by 40 tests
-464947810
08:55:38.639 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:38.664 [pool-1228-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:38.896 [pool-1229-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:38.897 [pool-1230-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:38.897 [pool-1231-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:38.898 [pool-1232-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:38.898 [pool-1227-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:38.898 [pool-1227-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:38.898 [pool-1227-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:249.
08:55:38.898 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #327
08:55:38.898 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:246 which is executed by 40 tests
-464947810
08:55:39.001 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:39.026 [pool-1234-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.EigenDecompositionImpl.getRealEigenvalues(EigenDecompositionImpl.java:194)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:140)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:176)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:55:39.506 [pool-1235-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (265 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.EigenDecompositionImpl.getRealEigenvalues(EigenDecompositionImpl.java:194)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:140)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:176)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at org.apache.commons.math.linear.EigenDecompositionImpl.getRealEigenvalues(EigenDecompositionImpl.java:194)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:140)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:216)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:55:39.507 [pool-1236-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.EigenDecompositionImpl.getRealEigenvalues(EigenDecompositionImpl.java:194)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:140)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:216)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:39.516 [pool-1237-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:39.517 [pool-1238-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:39.517 [pool-1233-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:55:39.517 [pool-1233-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:39.517 [pool-1233-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:246.
08:55:39.517 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #328
08:55:39.517 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:243 which is executed by 40 tests
-464947810
08:55:39.631 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:39.655 [pool-1240-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:39.902 [pool-1241-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:39.903 [pool-1242-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:39.903 [pool-1243-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:39.904 [pool-1244-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:39.904 [pool-1239-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:39.904 [pool-1239-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:39.904 [pool-1239-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:243.
08:55:39.904 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #329
08:55:39.904 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:240 which is executed by 40 tests
-464947810
08:55:40.007 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:40.030 [pool-1246-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles(EigenDecompositionImpl.java:367)
    at org.apache.commons.math.linear.EigenDecompositionImpl.decompose(EigenDecompositionImpl.java:153)
    at org.apache.commons.math.linear.EigenDecompositionImpl.<init>(EigenDecompositionImpl.java:85)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:137)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:176)
08:55:40.255 [pool-1247-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles(EigenDecompositionImpl.java:367)
    at org.apache.commons.math.linear.EigenDecompositionImpl.decompose(EigenDecompositionImpl.java:153)
    at org.apache.commons.math.linear.EigenDecompositionImpl.<init>(EigenDecompositionImpl.java:85)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:137)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:176)

java.lang.NullPointerException
    at org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles(EigenDecompositionImpl.java:367)
    at org.apache.commons.math.linear.EigenDecompositionImpl.decompose(EigenDecompositionImpl.java:153)
    at org.apache.commons.math.linear.EigenDecompositionImpl.<init>(EigenDecompositionImpl.java:85)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:137)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:216)
08:55:40.256 [pool-1248-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles(EigenDecompositionImpl.java:367)
    at org.apache.commons.math.linear.EigenDecompositionImpl.decompose(EigenDecompositionImpl.java:153)
    at org.apache.commons.math.linear.EigenDecompositionImpl.<init>(EigenDecompositionImpl.java:85)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:137)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:216)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:40.265 [pool-1249-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:40.266 [pool-1250-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:40.266 [pool-1245-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:55:40.266 [pool-1245-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:40.266 [pool-1245-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:240.
08:55:40.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #330
08:55:40.266 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:239 which is executed by 40 tests
-464947810
08:55:40.370 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:40.393 [pool-1252-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:40.628 [pool-1253-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:40.628 [pool-1254-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:40.629 [pool-1255-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:40.629 [pool-1256-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:40.630 [pool-1251-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:40.630 [pool-1251-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:40.630 [pool-1251-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:239.
08:55:40.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #331
08:55:40.630 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:238 which is executed by 40 tests
-464947810
08:55:40.732 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:40.756 [pool-1258-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:40.988 [pool-1259-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:40.989 [pool-1260-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:40.990 [pool-1261-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:40.990 [pool-1262-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:40.990 [pool-1257-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:40.990 [pool-1257-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:40.990 [pool-1257-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:238.
08:55:40.990 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #332
08:55:40.990 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:237 which is executed by 40 tests
-464947810
08:55:41.093 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:41.117 [pool-1264-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:41.350 [pool-1265-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:41.350 [pool-1266-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:41.351 [pool-1267-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:41.351 [pool-1268-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:41.352 [pool-1263-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:41.352 [pool-1263-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:41.352 [pool-1263-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:237.
08:55:41.352 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #333
08:55:41.352 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:403 which is executed by 41 tests
-1875222545
08:55:41.439 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #334
08:55:41.439 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:402 which is executed by 41 tests
-1875222545
08:55:41.525 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #335
08:55:41.525 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:398 which is executed by 41 tests
-1875222545
08:55:41.609 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:41.632 [pool-1270-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<17.5327182122665>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:41.781 [pool-1271-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<17.5327182122665>]
java.lang.AssertionError: expected:<0.0> but was:<17.5327182122665>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.4343145750507618>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:41.782 [pool-1272-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.4343145750507618>]
java.lang.AssertionError: expected:<0.0> but was:<3.4343145750507618>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:41.783 [pool-1273-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:41.783 [pool-1274-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:41.784 [pool-1269-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<17.5327182122665>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.4343145750507618>]
08:55:41.784 [pool-1269-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:41.784 [pool-1269-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:398.
08:55:41.784 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #336
08:55:41.784 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:266 which is executed by 50 tests
-1875222545
08:55:41.867 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #337
08:55:41.867 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:262 which is executed by 50 tests
-1875222545
08:55:41.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:41.973 [pool-1276-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:204)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:55:42.130 [pool-1277-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:204)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

08:55:42.131 [pool-1278-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:42.132 [pool-1279-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:42.133 [pool-1280-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:42.133 [pool-1275-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:55:42.133 [pool-1275-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:42.133 [pool-1275-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:262.
08:55:42.133 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #338
08:55:42.133 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:261 which is executed by 50 tests
-1875222545
08:55:42.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:42.240 [pool-1282-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:204)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:55:42.390 [pool-1283-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:204)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

08:55:42.391 [pool-1284-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:42.392 [pool-1285-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:42.392 [pool-1286-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:42.393 [pool-1281-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:55:42.393 [pool-1281-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:42.393 [pool-1281-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:261.
08:55:42.393 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #339
08:55:42.393 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:260 which is executed by 50 tests
-1875222545
08:55:42.476 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #340
08:55:42.476 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:259 which is executed by 50 tests
-1875222545
08:55:42.559 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #341
08:55:42.559 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:258 which is executed by 50 tests
-1875222545
08:55:42.647 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #342
08:55:42.647 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:257 which is executed by 50 tests
-1875222545
08:55:42.730 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:42.754 [pool-1288-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:204)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:55:42.903 [pool-1289-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:204)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

08:55:42.904 [pool-1290-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:42.905 [pool-1291-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:42.905 [pool-1292-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:42.905 [pool-1287-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:55:42.905 [pool-1287-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:42.905 [pool-1287-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:257.
08:55:42.905 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #343
08:55:42.905 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:256 which is executed by 50 tests
-1875222545
08:55:42.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #344
08:55:42.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:255 which is executed by 50 tests
-1875222545
08:55:43.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #345
08:55:43.072 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:254 which is executed by 50 tests
-1875222545
08:55:43.156 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #346
08:55:43.156 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:252 which is executed by 50 tests
-1875222545
08:55:43.238 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:43.262 [pool-1294-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:43.418 [pool-1295-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:43.419 [pool-1296-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:43.419 [pool-1297-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:43.420 [pool-1298-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:43.420 [pool-1293-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:43.420 [pool-1293-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:43.420 [pool-1293-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:252.
08:55:43.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #347
08:55:43.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:748 which is executed by 13 tests
-464947810
08:55:43.531 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #348
08:55:43.532 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:746 which is executed by 13 tests
-464947810
08:55:43.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:43.660 [pool-1300-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:43.905 [pool-1301-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:43.906 [pool-1302-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:43.906 [pool-1303-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:43.907 [pool-1304-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:43.907 [pool-1299-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:43.907 [pool-1299-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:43.907 [pool-1299-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:746.
08:55:43.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #349
08:55:43.907 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:745 which is executed by 13 tests
-464947810
08:55:44.014 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:44.037 [pool-1306-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:44.278 [pool-1307-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]
    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:44.283 [pool-1308-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (4 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[row index -1 out of allowed range [0, 1]]
org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:44.284 [pool-1309-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:44.284 [pool-1310-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:44.284 [pool-1305-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): row index -1 out of allowed range [0, 1]]
08:55:44.284 [pool-1305-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:44.284 [pool-1305-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:745.
08:55:44.284 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #350
08:55:44.285 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:744 which is executed by 13 tests
-464947810
08:55:44.390 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #351
08:55:44.390 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:740 which is executed by 13 tests
-464947810
08:55:44.497 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:44.520 [pool-1312-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:44.756 [pool-1313-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:44.757 [pool-1314-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:44.758 [pool-1315-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:44.758 [pool-1316-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:44.758 [pool-1311-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:44.758 [pool-1311-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:44.758 [pool-1311-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:740.
08:55:44.759 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:44.781 [pool-1318-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:45.019 [pool-1319-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:45.020 [pool-1320-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:45.021 [pool-1321-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.linear.InvalidMatrixException: cannot solve degree 2 equation
    at org.apache.commons.math.linear.EigenDecompositionImpl.process2RowsBlock(EigenDecompositionImpl.java:469)
    at org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(EigenDecompositionImpl.java:351)
    at org.apache.commons.math.linear.EigenDecompositionImpl.decompose(EigenDecompositionImpl.java:110)
    at org.apache.commons.math.linear.EigenDecompositionImpl.<init>(EigenDecompositionImpl.java:85)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:137)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
08:55:45.024 [pool-1322-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[cannot solve degree 2 equation]
org.apache.commons.math.linear.InvalidMatrixException: cannot solve degree 2 equation    at org.apache.commons.math.linear.EigenDecompositionImpl.process2RowsBlock(EigenDecompositionImpl.java:469)
    at org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(EigenDecompositionImpl.java:351)
    at org.apache.commons.math.linear.EigenDecompositionImpl.decompose(EigenDecompositionImpl.java:110)
    at org.apache.commons.math.linear.EigenDecompositionImpl.<init>(EigenDecompositionImpl.java:85)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:137)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)

08:55:45.024 [pool-1317-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:45.024 [pool-1317-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): cannot solve degree 2 equation]
08:55:45.024 [pool-1317-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:740.
08:55:45.024 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #352
08:55:45.024 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:739 which is executed by 13 tests
-464947810
08:55:45.130 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #353
08:55:45.130 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:738 which is executed by 13 tests
-464947810
08:55:45.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #354
08:55:45.235 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:737 which is executed by 13 tests
-464947810
08:55:45.339 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #355
08:55:45.340 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:735 which is executed by 13 tests
-464947810
08:55:45.443 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #356
08:55:45.444 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:734 which is executed by 13 tests
-464947810
08:55:45.548 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #357
08:55:45.548 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:733 which is executed by 13 tests
-464947810
08:55:45.652 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #358
08:55:45.652 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:634 which is executed by 13 tests
-464947810
08:55:45.756 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:45.778 [pool-1324-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:46.018 [pool-1325-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.ArrayIndexOutOfBoundsException: 2
    at org.apache.commons.math.linear.EigenDecompositionImpl.process3RowsBlock(EigenDecompositionImpl.java:475)
    at org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(EigenDecompositionImpl.java:401)
    at org.apache.commons.math.linear.EigenDecompositionImpl.decompose(EigenDecompositionImpl.java:110)
    at org.apache.commons.math.linear.EigenDecompositionImpl.<init>(EigenDecompositionImpl.java:85)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:137)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
08:55:46.019 [pool-1326-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[2]
java.lang.ArrayIndexOutOfBoundsException: 2    at org.apache.commons.math.linear.EigenDecompositionImpl.process3RowsBlock(EigenDecompositionImpl.java:475)
    at org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(EigenDecompositionImpl.java:401)
    at org.apache.commons.math.linear.EigenDecompositionImpl.decompose(EigenDecompositionImpl.java:110)
    at org.apache.commons.math.linear.EigenDecompositionImpl.<init>(EigenDecompositionImpl.java:85)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:137)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:46.020 [pool-1327-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:46.020 [pool-1328-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:46.020 [pool-1323-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): 2]
08:55:46.020 [pool-1323-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:46.020 [pool-1323-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:634.
08:55:46.020 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #359
08:55:46.020 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:633 which is executed by 13 tests
-464947810
08:55:46.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:46.147 [pool-1330-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 7
<> Ignored tests: 0
<> Failed tests: 2
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:46.378 [pool-1331-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]
    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:46.381 [pool-1332-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[row index -1 out of allowed range [0, 1]]
org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:46.382 [pool-1333-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:46.383 [pool-1334-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:46.383 [pool-1329-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): row index -1 out of allowed range [0, 1]]
08:55:46.383 [pool-1329-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:46.383 [pool-1329-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.EigenDecompositionImpl:633.
08:55:46.383 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #360
08:55:46.383 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:235 which is executed by 52 tests
-1875222545
08:55:46.466 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #361
08:55:46.466 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:572 which is executed by 58 tests
-1875222545
08:55:46.550 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #362
08:55:46.550 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:569 which is executed by 58 tests
-1875222545
08:55:46.633 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:46.657 [pool-1336-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:204)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:55:46.786 [pool-1337-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:204)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

08:55:46.787 [pool-1338-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:46.788 [pool-1339-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:46.788 [pool-1340-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:46.789 [pool-1335-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:55:46.789 [pool-1335-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:46.789 [pool-1335-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:569.
08:55:46.789 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #363
08:55:46.789 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:568 which is executed by 58 tests
-1875222545
08:55:46.872 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:46.896 [pool-1342-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:204)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:55:47.025 [pool-1343-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:204)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

08:55:47.026 [pool-1344-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:47.027 [pool-1345-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:47.027 [pool-1346-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:47.027 [pool-1341-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:55:47.027 [pool-1341-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:47.027 [pool-1341-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:568.
08:55:47.027 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #364
08:55:47.027 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:567 which is executed by 58 tests
-1875222545
08:55:47.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:47.135 [pool-1348-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:204)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:55:47.266 [pool-1349-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:204)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

08:55:47.267 [pool-1350-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:47.267 [pool-1351-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:47.268 [pool-1352-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:47.268 [pool-1347-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:55:47.268 [pool-1347-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:47.268 [pool-1347-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:567.
08:55:47.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #365
08:55:47.268 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:566 which is executed by 58 tests
-1875222545
08:55:47.352 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:47.375 [pool-1354-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.056342562781687144>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:47.505 [pool-1355-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.056342562781687144>]
java.lang.AssertionError: expected:<0.0> but was:<0.056342562781687144>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<2.4>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:47.505 [pool-1356-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<2.4>]
java.lang.AssertionError: expected:<0.0> but was:<2.4>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:47.506 [pool-1357-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:47.506 [pool-1358-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:47.506 [pool-1353-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.056342562781687144>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<2.4>]
08:55:47.507 [pool-1353-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:47.507 [pool-1353-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:566.
08:55:47.507 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #366
08:55:47.507 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:565 which is executed by 58 tests
-1875222545
08:55:47.590 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #367
08:55:47.590 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:564 which is executed by 58 tests
-1875222545
08:55:47.674 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #368
08:55:47.674 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:275 which is executed by 65 tests
-1875222545
08:55:47.757 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #369
08:55:47.757 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix$1:226 which is executed by 69 tests
816641250
08:55:47.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #370
08:55:47.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix$1:222 which is executed by 69 tests
816641250
08:55:47.956 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #371
08:55:47.957 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix$1:220 which is executed by 69 tests
816641250
08:55:48.059 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:48.083 [pool-1360-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:48.343 [pool-1359-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractRealMatrix.java:134: error: ')' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:134: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                          ^
AbstractRealMatrix.java:134: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:134: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                               ^
AbstractRealMatrix.java:134: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                         ^
AbstractRealMatrix.java:135: error: ')' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:135: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:135: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:135: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                            ^
AbstractRealMatrix.java:135: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                   ^
AbstractRealMatrix.java:137: error: ')' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:137: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                          ^
AbstractRealMatrix.java:137: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:137: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                               ^
AbstractRealMatrix.java:137: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                         ^
08:55:48.491 [pool-1359-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public abstract class AbstractRealMatrix implements org.apache.commons.math.linear.RealMatrix {
    @java.lang.Deprecated
    private org.apache.commons.math.linear.DecompositionSolver lu;

    protected AbstractRealMatrix() {
        lu = null;
    }

    protected AbstractRealMatrix(final int rowDimension, final int columnDimension) throws java.lang.IllegalArgumentException {
        if (rowDimension <= 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("invalid row dimension {0} (must be positive)", rowDimension);
        }
        if (columnDimension <= 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("invalid column dimension {0} (must be positive)", columnDimension);
        }
        lu = null;
    }

    public abstract org.apache.commons.math.linear.RealMatrix createMatrix(final int rowDimension, final int columnDimension) throws java.lang.IllegalArgumentException;

    public abstract org.apache.commons.math.linear.RealMatrix copy();

    public org.apache.commons.math.linear.RealMatrix add(org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkAdditionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix subtract(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkSubtractionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) - (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix scalarAdd(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + d));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix scalarMultiply(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) * d));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix multiply(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(this, m);
        final int nRows = getRowDimension();
        final int nCols = m.getColumnDimension();
        final int nSum = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nRows, nCols);
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nSum; ++i) {
                    sum += (getEntry(row, i)) * (m.getEntry(i, col));
                }
                out.setEntry(row, col, sum);
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix preMultiply(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        return m.multiply(this);
    }

    public double[][] getData() {
        final double[][] data = new double[getRowDimension()][getColumnDimension()];
        for (int i = 0; i < (data.length); ++i) {
            final double[] dataI = data[i];
            for (int j = 0; j < (dataI.length); ++j) {
                dataI[j] = getEntry(i, j);
            }
        }
        return data;
    }

    public double getNorm() {
        return walkInColumnOrder(new org.apache.commons.math.linear.RealMatrixPreservingVisitor() {
            private double endRow;

            private double columnSum;

            private double maxColSum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.endRow = endRow;
                columnSum = 0;
                maxColSum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                columnSum += java.lang.Math.abs(value);
                if (row == (endRow)) {
                    maxColSum = java.lang.Math.max(maxColSum, columnSum);
                    boolean spoonDefaultValue = false;
                    try {
                        spoonDefaultValue = true;
                    } catch (java.lang.Exception __NopolProcessorException) {
                    }
                    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                    if (fr.inria.lille.commons.trace.RuntimeValues.instance(226).isEnabled()) {
                        fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectionStarts();
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("column",column);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("row",row);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectInput("value",value);} catch (Exception ex1) {ex1.printStackTrace();};
                        fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectOutput(runtimeAngelicValue);
                        fr.inria.lille.commons.trace.RuntimeValues.instance(226).collectionEnds();
                    }
                    if (runtimeAngelicValue)
                        columnSum = 0;

                }
            }

            public double end() {
                return maxColSum;
            }
        });
    }

    public double getFrobeniusNorm() {
        return walkInOptimizedOrder(new org.apache.commons.math.linear.RealMatrixPreservingVisitor() {
            private double sum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                sum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                sum += value * value;
            }

            public double end() {
                return java.lang.Math.sqrt(sum);
            }
        });
    }

    public org.apache.commons.math.linear.RealMatrix getSubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final org.apache.commons.math.linear.RealMatrix subMatrix = createMatrix(((endRow - startRow) + 1), ((endColumn - startColumn) + 1));
        for (int i = startRow; i <= endRow; ++i) {
            for (int j = startColumn; j <= endColumn; ++j) {
                subMatrix.setEntry((i - startRow), (j - startColumn), getEntry(i, j));
            }
        }
        return subMatrix;
    }

    public org.apache.commons.math.linear.RealMatrix getSubMatrix(final int[] selectedRows, final int[] selectedColumns) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        final org.apache.commons.math.linear.RealMatrix subMatrix = createMatrix(selectedRows.length, selectedColumns.length);
        subMatrix.walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor() {
            @java.lang.Override
            public double visit(final int row, final int column, final double value) {
                return getEntry(selectedRows[row], selectedColumns[column]);
            }
        });
        return subMatrix;
    }

    public void copySubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn, final double[][] destination) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final int rowsCount = (endRow + 1) - startRow;
        final int columnsCount = (endColumn + 1) - startColumn;
        if (((destination.length) < rowsCount) || ((destination[0].length) < columnsCount)) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", destination.length, destination[0].length, rowsCount, columnsCount);
        }
        walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor() {
            private int startRow;

            private int startColumn;

            @java.lang.Override
            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.startRow = startRow;
                this.startColumn = startColumn;
            }

            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                destination[(row - (startRow))][(column - (startColumn))] = value;
            }
        }, startRow, endRow, startColumn, endColumn);
    }

    public void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        if (((destination.length) < (selectedRows.length)) || ((destination[0].length) < (selectedColumns.length))) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", destination.length, destination[0].length, selectedRows.length, selectedColumns.length);
        }
        for (int i = 0; i < (selectedRows.length); i++) {
            final double[] destinationI = destination[i];
            for (int j = 0; j < (selectedColumns.length); j++) {
                destinationI[j] = getEntry(selectedRows[i], selectedColumns[j]);
            }
        }
    }

    public void setSubMatrix(final double[][] subMatrix, final int row, final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        final int nRows = subMatrix.length;
        if (nRows == 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
        }
        final int nCols = subMatrix[0].length;
        if (nCols == 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
        }
        for (int r = 1; r < nRows; ++r) {
            if ((subMatrix[r].length) != nCols) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}", nCols, subMatrix[r].length);
            }
        }
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, ((nRows + row) - 1));
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, ((nCols + column) - 1));
        for (int i = 0; i < nRows; ++i) {
            for (int j = 0; j < nCols; ++j) {
                setEntry((row + i), (column + j), subMatrix[i][j]);
            }
        }
        lu = null;
    }

    public org.apache.commons.math.linear.RealMatrix getRowMatrix(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(1, nCols);
        for (int i = 0; i < nCols; ++i) {
            out.setEntry(0, i, getEntry(row, i));
        }
        return out;
    }

    public void setRowMatrix(final int row, final org.apache.commons.math.linear.RealMatrix matrix) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if (((matrix.getRowDimension()) != 1) || ((matrix.getColumnDimension()) != nCols)) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", matrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, matrix.getEntry(0, i));
        }
    }

    public org.apache.commons.math.linear.RealMatrix getColumnMatrix(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nRows, 1);
        for (int i = 0; i < nRows; ++i) {
            out.setEntry(i, 0, getEntry(i, column));
        }
        return out;
    }

    public void setColumnMatrix(final int column, final org.apache.commons.math.linear.RealMatrix matrix) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if (((matrix.getRowDimension()) != nRows) || ((matrix.getColumnDimension()) != 1)) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", matrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, matrix.getEntry(i, 0));
        }
    }

    public org.apache.commons.math.linear.RealVector getRowVector(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        return new org.apache.commons.math.linear.ArrayRealVector(getRow(row), false);
    }

    public void setRowVector(final int row, final org.apache.commons.math.linear.RealVector vector) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((vector.getDimension()) != nCols) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", 1, vector.getDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, vector.getEntry(i));
        }
    }

    public org.apache.commons.math.linear.RealVector getColumnVector(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        return new org.apache.commons.math.linear.ArrayRealVector(getColumn(column), false);
    }

    public void setColumnVector(final int column, final org.apache.commons.math.linear.RealVector vector) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((vector.getDimension()) != nRows) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", vector.getDimension(), 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, vector.getEntry(i));
        }
    }

    public double[] getRow(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final double[] out = new double[nCols];
        for (int i = 0; i < nCols; ++i) {
            out[i] = getEntry(row, i);
        }
        return out;
    }

    public void setRow(final int row, final double[] array) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((array.length) != nCols) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", 1, array.length, 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, array[i]);
        }
    }

    public double[] getColumn(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final double[] out = new double[nRows];
        for (int i = 0; i < nRows; ++i) {
            out[i] = getEntry(i, column);
        }
        return out;
    }

    public void setColumn(final int column, final double[] array) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((array.length) != nRows) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", array.length, 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, array[i]);
        }
    }

    public abstract double getEntry(int row, int column) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void setEntry(int row, int column, double value) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void addToEntry(int row, int column, double increment) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void multiplyEntry(int row, int column, double factor) throws org.apache.commons.math.linear.MatrixIndexException;

    public org.apache.commons.math.linear.RealMatrix transpose() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nCols, nRows);
        walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor() {
            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                out.setEntry(column, row, value);
            }
        });
        return out;
    }

    @java.lang.Deprecated
    public org.apache.commons.math.linear.RealMatrix inverse() throws org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.getInverse();
    }

    @java.lang.Deprecated
    public double getDeterminant() throws org.apache.commons.math.linear.InvalidMatrixException {
        return new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getDeterminant();
    }

    public boolean isSquare() {
        return (getColumnDimension()) == (getRowDimension());
    }

    @java.lang.Deprecated
    public boolean isSingular() {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return !(lu.isNonSingular());
    }

    public abstract int getRowDimension();

    public abstract int getColumnDimension();

    public double getTrace() throws org.apache.commons.math.linear.NonSquareMatrixException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (nRows != nCols) {
            throw new org.apache.commons.math.linear.NonSquareMatrixException(nRows, nCols);
        }
        double trace = 0;
        for (int i = 0; i < nRows; ++i) {
            trace += getEntry(i, i);
        }
        return trace;
    }

    public double[] operate(final double[] v) throws java.lang.IllegalArgumentException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nCols) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.length, nCols);
        }
        final double[] out = new double[nRows];
        for (int row = 0; row < nRows; ++row) {
            double sum = 0;
            for (int i = 0; i < nCols; ++i) {
                sum += (getEntry(row, i)) * (v[i]);
            }
            out[row] = sum;
        }
        return out;
    }

    public org.apache.commons.math.linear.RealVector operate(final org.apache.commons.math.linear.RealVector v) throws java.lang.IllegalArgumentException {
        try {
            return new org.apache.commons.math.linear.ArrayRealVector(operate(((org.apache.commons.math.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nCols) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.getDimension(), nCols);
            }
            final double[] out = new double[nRows];
            for (int row = 0; row < nRows; ++row) {
                double sum = 0;
                for (int i = 0; i < nCols; ++i) {
                    sum += (getEntry(row, i)) * (v.getEntry(i));
                }
                out[row] = sum;
            }
            return new org.apache.commons.math.linear.ArrayRealVector(out, false);
        }
    }

    public double[] preMultiply(final double[] v) throws java.lang.IllegalArgumentException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nRows) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.length, nRows);
        }
        final double[] out = new double[nCols];
        for (int col = 0; col < nCols; ++col) {
            double sum = 0;
            for (int i = 0; i < nRows; ++i) {
                sum += (getEntry(i, col)) * (v[i]);
            }
            out[col] = sum;
        }
        return out;
    }

    public org.apache.commons.math.linear.RealVector preMultiply(final org.apache.commons.math.linear.RealVector v) throws java.lang.IllegalArgumentException {
        try {
            return new org.apache.commons.math.linear.ArrayRealVector(preMultiply(((org.apache.commons.math.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nRows) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.getDimension(), nRows);
            }
            final double[] out = new double[nCols];
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nRows; ++i) {
                    sum += (getEntry(i, col)) * (v.getEntry(i));
                }
                out[col] = sum;
            }
            return new org.apache.commons.math.linear.ArrayRealVector(out);
        }
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    @java.lang.Deprecated
    public double[] solve(final double[] b) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.solve(b);
    }

    @java.lang.Deprecated
    public org.apache.commons.math.linear.RealMatrix solve(final org.apache.commons.math.linear.RealMatrix b) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.solve(b);
    }

    @java.lang.Deprecated
    public void luDecompose() throws org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
    }

    @java.lang.Override
    public java.lang.String toString() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final java.lang.StringBuffer res = new java.lang.StringBuffer();
        java.lang.String fullClassName = getClass().getName();
        java.lang.String shortClassName = fullClassName.substring(((fullClassName.lastIndexOf('.')) + 1));
        res.append(shortClassName).append("{");
        for (int i = 0; i < nRows; ++i) {
            if (i > 0) {
                res.append(",");
            }
            res.append("{");
            for (int j = 0; j < nCols; ++j) {
                if (j > 0) {
                    res.append(",");
                }
                res.append(getEntry(i, j));
            }
            res.append("}");
        }
        res.append("}");
        return res.toString();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object object) {
        if (object == (this)) {
            return true;
        }
        if ((object instanceof org.apache.commons.math.linear.RealMatrix) == false) {
            return false;
        }
        org.apache.commons.math.linear.RealMatrix m = ((org.apache.commons.math.linear.RealMatrix) (object));
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (((m.getColumnDimension()) != nCols) || ((m.getRowDimension()) != nRows)) {
            return false;
        }
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                if ((getEntry(row, col)) != (m.getEntry(row, col))) {
                    return false;
                }
            }
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        int ret = 7;
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        ret = (ret * 31) + nRows;
        ret = (ret * 31) + nCols;
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                ret = (ret * 31) + (((11 * (row + 1)) + (17 * (col + 1))) * (org.apache.commons.math.util.MathUtils.hash(getEntry(row, col))));
            }
        }
        return ret;
    }
}
08:55:48.492 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
08:55:48.492 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #372
08:55:48.492 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix$1:219 which is executed by 69 tests
816641250
08:55:48.614 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:48.638 [pool-1362-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:48.887 [pool-1361-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractRealMatrix.java:133: error: ')' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:133: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                          ^
AbstractRealMatrix.java:133: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:133: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                               ^
AbstractRealMatrix.java:133: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                         ^
AbstractRealMatrix.java:134: error: ')' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:134: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:134: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:134: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                            ^
AbstractRealMatrix.java:134: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                   ^
AbstractRealMatrix.java:136: error: ')' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:136: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                          ^
AbstractRealMatrix.java:136: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:136: error: illegal start of expression
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                               ^
AbstractRealMatrix.java:136: error: ';' expected
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                         ^
08:55:49.041 [pool-1361-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public abstract class AbstractRealMatrix implements org.apache.commons.math.linear.RealMatrix {
    @java.lang.Deprecated
    private org.apache.commons.math.linear.DecompositionSolver lu;

    protected AbstractRealMatrix() {
        lu = null;
    }

    protected AbstractRealMatrix(final int rowDimension, final int columnDimension) throws java.lang.IllegalArgumentException {
        if (rowDimension <= 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("invalid row dimension {0} (must be positive)", rowDimension);
        }
        if (columnDimension <= 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("invalid column dimension {0} (must be positive)", columnDimension);
        }
        lu = null;
    }

    public abstract org.apache.commons.math.linear.RealMatrix createMatrix(final int rowDimension, final int columnDimension) throws java.lang.IllegalArgumentException;

    public abstract org.apache.commons.math.linear.RealMatrix copy();

    public org.apache.commons.math.linear.RealMatrix add(org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkAdditionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix subtract(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkSubtractionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) - (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix scalarAdd(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + d));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix scalarMultiply(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) * d));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix multiply(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(this, m);
        final int nRows = getRowDimension();
        final int nCols = m.getColumnDimension();
        final int nSum = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nRows, nCols);
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nSum; ++i) {
                    sum += (getEntry(row, i)) * (m.getEntry(i, col));
                }
                out.setEntry(row, col, sum);
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix preMultiply(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        return m.multiply(this);
    }

    public double[][] getData() {
        final double[][] data = new double[getRowDimension()][getColumnDimension()];
        for (int i = 0; i < (data.length); ++i) {
            final double[] dataI = data[i];
            for (int j = 0; j < (dataI.length); ++j) {
                dataI[j] = getEntry(i, j);
            }
        }
        return data;
    }

    public double getNorm() {
        return walkInColumnOrder(new org.apache.commons.math.linear.RealMatrixPreservingVisitor() {
            private double endRow;

            private double columnSum;

            private double maxColSum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.endRow = endRow;
                columnSum = 0;
                maxColSum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                columnSum += java.lang.Math.abs(value);
                if (row == (endRow)) {
                    boolean spoonDefaultValue = false;
                    try {
                        spoonDefaultValue = true;
                    } catch (java.lang.Exception __NopolProcessorException) {
                    }
                    boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                    if (fr.inria.lille.commons.trace.RuntimeValues.instance(227).isEnabled()) {
                        fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectionStarts();
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("column",column);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("row",row);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                        try{fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectInput("value",value);} catch (Exception ex1) {ex1.printStackTrace();};
                        fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectOutput(runtimeAngelicValue);
                        fr.inria.lille.commons.trace.RuntimeValues.instance(227).collectionEnds();
                    }
                    if (runtimeAngelicValue)
                        maxColSum = java.lang.Math.max(maxColSum, columnSum);

                    columnSum = 0;
                }
            }

            public double end() {
                return maxColSum;
            }
        });
    }

    public double getFrobeniusNorm() {
        return walkInOptimizedOrder(new org.apache.commons.math.linear.RealMatrixPreservingVisitor() {
            private double sum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                sum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                sum += value * value;
            }

            public double end() {
                return java.lang.Math.sqrt(sum);
            }
        });
    }

    public org.apache.commons.math.linear.RealMatrix getSubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final org.apache.commons.math.linear.RealMatrix subMatrix = createMatrix(((endRow - startRow) + 1), ((endColumn - startColumn) + 1));
        for (int i = startRow; i <= endRow; ++i) {
            for (int j = startColumn; j <= endColumn; ++j) {
                subMatrix.setEntry((i - startRow), (j - startColumn), getEntry(i, j));
            }
        }
        return subMatrix;
    }

    public org.apache.commons.math.linear.RealMatrix getSubMatrix(final int[] selectedRows, final int[] selectedColumns) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        final org.apache.commons.math.linear.RealMatrix subMatrix = createMatrix(selectedRows.length, selectedColumns.length);
        subMatrix.walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor() {
            @java.lang.Override
            public double visit(final int row, final int column, final double value) {
                return getEntry(selectedRows[row], selectedColumns[column]);
            }
        });
        return subMatrix;
    }

    public void copySubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn, final double[][] destination) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final int rowsCount = (endRow + 1) - startRow;
        final int columnsCount = (endColumn + 1) - startColumn;
        if (((destination.length) < rowsCount) || ((destination[0].length) < columnsCount)) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", destination.length, destination[0].length, rowsCount, columnsCount);
        }
        walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor() {
            private int startRow;

            private int startColumn;

            @java.lang.Override
            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.startRow = startRow;
                this.startColumn = startColumn;
            }

            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                destination[(row - (startRow))][(column - (startColumn))] = value;
            }
        }, startRow, endRow, startColumn, endColumn);
    }

    public void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        if (((destination.length) < (selectedRows.length)) || ((destination[0].length) < (selectedColumns.length))) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", destination.length, destination[0].length, selectedRows.length, selectedColumns.length);
        }
        for (int i = 0; i < (selectedRows.length); i++) {
            final double[] destinationI = destination[i];
            for (int j = 0; j < (selectedColumns.length); j++) {
                destinationI[j] = getEntry(selectedRows[i], selectedColumns[j]);
            }
        }
    }

    public void setSubMatrix(final double[][] subMatrix, final int row, final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        final int nRows = subMatrix.length;
        if (nRows == 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
        }
        final int nCols = subMatrix[0].length;
        if (nCols == 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
        }
        for (int r = 1; r < nRows; ++r) {
            if ((subMatrix[r].length) != nCols) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}", nCols, subMatrix[r].length);
            }
        }
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, ((nRows + row) - 1));
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, ((nCols + column) - 1));
        for (int i = 0; i < nRows; ++i) {
            for (int j = 0; j < nCols; ++j) {
                setEntry((row + i), (column + j), subMatrix[i][j]);
            }
        }
        lu = null;
    }

    public org.apache.commons.math.linear.RealMatrix getRowMatrix(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(1, nCols);
        for (int i = 0; i < nCols; ++i) {
            out.setEntry(0, i, getEntry(row, i));
        }
        return out;
    }

    public void setRowMatrix(final int row, final org.apache.commons.math.linear.RealMatrix matrix) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if (((matrix.getRowDimension()) != 1) || ((matrix.getColumnDimension()) != nCols)) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", matrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, matrix.getEntry(0, i));
        }
    }

    public org.apache.commons.math.linear.RealMatrix getColumnMatrix(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nRows, 1);
        for (int i = 0; i < nRows; ++i) {
            out.setEntry(i, 0, getEntry(i, column));
        }
        return out;
    }

    public void setColumnMatrix(final int column, final org.apache.commons.math.linear.RealMatrix matrix) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if (((matrix.getRowDimension()) != nRows) || ((matrix.getColumnDimension()) != 1)) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", matrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, matrix.getEntry(i, 0));
        }
    }

    public org.apache.commons.math.linear.RealVector getRowVector(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        return new org.apache.commons.math.linear.ArrayRealVector(getRow(row), false);
    }

    public void setRowVector(final int row, final org.apache.commons.math.linear.RealVector vector) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((vector.getDimension()) != nCols) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", 1, vector.getDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, vector.getEntry(i));
        }
    }

    public org.apache.commons.math.linear.RealVector getColumnVector(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        return new org.apache.commons.math.linear.ArrayRealVector(getColumn(column), false);
    }

    public void setColumnVector(final int column, final org.apache.commons.math.linear.RealVector vector) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((vector.getDimension()) != nRows) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", vector.getDimension(), 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, vector.getEntry(i));
        }
    }

    public double[] getRow(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final double[] out = new double[nCols];
        for (int i = 0; i < nCols; ++i) {
            out[i] = getEntry(row, i);
        }
        return out;
    }

    public void setRow(final int row, final double[] array) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((array.length) != nCols) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", 1, array.length, 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, array[i]);
        }
    }

    public double[] getColumn(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final double[] out = new double[nRows];
        for (int i = 0; i < nRows; ++i) {
            out[i] = getEntry(i, column);
        }
        return out;
    }

    public void setColumn(final int column, final double[] array) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((array.length) != nRows) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", array.length, 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, array[i]);
        }
    }

    public abstract double getEntry(int row, int column) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void setEntry(int row, int column, double value) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void addToEntry(int row, int column, double increment) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void multiplyEntry(int row, int column, double factor) throws org.apache.commons.math.linear.MatrixIndexException;

    public org.apache.commons.math.linear.RealMatrix transpose() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nCols, nRows);
        walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor() {
            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                out.setEntry(column, row, value);
            }
        });
        return out;
    }

    @java.lang.Deprecated
    public org.apache.commons.math.linear.RealMatrix inverse() throws org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.getInverse();
    }

    @java.lang.Deprecated
    public double getDeterminant() throws org.apache.commons.math.linear.InvalidMatrixException {
        return new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getDeterminant();
    }

    public boolean isSquare() {
        return (getColumnDimension()) == (getRowDimension());
    }

    @java.lang.Deprecated
    public boolean isSingular() {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return !(lu.isNonSingular());
    }

    public abstract int getRowDimension();

    public abstract int getColumnDimension();

    public double getTrace() throws org.apache.commons.math.linear.NonSquareMatrixException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (nRows != nCols) {
            throw new org.apache.commons.math.linear.NonSquareMatrixException(nRows, nCols);
        }
        double trace = 0;
        for (int i = 0; i < nRows; ++i) {
            trace += getEntry(i, i);
        }
        return trace;
    }

    public double[] operate(final double[] v) throws java.lang.IllegalArgumentException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nCols) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.length, nCols);
        }
        final double[] out = new double[nRows];
        for (int row = 0; row < nRows; ++row) {
            double sum = 0;
            for (int i = 0; i < nCols; ++i) {
                sum += (getEntry(row, i)) * (v[i]);
            }
            out[row] = sum;
        }
        return out;
    }

    public org.apache.commons.math.linear.RealVector operate(final org.apache.commons.math.linear.RealVector v) throws java.lang.IllegalArgumentException {
        try {
            return new org.apache.commons.math.linear.ArrayRealVector(operate(((org.apache.commons.math.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nCols) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.getDimension(), nCols);
            }
            final double[] out = new double[nRows];
            for (int row = 0; row < nRows; ++row) {
                double sum = 0;
                for (int i = 0; i < nCols; ++i) {
                    sum += (getEntry(row, i)) * (v.getEntry(i));
                }
                out[row] = sum;
            }
            return new org.apache.commons.math.linear.ArrayRealVector(out, false);
        }
    }

    public double[] preMultiply(final double[] v) throws java.lang.IllegalArgumentException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nRows) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.length, nRows);
        }
        final double[] out = new double[nCols];
        for (int col = 0; col < nCols; ++col) {
            double sum = 0;
            for (int i = 0; i < nRows; ++i) {
                sum += (getEntry(i, col)) * (v[i]);
            }
            out[col] = sum;
        }
        return out;
    }

    public org.apache.commons.math.linear.RealVector preMultiply(final org.apache.commons.math.linear.RealVector v) throws java.lang.IllegalArgumentException {
        try {
            return new org.apache.commons.math.linear.ArrayRealVector(preMultiply(((org.apache.commons.math.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nRows) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.getDimension(), nRows);
            }
            final double[] out = new double[nCols];
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nRows; ++i) {
                    sum += (getEntry(i, col)) * (v.getEntry(i));
                }
                out[col] = sum;
            }
            return new org.apache.commons.math.linear.ArrayRealVector(out);
        }
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    @java.lang.Deprecated
    public double[] solve(final double[] b) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.solve(b);
    }

    @java.lang.Deprecated
    public org.apache.commons.math.linear.RealMatrix solve(final org.apache.commons.math.linear.RealMatrix b) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.solve(b);
    }

    @java.lang.Deprecated
    public void luDecompose() throws org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
    }

    @java.lang.Override
    public java.lang.String toString() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final java.lang.StringBuffer res = new java.lang.StringBuffer();
        java.lang.String fullClassName = getClass().getName();
        java.lang.String shortClassName = fullClassName.substring(((fullClassName.lastIndexOf('.')) + 1));
        res.append(shortClassName).append("{");
        for (int i = 0; i < nRows; ++i) {
            if (i > 0) {
                res.append(",");
            }
            res.append("{");
            for (int j = 0; j < nCols; ++j) {
                if (j > 0) {
                    res.append(",");
                }
                res.append(getEntry(i, j));
            }
            res.append("}");
        }
        res.append("}");
        return res.toString();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object object) {
        if (object == (this)) {
            return true;
        }
        if ((object instanceof org.apache.commons.math.linear.RealMatrix) == false) {
            return false;
        }
        org.apache.commons.math.linear.RealMatrix m = ((org.apache.commons.math.linear.RealMatrix) (object));
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (((m.getColumnDimension()) != nCols) || ((m.getRowDimension()) != nRows)) {
            return false;
        }
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                if ((getEntry(row, col)) != (m.getEntry(row, col))) {
                    return false;
                }
            }
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        int ret = 7;
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        ret = (ret * 31) + nRows;
        ret = (ret * 31) + nCols;
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                ret = (ret * 31) + (((11 * (row + 1)) + (17 * (col + 1))) * (org.apache.commons.math.util.MathUtils.hash(getEntry(row, col))));
            }
        }
        return ret;
    }
}
08:55:49.042 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
08:55:49.042 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #373
08:55:49.042 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix$1:218 which is executed by 69 tests
816641250
08:55:49.195 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:49.219 [pool-1364-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:49.480 [pool-1363-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractRealMatrix.java:131: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:131: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:131: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:131: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:131: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:134: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                 ^
AbstractRealMatrix.java:134: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                   ^
AbstractRealMatrix.java:134: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:134: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:134: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                               ^
AbstractRealMatrix.java:136: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:136: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:136: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:136: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:136: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                     ^
08:55:49.615 [pool-1363-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public abstract class AbstractRealMatrix implements org.apache.commons.math.linear.RealMatrix {
    @java.lang.Deprecated
    private org.apache.commons.math.linear.DecompositionSolver lu;

    protected AbstractRealMatrix() {
        lu = null;
    }

    protected AbstractRealMatrix(final int rowDimension, final int columnDimension) throws java.lang.IllegalArgumentException {
        if (rowDimension <= 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("invalid row dimension {0} (must be positive)", rowDimension);
        }
        if (columnDimension <= 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("invalid column dimension {0} (must be positive)", columnDimension);
        }
        lu = null;
    }

    public abstract org.apache.commons.math.linear.RealMatrix createMatrix(final int rowDimension, final int columnDimension) throws java.lang.IllegalArgumentException;

    public abstract org.apache.commons.math.linear.RealMatrix copy();

    public org.apache.commons.math.linear.RealMatrix add(org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkAdditionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix subtract(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkSubtractionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) - (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix scalarAdd(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + d));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix scalarMultiply(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) * d));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix multiply(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(this, m);
        final int nRows = getRowDimension();
        final int nCols = m.getColumnDimension();
        final int nSum = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nRows, nCols);
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nSum; ++i) {
                    sum += (getEntry(row, i)) * (m.getEntry(i, col));
                }
                out.setEntry(row, col, sum);
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix preMultiply(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        return m.multiply(this);
    }

    public double[][] getData() {
        final double[][] data = new double[getRowDimension()][getColumnDimension()];
        for (int i = 0; i < (data.length); ++i) {
            final double[] dataI = data[i];
            for (int j = 0; j < (dataI.length); ++j) {
                dataI[j] = getEntry(i, j);
            }
        }
        return data;
    }

    public double getNorm() {
        return walkInColumnOrder(new org.apache.commons.math.linear.RealMatrixPreservingVisitor() {
            private double endRow;

            private double columnSum;

            private double maxColSum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.endRow = endRow;
                columnSum = 0;
                maxColSum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                columnSum += java.lang.Math.abs(value);
                boolean spoonDefaultValue = false;
                try {
                    spoonDefaultValue = true;
                } catch (java.lang.Exception __NopolProcessorException) {
                }
                boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                if (fr.inria.lille.commons.trace.RuntimeValues.instance(228).isEnabled()) {
                    fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectionStarts();
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("row == (endRow)",row == (endRow));} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("column",column);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("row",row);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectInput("value",value);} catch (Exception ex1) {ex1.printStackTrace();};
                    fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectOutput(runtimeAngelicValue);
                    fr.inria.lille.commons.trace.RuntimeValues.instance(228).collectionEnds();
                }
                if (runtimeAngelicValue) if (row == (endRow)) {
                    maxColSum = java.lang.Math.max(maxColSum, columnSum);
                    columnSum = 0;
                }
            }

            public double end() {
                return maxColSum;
            }
        });
    }

    public double getFrobeniusNorm() {
        return walkInOptimizedOrder(new org.apache.commons.math.linear.RealMatrixPreservingVisitor() {
            private double sum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                sum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                sum += value * value;
            }

            public double end() {
                return java.lang.Math.sqrt(sum);
            }
        });
    }

    public org.apache.commons.math.linear.RealMatrix getSubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final org.apache.commons.math.linear.RealMatrix subMatrix = createMatrix(((endRow - startRow) + 1), ((endColumn - startColumn) + 1));
        for (int i = startRow; i <= endRow; ++i) {
            for (int j = startColumn; j <= endColumn; ++j) {
                subMatrix.setEntry((i - startRow), (j - startColumn), getEntry(i, j));
            }
        }
        return subMatrix;
    }

    public org.apache.commons.math.linear.RealMatrix getSubMatrix(final int[] selectedRows, final int[] selectedColumns) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        final org.apache.commons.math.linear.RealMatrix subMatrix = createMatrix(selectedRows.length, selectedColumns.length);
        subMatrix.walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor() {
            @java.lang.Override
            public double visit(final int row, final int column, final double value) {
                return getEntry(selectedRows[row], selectedColumns[column]);
            }
        });
        return subMatrix;
    }

    public void copySubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn, final double[][] destination) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final int rowsCount = (endRow + 1) - startRow;
        final int columnsCount = (endColumn + 1) - startColumn;
        if (((destination.length) < rowsCount) || ((destination[0].length) < columnsCount)) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", destination.length, destination[0].length, rowsCount, columnsCount);
        }
        walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor() {
            private int startRow;

            private int startColumn;

            @java.lang.Override
            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.startRow = startRow;
                this.startColumn = startColumn;
            }

            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                destination[(row - (startRow))][(column - (startColumn))] = value;
            }
        }, startRow, endRow, startColumn, endColumn);
    }

    public void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        if (((destination.length) < (selectedRows.length)) || ((destination[0].length) < (selectedColumns.length))) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", destination.length, destination[0].length, selectedRows.length, selectedColumns.length);
        }
        for (int i = 0; i < (selectedRows.length); i++) {
            final double[] destinationI = destination[i];
            for (int j = 0; j < (selectedColumns.length); j++) {
                destinationI[j] = getEntry(selectedRows[i], selectedColumns[j]);
            }
        }
    }

    public void setSubMatrix(final double[][] subMatrix, final int row, final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        final int nRows = subMatrix.length;
        if (nRows == 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
        }
        final int nCols = subMatrix[0].length;
        if (nCols == 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
        }
        for (int r = 1; r < nRows; ++r) {
            if ((subMatrix[r].length) != nCols) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}", nCols, subMatrix[r].length);
            }
        }
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, ((nRows + row) - 1));
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, ((nCols + column) - 1));
        for (int i = 0; i < nRows; ++i) {
            for (int j = 0; j < nCols; ++j) {
                setEntry((row + i), (column + j), subMatrix[i][j]);
            }
        }
        lu = null;
    }

    public org.apache.commons.math.linear.RealMatrix getRowMatrix(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(1, nCols);
        for (int i = 0; i < nCols; ++i) {
            out.setEntry(0, i, getEntry(row, i));
        }
        return out;
    }

    public void setRowMatrix(final int row, final org.apache.commons.math.linear.RealMatrix matrix) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if (((matrix.getRowDimension()) != 1) || ((matrix.getColumnDimension()) != nCols)) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", matrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, matrix.getEntry(0, i));
        }
    }

    public org.apache.commons.math.linear.RealMatrix getColumnMatrix(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nRows, 1);
        for (int i = 0; i < nRows; ++i) {
            out.setEntry(i, 0, getEntry(i, column));
        }
        return out;
    }

    public void setColumnMatrix(final int column, final org.apache.commons.math.linear.RealMatrix matrix) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if (((matrix.getRowDimension()) != nRows) || ((matrix.getColumnDimension()) != 1)) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", matrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, matrix.getEntry(i, 0));
        }
    }

    public org.apache.commons.math.linear.RealVector getRowVector(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        return new org.apache.commons.math.linear.ArrayRealVector(getRow(row), false);
    }

    public void setRowVector(final int row, final org.apache.commons.math.linear.RealVector vector) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((vector.getDimension()) != nCols) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", 1, vector.getDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, vector.getEntry(i));
        }
    }

    public org.apache.commons.math.linear.RealVector getColumnVector(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        return new org.apache.commons.math.linear.ArrayRealVector(getColumn(column), false);
    }

    public void setColumnVector(final int column, final org.apache.commons.math.linear.RealVector vector) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((vector.getDimension()) != nRows) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", vector.getDimension(), 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, vector.getEntry(i));
        }
    }

    public double[] getRow(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final double[] out = new double[nCols];
        for (int i = 0; i < nCols; ++i) {
            out[i] = getEntry(row, i);
        }
        return out;
    }

    public void setRow(final int row, final double[] array) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((array.length) != nCols) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", 1, array.length, 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, array[i]);
        }
    }

    public double[] getColumn(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final double[] out = new double[nRows];
        for (int i = 0; i < nRows; ++i) {
            out[i] = getEntry(i, column);
        }
        return out;
    }

    public void setColumn(final int column, final double[] array) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((array.length) != nRows) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", array.length, 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, array[i]);
        }
    }

    public abstract double getEntry(int row, int column) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void setEntry(int row, int column, double value) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void addToEntry(int row, int column, double increment) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void multiplyEntry(int row, int column, double factor) throws org.apache.commons.math.linear.MatrixIndexException;

    public org.apache.commons.math.linear.RealMatrix transpose() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nCols, nRows);
        walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor() {
            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                out.setEntry(column, row, value);
            }
        });
        return out;
    }

    @java.lang.Deprecated
    public org.apache.commons.math.linear.RealMatrix inverse() throws org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.getInverse();
    }

    @java.lang.Deprecated
    public double getDeterminant() throws org.apache.commons.math.linear.InvalidMatrixException {
        return new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getDeterminant();
    }

    public boolean isSquare() {
        return (getColumnDimension()) == (getRowDimension());
    }

    @java.lang.Deprecated
    public boolean isSingular() {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return !(lu.isNonSingular());
    }

    public abstract int getRowDimension();

    public abstract int getColumnDimension();

    public double getTrace() throws org.apache.commons.math.linear.NonSquareMatrixException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (nRows != nCols) {
            throw new org.apache.commons.math.linear.NonSquareMatrixException(nRows, nCols);
        }
        double trace = 0;
        for (int i = 0; i < nRows; ++i) {
            trace += getEntry(i, i);
        }
        return trace;
    }

    public double[] operate(final double[] v) throws java.lang.IllegalArgumentException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nCols) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.length, nCols);
        }
        final double[] out = new double[nRows];
        for (int row = 0; row < nRows; ++row) {
            double sum = 0;
            for (int i = 0; i < nCols; ++i) {
                sum += (getEntry(row, i)) * (v[i]);
            }
            out[row] = sum;
        }
        return out;
    }

    public org.apache.commons.math.linear.RealVector operate(final org.apache.commons.math.linear.RealVector v) throws java.lang.IllegalArgumentException {
        try {
            return new org.apache.commons.math.linear.ArrayRealVector(operate(((org.apache.commons.math.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nCols) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.getDimension(), nCols);
            }
            final double[] out = new double[nRows];
            for (int row = 0; row < nRows; ++row) {
                double sum = 0;
                for (int i = 0; i < nCols; ++i) {
                    sum += (getEntry(row, i)) * (v.getEntry(i));
                }
                out[row] = sum;
            }
            return new org.apache.commons.math.linear.ArrayRealVector(out, false);
        }
    }

    public double[] preMultiply(final double[] v) throws java.lang.IllegalArgumentException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nRows) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.length, nRows);
        }
        final double[] out = new double[nCols];
        for (int col = 0; col < nCols; ++col) {
            double sum = 0;
            for (int i = 0; i < nRows; ++i) {
                sum += (getEntry(i, col)) * (v[i]);
            }
            out[col] = sum;
        }
        return out;
    }

    public org.apache.commons.math.linear.RealVector preMultiply(final org.apache.commons.math.linear.RealVector v) throws java.lang.IllegalArgumentException {
        try {
            return new org.apache.commons.math.linear.ArrayRealVector(preMultiply(((org.apache.commons.math.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nRows) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.getDimension(), nRows);
            }
            final double[] out = new double[nCols];
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nRows; ++i) {
                    sum += (getEntry(i, col)) * (v.getEntry(i));
                }
                out[col] = sum;
            }
            return new org.apache.commons.math.linear.ArrayRealVector(out);
        }
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    @java.lang.Deprecated
    public double[] solve(final double[] b) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.solve(b);
    }

    @java.lang.Deprecated
    public org.apache.commons.math.linear.RealMatrix solve(final org.apache.commons.math.linear.RealMatrix b) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.solve(b);
    }

    @java.lang.Deprecated
    public void luDecompose() throws org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
    }

    @java.lang.Override
    public java.lang.String toString() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final java.lang.StringBuffer res = new java.lang.StringBuffer();
        java.lang.String fullClassName = getClass().getName();
        java.lang.String shortClassName = fullClassName.substring(((fullClassName.lastIndexOf('.')) + 1));
        res.append(shortClassName).append("{");
        for (int i = 0; i < nRows; ++i) {
            if (i > 0) {
                res.append(",");
            }
            res.append("{");
            for (int j = 0; j < nCols; ++j) {
                if (j > 0) {
                    res.append(",");
                }
                res.append(getEntry(i, j));
            }
            res.append("}");
        }
        res.append("}");
        return res.toString();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object object) {
        if (object == (this)) {
            return true;
        }
        if ((object instanceof org.apache.commons.math.linear.RealMatrix) == false) {
            return false;
        }
        org.apache.commons.math.linear.RealMatrix m = ((org.apache.commons.math.linear.RealMatrix) (object));
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (((m.getColumnDimension()) != nCols) || ((m.getRowDimension()) != nRows)) {
            return false;
        }
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                if ((getEntry(row, col)) != (m.getEntry(row, col))) {
                    return false;
                }
            }
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        int ret = 7;
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        ret = (ret * 31) + nRows;
        ret = (ret * 31) + nCols;
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                ret = (ret * 31) + (((11 * (row + 1)) + (17 * (col + 1))) * (org.apache.commons.math.util.MathUtils.hash(getEntry(row, col))));
            }
        }
        return ret;
    }
}
08:55:49.616 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
08:55:49.616 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:49.639 [pool-1366-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:49.887 [pool-1365-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractRealMatrix.java:131: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:131: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:131: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:131: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:131: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:134: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                 ^
AbstractRealMatrix.java:134: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                   ^
AbstractRealMatrix.java:134: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:134: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:134: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                               ^
AbstractRealMatrix.java:136: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:136: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:136: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:136: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:136: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                     ^
08:55:50.022 [pool-1365-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public abstract class AbstractRealMatrix implements org.apache.commons.math.linear.RealMatrix {
    @java.lang.Deprecated
    private org.apache.commons.math.linear.DecompositionSolver lu;

    protected AbstractRealMatrix() {
        lu = null;
    }

    protected AbstractRealMatrix(final int rowDimension, final int columnDimension) throws java.lang.IllegalArgumentException {
        if (rowDimension <= 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("invalid row dimension {0} (must be positive)", rowDimension);
        }
        if (columnDimension <= 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("invalid column dimension {0} (must be positive)", columnDimension);
        }
        lu = null;
    }

    public abstract org.apache.commons.math.linear.RealMatrix createMatrix(final int rowDimension, final int columnDimension) throws java.lang.IllegalArgumentException;

    public abstract org.apache.commons.math.linear.RealMatrix copy();

    public org.apache.commons.math.linear.RealMatrix add(org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkAdditionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix subtract(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkSubtractionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) - (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix scalarAdd(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + d));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix scalarMultiply(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) * d));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix multiply(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(this, m);
        final int nRows = getRowDimension();
        final int nCols = m.getColumnDimension();
        final int nSum = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nRows, nCols);
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nSum; ++i) {
                    sum += (getEntry(row, i)) * (m.getEntry(i, col));
                }
                out.setEntry(row, col, sum);
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix preMultiply(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        return m.multiply(this);
    }

    public double[][] getData() {
        final double[][] data = new double[getRowDimension()][getColumnDimension()];
        for (int i = 0; i < (data.length); ++i) {
            final double[] dataI = data[i];
            for (int j = 0; j < (dataI.length); ++j) {
                dataI[j] = getEntry(i, j);
            }
        }
        return data;
    }

    public double getNorm() {
        return walkInColumnOrder(new org.apache.commons.math.linear.RealMatrixPreservingVisitor() {
            private double endRow;

            private double columnSum;

            private double maxColSum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.endRow = endRow;
                columnSum = 0;
                maxColSum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                columnSum += java.lang.Math.abs(value);
                boolean spoonDefaultValue = false;
                try {
                    spoonDefaultValue = row == (endRow);
                } catch (java.lang.Exception __NopolProcessorException) {
                }
                boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                if (fr.inria.lille.commons.trace.RuntimeValues.instance(229).isEnabled()) {
                    fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectionStarts();
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("row == (endRow)",row == (endRow));} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("column",column);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("row",row);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectInput("value",value);} catch (Exception ex1) {ex1.printStackTrace();};
                    fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectOutput(runtimeAngelicValue);
                    fr.inria.lille.commons.trace.RuntimeValues.instance(229).collectionEnds();
                }
                if (runtimeAngelicValue) {
                    maxColSum = java.lang.Math.max(maxColSum, columnSum);
                    columnSum = 0;
                }
            }

            public double end() {
                return maxColSum;
            }
        });
    }

    public double getFrobeniusNorm() {
        return walkInOptimizedOrder(new org.apache.commons.math.linear.RealMatrixPreservingVisitor() {
            private double sum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                sum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                sum += value * value;
            }

            public double end() {
                return java.lang.Math.sqrt(sum);
            }
        });
    }

    public org.apache.commons.math.linear.RealMatrix getSubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final org.apache.commons.math.linear.RealMatrix subMatrix = createMatrix(((endRow - startRow) + 1), ((endColumn - startColumn) + 1));
        for (int i = startRow; i <= endRow; ++i) {
            for (int j = startColumn; j <= endColumn; ++j) {
                subMatrix.setEntry((i - startRow), (j - startColumn), getEntry(i, j));
            }
        }
        return subMatrix;
    }

    public org.apache.commons.math.linear.RealMatrix getSubMatrix(final int[] selectedRows, final int[] selectedColumns) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        final org.apache.commons.math.linear.RealMatrix subMatrix = createMatrix(selectedRows.length, selectedColumns.length);
        subMatrix.walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor() {
            @java.lang.Override
            public double visit(final int row, final int column, final double value) {
                return getEntry(selectedRows[row], selectedColumns[column]);
            }
        });
        return subMatrix;
    }

    public void copySubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn, final double[][] destination) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final int rowsCount = (endRow + 1) - startRow;
        final int columnsCount = (endColumn + 1) - startColumn;
        if (((destination.length) < rowsCount) || ((destination[0].length) < columnsCount)) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", destination.length, destination[0].length, rowsCount, columnsCount);
        }
        walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor() {
            private int startRow;

            private int startColumn;

            @java.lang.Override
            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.startRow = startRow;
                this.startColumn = startColumn;
            }

            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                destination[(row - (startRow))][(column - (startColumn))] = value;
            }
        }, startRow, endRow, startColumn, endColumn);
    }

    public void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        if (((destination.length) < (selectedRows.length)) || ((destination[0].length) < (selectedColumns.length))) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", destination.length, destination[0].length, selectedRows.length, selectedColumns.length);
        }
        for (int i = 0; i < (selectedRows.length); i++) {
            final double[] destinationI = destination[i];
            for (int j = 0; j < (selectedColumns.length); j++) {
                destinationI[j] = getEntry(selectedRows[i], selectedColumns[j]);
            }
        }
    }

    public void setSubMatrix(final double[][] subMatrix, final int row, final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        final int nRows = subMatrix.length;
        if (nRows == 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
        }
        final int nCols = subMatrix[0].length;
        if (nCols == 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
        }
        for (int r = 1; r < nRows; ++r) {
            if ((subMatrix[r].length) != nCols) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}", nCols, subMatrix[r].length);
            }
        }
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, ((nRows + row) - 1));
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, ((nCols + column) - 1));
        for (int i = 0; i < nRows; ++i) {
            for (int j = 0; j < nCols; ++j) {
                setEntry((row + i), (column + j), subMatrix[i][j]);
            }
        }
        lu = null;
    }

    public org.apache.commons.math.linear.RealMatrix getRowMatrix(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(1, nCols);
        for (int i = 0; i < nCols; ++i) {
            out.setEntry(0, i, getEntry(row, i));
        }
        return out;
    }

    public void setRowMatrix(final int row, final org.apache.commons.math.linear.RealMatrix matrix) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if (((matrix.getRowDimension()) != 1) || ((matrix.getColumnDimension()) != nCols)) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", matrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, matrix.getEntry(0, i));
        }
    }

    public org.apache.commons.math.linear.RealMatrix getColumnMatrix(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nRows, 1);
        for (int i = 0; i < nRows; ++i) {
            out.setEntry(i, 0, getEntry(i, column));
        }
        return out;
    }

    public void setColumnMatrix(final int column, final org.apache.commons.math.linear.RealMatrix matrix) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if (((matrix.getRowDimension()) != nRows) || ((matrix.getColumnDimension()) != 1)) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", matrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, matrix.getEntry(i, 0));
        }
    }

    public org.apache.commons.math.linear.RealVector getRowVector(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        return new org.apache.commons.math.linear.ArrayRealVector(getRow(row), false);
    }

    public void setRowVector(final int row, final org.apache.commons.math.linear.RealVector vector) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((vector.getDimension()) != nCols) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", 1, vector.getDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, vector.getEntry(i));
        }
    }

    public org.apache.commons.math.linear.RealVector getColumnVector(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        return new org.apache.commons.math.linear.ArrayRealVector(getColumn(column), false);
    }

    public void setColumnVector(final int column, final org.apache.commons.math.linear.RealVector vector) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((vector.getDimension()) != nRows) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", vector.getDimension(), 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, vector.getEntry(i));
        }
    }

    public double[] getRow(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final double[] out = new double[nCols];
        for (int i = 0; i < nCols; ++i) {
            out[i] = getEntry(row, i);
        }
        return out;
    }

    public void setRow(final int row, final double[] array) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((array.length) != nCols) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", 1, array.length, 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, array[i]);
        }
    }

    public double[] getColumn(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final double[] out = new double[nRows];
        for (int i = 0; i < nRows; ++i) {
            out[i] = getEntry(i, column);
        }
        return out;
    }

    public void setColumn(final int column, final double[] array) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((array.length) != nRows) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", array.length, 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, array[i]);
        }
    }

    public abstract double getEntry(int row, int column) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void setEntry(int row, int column, double value) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void addToEntry(int row, int column, double increment) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void multiplyEntry(int row, int column, double factor) throws org.apache.commons.math.linear.MatrixIndexException;

    public org.apache.commons.math.linear.RealMatrix transpose() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nCols, nRows);
        walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor() {
            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                out.setEntry(column, row, value);
            }
        });
        return out;
    }

    @java.lang.Deprecated
    public org.apache.commons.math.linear.RealMatrix inverse() throws org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.getInverse();
    }

    @java.lang.Deprecated
    public double getDeterminant() throws org.apache.commons.math.linear.InvalidMatrixException {
        return new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getDeterminant();
    }

    public boolean isSquare() {
        return (getColumnDimension()) == (getRowDimension());
    }

    @java.lang.Deprecated
    public boolean isSingular() {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return !(lu.isNonSingular());
    }

    public abstract int getRowDimension();

    public abstract int getColumnDimension();

    public double getTrace() throws org.apache.commons.math.linear.NonSquareMatrixException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (nRows != nCols) {
            throw new org.apache.commons.math.linear.NonSquareMatrixException(nRows, nCols);
        }
        double trace = 0;
        for (int i = 0; i < nRows; ++i) {
            trace += getEntry(i, i);
        }
        return trace;
    }

    public double[] operate(final double[] v) throws java.lang.IllegalArgumentException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nCols) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.length, nCols);
        }
        final double[] out = new double[nRows];
        for (int row = 0; row < nRows; ++row) {
            double sum = 0;
            for (int i = 0; i < nCols; ++i) {
                sum += (getEntry(row, i)) * (v[i]);
            }
            out[row] = sum;
        }
        return out;
    }

    public org.apache.commons.math.linear.RealVector operate(final org.apache.commons.math.linear.RealVector v) throws java.lang.IllegalArgumentException {
        try {
            return new org.apache.commons.math.linear.ArrayRealVector(operate(((org.apache.commons.math.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nCols) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.getDimension(), nCols);
            }
            final double[] out = new double[nRows];
            for (int row = 0; row < nRows; ++row) {
                double sum = 0;
                for (int i = 0; i < nCols; ++i) {
                    sum += (getEntry(row, i)) * (v.getEntry(i));
                }
                out[row] = sum;
            }
            return new org.apache.commons.math.linear.ArrayRealVector(out, false);
        }
    }

    public double[] preMultiply(final double[] v) throws java.lang.IllegalArgumentException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nRows) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.length, nRows);
        }
        final double[] out = new double[nCols];
        for (int col = 0; col < nCols; ++col) {
            double sum = 0;
            for (int i = 0; i < nRows; ++i) {
                sum += (getEntry(i, col)) * (v[i]);
            }
            out[col] = sum;
        }
        return out;
    }

    public org.apache.commons.math.linear.RealVector preMultiply(final org.apache.commons.math.linear.RealVector v) throws java.lang.IllegalArgumentException {
        try {
            return new org.apache.commons.math.linear.ArrayRealVector(preMultiply(((org.apache.commons.math.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nRows) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.getDimension(), nRows);
            }
            final double[] out = new double[nCols];
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nRows; ++i) {
                    sum += (getEntry(i, col)) * (v.getEntry(i));
                }
                out[col] = sum;
            }
            return new org.apache.commons.math.linear.ArrayRealVector(out);
        }
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    @java.lang.Deprecated
    public double[] solve(final double[] b) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.solve(b);
    }

    @java.lang.Deprecated
    public org.apache.commons.math.linear.RealMatrix solve(final org.apache.commons.math.linear.RealMatrix b) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.solve(b);
    }

    @java.lang.Deprecated
    public void luDecompose() throws org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
    }

    @java.lang.Override
    public java.lang.String toString() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final java.lang.StringBuffer res = new java.lang.StringBuffer();
        java.lang.String fullClassName = getClass().getName();
        java.lang.String shortClassName = fullClassName.substring(((fullClassName.lastIndexOf('.')) + 1));
        res.append(shortClassName).append("{");
        for (int i = 0; i < nRows; ++i) {
            if (i > 0) {
                res.append(",");
            }
            res.append("{");
            for (int j = 0; j < nCols; ++j) {
                if (j > 0) {
                    res.append(",");
                }
                res.append(getEntry(i, j));
            }
            res.append("}");
        }
        res.append("}");
        return res.toString();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object object) {
        if (object == (this)) {
            return true;
        }
        if ((object instanceof org.apache.commons.math.linear.RealMatrix) == false) {
            return false;
        }
        org.apache.commons.math.linear.RealMatrix m = ((org.apache.commons.math.linear.RealMatrix) (object));
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (((m.getColumnDimension()) != nCols) || ((m.getRowDimension()) != nRows)) {
            return false;
        }
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                if ((getEntry(row, col)) != (m.getEntry(row, col))) {
                    return false;
                }
            }
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        int ret = 7;
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        ret = (ret * 31) + nRows;
        ret = (ret * 31) + nCols;
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                ret = (ret * 31) + (((11 * (row + 1)) + (17 * (col + 1))) * (org.apache.commons.math.util.MathUtils.hash(getEntry(row, col))));
            }
        }
        return ret;
    }
}
08:55:50.023 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
08:55:50.023 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #374
08:55:50.023 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix$1:217 which is executed by 69 tests
816641250
08:55:50.125 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:50.149 [pool-1368-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:50.395 [pool-1367-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractRealMatrix.java:131: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:131: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:131: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:131: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:131: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:132: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                 ^
AbstractRealMatrix.java:132: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                   ^
AbstractRealMatrix.java:132: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:132: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:132: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                               ^
AbstractRealMatrix.java:134: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:134: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:134: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:134: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:134: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                     ^
08:55:50.542 [pool-1367-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public abstract class AbstractRealMatrix implements org.apache.commons.math.linear.RealMatrix {
    @java.lang.Deprecated
    private org.apache.commons.math.linear.DecompositionSolver lu;

    protected AbstractRealMatrix() {
        lu = null;
    }

    protected AbstractRealMatrix(final int rowDimension, final int columnDimension) throws java.lang.IllegalArgumentException {
        if (rowDimension <= 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("invalid row dimension {0} (must be positive)", rowDimension);
        }
        if (columnDimension <= 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("invalid column dimension {0} (must be positive)", columnDimension);
        }
        lu = null;
    }

    public abstract org.apache.commons.math.linear.RealMatrix createMatrix(final int rowDimension, final int columnDimension) throws java.lang.IllegalArgumentException;

    public abstract org.apache.commons.math.linear.RealMatrix copy();

    public org.apache.commons.math.linear.RealMatrix add(org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkAdditionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix subtract(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkSubtractionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) - (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix scalarAdd(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + d));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix scalarMultiply(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) * d));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix multiply(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(this, m);
        final int nRows = getRowDimension();
        final int nCols = m.getColumnDimension();
        final int nSum = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nRows, nCols);
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nSum; ++i) {
                    sum += (getEntry(row, i)) * (m.getEntry(i, col));
                }
                out.setEntry(row, col, sum);
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix preMultiply(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        return m.multiply(this);
    }

    public double[][] getData() {
        final double[][] data = new double[getRowDimension()][getColumnDimension()];
        for (int i = 0; i < (data.length); ++i) {
            final double[] dataI = data[i];
            for (int j = 0; j < (dataI.length); ++j) {
                dataI[j] = getEntry(i, j);
            }
        }
        return data;
    }

    public double getNorm() {
        return walkInColumnOrder(new org.apache.commons.math.linear.RealMatrixPreservingVisitor() {
            private double endRow;

            private double columnSum;

            private double maxColSum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.endRow = endRow;
                columnSum = 0;
                maxColSum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                boolean spoonDefaultValue = false;
                try {
                    spoonDefaultValue = true;
                } catch (java.lang.Exception __NopolProcessorException) {
                }
                boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                if (fr.inria.lille.commons.trace.RuntimeValues.instance(230).isEnabled()) {
                    fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectionStarts();
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("column",column);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("row",row);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectInput("value",value);} catch (Exception ex1) {ex1.printStackTrace();};
                    fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectOutput(runtimeAngelicValue);
                    fr.inria.lille.commons.trace.RuntimeValues.instance(230).collectionEnds();
                }
                if (runtimeAngelicValue)
                    columnSum += java.lang.Math.abs(value);

                if (row == (endRow)) {
                    maxColSum = java.lang.Math.max(maxColSum, columnSum);
                    columnSum = 0;
                }
            }

            public double end() {
                return maxColSum;
            }
        });
    }

    public double getFrobeniusNorm() {
        return walkInOptimizedOrder(new org.apache.commons.math.linear.RealMatrixPreservingVisitor() {
            private double sum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                sum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                sum += value * value;
            }

            public double end() {
                return java.lang.Math.sqrt(sum);
            }
        });
    }

    public org.apache.commons.math.linear.RealMatrix getSubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final org.apache.commons.math.linear.RealMatrix subMatrix = createMatrix(((endRow - startRow) + 1), ((endColumn - startColumn) + 1));
        for (int i = startRow; i <= endRow; ++i) {
            for (int j = startColumn; j <= endColumn; ++j) {
                subMatrix.setEntry((i - startRow), (j - startColumn), getEntry(i, j));
            }
        }
        return subMatrix;
    }

    public org.apache.commons.math.linear.RealMatrix getSubMatrix(final int[] selectedRows, final int[] selectedColumns) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        final org.apache.commons.math.linear.RealMatrix subMatrix = createMatrix(selectedRows.length, selectedColumns.length);
        subMatrix.walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor() {
            @java.lang.Override
            public double visit(final int row, final int column, final double value) {
                return getEntry(selectedRows[row], selectedColumns[column]);
            }
        });
        return subMatrix;
    }

    public void copySubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn, final double[][] destination) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final int rowsCount = (endRow + 1) - startRow;
        final int columnsCount = (endColumn + 1) - startColumn;
        if (((destination.length) < rowsCount) || ((destination[0].length) < columnsCount)) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", destination.length, destination[0].length, rowsCount, columnsCount);
        }
        walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor() {
            private int startRow;

            private int startColumn;

            @java.lang.Override
            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.startRow = startRow;
                this.startColumn = startColumn;
            }

            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                destination[(row - (startRow))][(column - (startColumn))] = value;
            }
        }, startRow, endRow, startColumn, endColumn);
    }

    public void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        if (((destination.length) < (selectedRows.length)) || ((destination[0].length) < (selectedColumns.length))) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", destination.length, destination[0].length, selectedRows.length, selectedColumns.length);
        }
        for (int i = 0; i < (selectedRows.length); i++) {
            final double[] destinationI = destination[i];
            for (int j = 0; j < (selectedColumns.length); j++) {
                destinationI[j] = getEntry(selectedRows[i], selectedColumns[j]);
            }
        }
    }

    public void setSubMatrix(final double[][] subMatrix, final int row, final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        final int nRows = subMatrix.length;
        if (nRows == 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
        }
        final int nCols = subMatrix[0].length;
        if (nCols == 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
        }
        for (int r = 1; r < nRows; ++r) {
            if ((subMatrix[r].length) != nCols) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}", nCols, subMatrix[r].length);
            }
        }
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, ((nRows + row) - 1));
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, ((nCols + column) - 1));
        for (int i = 0; i < nRows; ++i) {
            for (int j = 0; j < nCols; ++j) {
                setEntry((row + i), (column + j), subMatrix[i][j]);
            }
        }
        lu = null;
    }

    public org.apache.commons.math.linear.RealMatrix getRowMatrix(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(1, nCols);
        for (int i = 0; i < nCols; ++i) {
            out.setEntry(0, i, getEntry(row, i));
        }
        return out;
    }

    public void setRowMatrix(final int row, final org.apache.commons.math.linear.RealMatrix matrix) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if (((matrix.getRowDimension()) != 1) || ((matrix.getColumnDimension()) != nCols)) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", matrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, matrix.getEntry(0, i));
        }
    }

    public org.apache.commons.math.linear.RealMatrix getColumnMatrix(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nRows, 1);
        for (int i = 0; i < nRows; ++i) {
            out.setEntry(i, 0, getEntry(i, column));
        }
        return out;
    }

    public void setColumnMatrix(final int column, final org.apache.commons.math.linear.RealMatrix matrix) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if (((matrix.getRowDimension()) != nRows) || ((matrix.getColumnDimension()) != 1)) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", matrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, matrix.getEntry(i, 0));
        }
    }

    public org.apache.commons.math.linear.RealVector getRowVector(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        return new org.apache.commons.math.linear.ArrayRealVector(getRow(row), false);
    }

    public void setRowVector(final int row, final org.apache.commons.math.linear.RealVector vector) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((vector.getDimension()) != nCols) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", 1, vector.getDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, vector.getEntry(i));
        }
    }

    public org.apache.commons.math.linear.RealVector getColumnVector(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        return new org.apache.commons.math.linear.ArrayRealVector(getColumn(column), false);
    }

    public void setColumnVector(final int column, final org.apache.commons.math.linear.RealVector vector) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((vector.getDimension()) != nRows) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", vector.getDimension(), 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, vector.getEntry(i));
        }
    }

    public double[] getRow(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final double[] out = new double[nCols];
        for (int i = 0; i < nCols; ++i) {
            out[i] = getEntry(row, i);
        }
        return out;
    }

    public void setRow(final int row, final double[] array) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((array.length) != nCols) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", 1, array.length, 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, array[i]);
        }
    }

    public double[] getColumn(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final double[] out = new double[nRows];
        for (int i = 0; i < nRows; ++i) {
            out[i] = getEntry(i, column);
        }
        return out;
    }

    public void setColumn(final int column, final double[] array) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((array.length) != nRows) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", array.length, 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, array[i]);
        }
    }

    public abstract double getEntry(int row, int column) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void setEntry(int row, int column, double value) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void addToEntry(int row, int column, double increment) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void multiplyEntry(int row, int column, double factor) throws org.apache.commons.math.linear.MatrixIndexException;

    public org.apache.commons.math.linear.RealMatrix transpose() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nCols, nRows);
        walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor() {
            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                out.setEntry(column, row, value);
            }
        });
        return out;
    }

    @java.lang.Deprecated
    public org.apache.commons.math.linear.RealMatrix inverse() throws org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.getInverse();
    }

    @java.lang.Deprecated
    public double getDeterminant() throws org.apache.commons.math.linear.InvalidMatrixException {
        return new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getDeterminant();
    }

    public boolean isSquare() {
        return (getColumnDimension()) == (getRowDimension());
    }

    @java.lang.Deprecated
    public boolean isSingular() {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return !(lu.isNonSingular());
    }

    public abstract int getRowDimension();

    public abstract int getColumnDimension();

    public double getTrace() throws org.apache.commons.math.linear.NonSquareMatrixException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (nRows != nCols) {
            throw new org.apache.commons.math.linear.NonSquareMatrixException(nRows, nCols);
        }
        double trace = 0;
        for (int i = 0; i < nRows; ++i) {
            trace += getEntry(i, i);
        }
        return trace;
    }

    public double[] operate(final double[] v) throws java.lang.IllegalArgumentException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nCols) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.length, nCols);
        }
        final double[] out = new double[nRows];
        for (int row = 0; row < nRows; ++row) {
            double sum = 0;
            for (int i = 0; i < nCols; ++i) {
                sum += (getEntry(row, i)) * (v[i]);
            }
            out[row] = sum;
        }
        return out;
    }

    public org.apache.commons.math.linear.RealVector operate(final org.apache.commons.math.linear.RealVector v) throws java.lang.IllegalArgumentException {
        try {
            return new org.apache.commons.math.linear.ArrayRealVector(operate(((org.apache.commons.math.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nCols) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.getDimension(), nCols);
            }
            final double[] out = new double[nRows];
            for (int row = 0; row < nRows; ++row) {
                double sum = 0;
                for (int i = 0; i < nCols; ++i) {
                    sum += (getEntry(row, i)) * (v.getEntry(i));
                }
                out[row] = sum;
            }
            return new org.apache.commons.math.linear.ArrayRealVector(out, false);
        }
    }

    public double[] preMultiply(final double[] v) throws java.lang.IllegalArgumentException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nRows) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.length, nRows);
        }
        final double[] out = new double[nCols];
        for (int col = 0; col < nCols; ++col) {
            double sum = 0;
            for (int i = 0; i < nRows; ++i) {
                sum += (getEntry(i, col)) * (v[i]);
            }
            out[col] = sum;
        }
        return out;
    }

    public org.apache.commons.math.linear.RealVector preMultiply(final org.apache.commons.math.linear.RealVector v) throws java.lang.IllegalArgumentException {
        try {
            return new org.apache.commons.math.linear.ArrayRealVector(preMultiply(((org.apache.commons.math.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nRows) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.getDimension(), nRows);
            }
            final double[] out = new double[nCols];
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nRows; ++i) {
                    sum += (getEntry(i, col)) * (v.getEntry(i));
                }
                out[col] = sum;
            }
            return new org.apache.commons.math.linear.ArrayRealVector(out);
        }
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    @java.lang.Deprecated
    public double[] solve(final double[] b) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.solve(b);
    }

    @java.lang.Deprecated
    public org.apache.commons.math.linear.RealMatrix solve(final org.apache.commons.math.linear.RealMatrix b) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.solve(b);
    }

    @java.lang.Deprecated
    public void luDecompose() throws org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
    }

    @java.lang.Override
    public java.lang.String toString() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final java.lang.StringBuffer res = new java.lang.StringBuffer();
        java.lang.String fullClassName = getClass().getName();
        java.lang.String shortClassName = fullClassName.substring(((fullClassName.lastIndexOf('.')) + 1));
        res.append(shortClassName).append("{");
        for (int i = 0; i < nRows; ++i) {
            if (i > 0) {
                res.append(",");
            }
            res.append("{");
            for (int j = 0; j < nCols; ++j) {
                if (j > 0) {
                    res.append(",");
                }
                res.append(getEntry(i, j));
            }
            res.append("}");
        }
        res.append("}");
        return res.toString();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object object) {
        if (object == (this)) {
            return true;
        }
        if ((object instanceof org.apache.commons.math.linear.RealMatrix) == false) {
            return false;
        }
        org.apache.commons.math.linear.RealMatrix m = ((org.apache.commons.math.linear.RealMatrix) (object));
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (((m.getColumnDimension()) != nCols) || ((m.getRowDimension()) != nRows)) {
            return false;
        }
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                if ((getEntry(row, col)) != (m.getEntry(row, col))) {
                    return false;
                }
            }
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        int ret = 7;
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        ret = (ret * 31) + nRows;
        ret = (ret * 31) + nCols;
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                ret = (ret * 31) + (((11 * (row + 1)) + (17 * (col + 1))) * (org.apache.commons.math.util.MathUtils.hash(getEntry(row, col))));
            }
        }
        return ret;
    }
}
08:55:50.542 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
08:55:50.542 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #375
08:55:50.542 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix$1:213 which is executed by 69 tests
816641250
08:55:50.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #376
08:55:50.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix$1:212 which is executed by 69 tests
816641250
08:55:50.739 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:50.763 [pool-1370-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:51.010 [pool-1369-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractRealMatrix.java:126: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:126: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:126: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:126: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:126: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:132: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                 ^
AbstractRealMatrix.java:132: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                   ^
AbstractRealMatrix.java:132: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:132: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:132: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                               ^
AbstractRealMatrix.java:133: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:133: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:133: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:133: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:133: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                     ^
08:55:51.155 [pool-1369-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public abstract class AbstractRealMatrix implements org.apache.commons.math.linear.RealMatrix {
    @java.lang.Deprecated
    private org.apache.commons.math.linear.DecompositionSolver lu;

    protected AbstractRealMatrix() {
        lu = null;
    }

    protected AbstractRealMatrix(final int rowDimension, final int columnDimension) throws java.lang.IllegalArgumentException {
        if (rowDimension <= 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("invalid row dimension {0} (must be positive)", rowDimension);
        }
        if (columnDimension <= 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("invalid column dimension {0} (must be positive)", columnDimension);
        }
        lu = null;
    }

    public abstract org.apache.commons.math.linear.RealMatrix createMatrix(final int rowDimension, final int columnDimension) throws java.lang.IllegalArgumentException;

    public abstract org.apache.commons.math.linear.RealMatrix copy();

    public org.apache.commons.math.linear.RealMatrix add(org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkAdditionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix subtract(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkSubtractionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) - (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix scalarAdd(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + d));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix scalarMultiply(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) * d));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix multiply(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(this, m);
        final int nRows = getRowDimension();
        final int nCols = m.getColumnDimension();
        final int nSum = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nRows, nCols);
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nSum; ++i) {
                    sum += (getEntry(row, i)) * (m.getEntry(i, col));
                }
                out.setEntry(row, col, sum);
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix preMultiply(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        return m.multiply(this);
    }

    public double[][] getData() {
        final double[][] data = new double[getRowDimension()][getColumnDimension()];
        for (int i = 0; i < (data.length); ++i) {
            final double[] dataI = data[i];
            for (int j = 0; j < (dataI.length); ++j) {
                dataI[j] = getEntry(i, j);
            }
        }
        return data;
    }

    public double getNorm() {
        return walkInColumnOrder(new org.apache.commons.math.linear.RealMatrixPreservingVisitor() {
            private double endRow;

            private double columnSum;

            private double maxColSum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.endRow = endRow;
                columnSum = 0;
                boolean spoonDefaultValue = false;
                try {
                    spoonDefaultValue = true;
                } catch (java.lang.Exception __NopolProcessorException) {
                }
                boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                if (fr.inria.lille.commons.trace.RuntimeValues.instance(231).isEnabled()) {
                    fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectionStarts();
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("endColumn",endColumn);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("startRow",startRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("columns",columns);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("startColumn",startColumn);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("endRow",endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectInput("rows",rows);} catch (Exception ex1) {ex1.printStackTrace();};
                    fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectOutput(runtimeAngelicValue);
                    fr.inria.lille.commons.trace.RuntimeValues.instance(231).collectionEnds();
                }
                if (runtimeAngelicValue)
                    maxColSum = 0;

            }

            public void visit(final int row, final int column, final double value) {
                columnSum += java.lang.Math.abs(value);
                if (row == (endRow)) {
                    maxColSum = java.lang.Math.max(maxColSum, columnSum);
                    columnSum = 0;
                }
            }

            public double end() {
                return maxColSum;
            }
        });
    }

    public double getFrobeniusNorm() {
        return walkInOptimizedOrder(new org.apache.commons.math.linear.RealMatrixPreservingVisitor() {
            private double sum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                sum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                sum += value * value;
            }

            public double end() {
                return java.lang.Math.sqrt(sum);
            }
        });
    }

    public org.apache.commons.math.linear.RealMatrix getSubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final org.apache.commons.math.linear.RealMatrix subMatrix = createMatrix(((endRow - startRow) + 1), ((endColumn - startColumn) + 1));
        for (int i = startRow; i <= endRow; ++i) {
            for (int j = startColumn; j <= endColumn; ++j) {
                subMatrix.setEntry((i - startRow), (j - startColumn), getEntry(i, j));
            }
        }
        return subMatrix;
    }

    public org.apache.commons.math.linear.RealMatrix getSubMatrix(final int[] selectedRows, final int[] selectedColumns) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        final org.apache.commons.math.linear.RealMatrix subMatrix = createMatrix(selectedRows.length, selectedColumns.length);
        subMatrix.walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor() {
            @java.lang.Override
            public double visit(final int row, final int column, final double value) {
                return getEntry(selectedRows[row], selectedColumns[column]);
            }
        });
        return subMatrix;
    }

    public void copySubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn, final double[][] destination) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final int rowsCount = (endRow + 1) - startRow;
        final int columnsCount = (endColumn + 1) - startColumn;
        if (((destination.length) < rowsCount) || ((destination[0].length) < columnsCount)) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", destination.length, destination[0].length, rowsCount, columnsCount);
        }
        walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor() {
            private int startRow;

            private int startColumn;

            @java.lang.Override
            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.startRow = startRow;
                this.startColumn = startColumn;
            }

            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                destination[(row - (startRow))][(column - (startColumn))] = value;
            }
        }, startRow, endRow, startColumn, endColumn);
    }

    public void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        if (((destination.length) < (selectedRows.length)) || ((destination[0].length) < (selectedColumns.length))) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", destination.length, destination[0].length, selectedRows.length, selectedColumns.length);
        }
        for (int i = 0; i < (selectedRows.length); i++) {
            final double[] destinationI = destination[i];
            for (int j = 0; j < (selectedColumns.length); j++) {
                destinationI[j] = getEntry(selectedRows[i], selectedColumns[j]);
            }
        }
    }

    public void setSubMatrix(final double[][] subMatrix, final int row, final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        final int nRows = subMatrix.length;
        if (nRows == 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
        }
        final int nCols = subMatrix[0].length;
        if (nCols == 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
        }
        for (int r = 1; r < nRows; ++r) {
            if ((subMatrix[r].length) != nCols) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}", nCols, subMatrix[r].length);
            }
        }
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, ((nRows + row) - 1));
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, ((nCols + column) - 1));
        for (int i = 0; i < nRows; ++i) {
            for (int j = 0; j < nCols; ++j) {
                setEntry((row + i), (column + j), subMatrix[i][j]);
            }
        }
        lu = null;
    }

    public org.apache.commons.math.linear.RealMatrix getRowMatrix(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(1, nCols);
        for (int i = 0; i < nCols; ++i) {
            out.setEntry(0, i, getEntry(row, i));
        }
        return out;
    }

    public void setRowMatrix(final int row, final org.apache.commons.math.linear.RealMatrix matrix) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if (((matrix.getRowDimension()) != 1) || ((matrix.getColumnDimension()) != nCols)) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", matrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, matrix.getEntry(0, i));
        }
    }

    public org.apache.commons.math.linear.RealMatrix getColumnMatrix(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nRows, 1);
        for (int i = 0; i < nRows; ++i) {
            out.setEntry(i, 0, getEntry(i, column));
        }
        return out;
    }

    public void setColumnMatrix(final int column, final org.apache.commons.math.linear.RealMatrix matrix) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if (((matrix.getRowDimension()) != nRows) || ((matrix.getColumnDimension()) != 1)) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", matrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, matrix.getEntry(i, 0));
        }
    }

    public org.apache.commons.math.linear.RealVector getRowVector(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        return new org.apache.commons.math.linear.ArrayRealVector(getRow(row), false);
    }

    public void setRowVector(final int row, final org.apache.commons.math.linear.RealVector vector) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((vector.getDimension()) != nCols) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", 1, vector.getDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, vector.getEntry(i));
        }
    }

    public org.apache.commons.math.linear.RealVector getColumnVector(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        return new org.apache.commons.math.linear.ArrayRealVector(getColumn(column), false);
    }

    public void setColumnVector(final int column, final org.apache.commons.math.linear.RealVector vector) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((vector.getDimension()) != nRows) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", vector.getDimension(), 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, vector.getEntry(i));
        }
    }

    public double[] getRow(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final double[] out = new double[nCols];
        for (int i = 0; i < nCols; ++i) {
            out[i] = getEntry(row, i);
        }
        return out;
    }

    public void setRow(final int row, final double[] array) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((array.length) != nCols) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", 1, array.length, 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, array[i]);
        }
    }

    public double[] getColumn(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final double[] out = new double[nRows];
        for (int i = 0; i < nRows; ++i) {
            out[i] = getEntry(i, column);
        }
        return out;
    }

    public void setColumn(final int column, final double[] array) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((array.length) != nRows) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", array.length, 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, array[i]);
        }
    }

    public abstract double getEntry(int row, int column) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void setEntry(int row, int column, double value) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void addToEntry(int row, int column, double increment) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void multiplyEntry(int row, int column, double factor) throws org.apache.commons.math.linear.MatrixIndexException;

    public org.apache.commons.math.linear.RealMatrix transpose() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nCols, nRows);
        walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor() {
            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                out.setEntry(column, row, value);
            }
        });
        return out;
    }

    @java.lang.Deprecated
    public org.apache.commons.math.linear.RealMatrix inverse() throws org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.getInverse();
    }

    @java.lang.Deprecated
    public double getDeterminant() throws org.apache.commons.math.linear.InvalidMatrixException {
        return new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getDeterminant();
    }

    public boolean isSquare() {
        return (getColumnDimension()) == (getRowDimension());
    }

    @java.lang.Deprecated
    public boolean isSingular() {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return !(lu.isNonSingular());
    }

    public abstract int getRowDimension();

    public abstract int getColumnDimension();

    public double getTrace() throws org.apache.commons.math.linear.NonSquareMatrixException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (nRows != nCols) {
            throw new org.apache.commons.math.linear.NonSquareMatrixException(nRows, nCols);
        }
        double trace = 0;
        for (int i = 0; i < nRows; ++i) {
            trace += getEntry(i, i);
        }
        return trace;
    }

    public double[] operate(final double[] v) throws java.lang.IllegalArgumentException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nCols) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.length, nCols);
        }
        final double[] out = new double[nRows];
        for (int row = 0; row < nRows; ++row) {
            double sum = 0;
            for (int i = 0; i < nCols; ++i) {
                sum += (getEntry(row, i)) * (v[i]);
            }
            out[row] = sum;
        }
        return out;
    }

    public org.apache.commons.math.linear.RealVector operate(final org.apache.commons.math.linear.RealVector v) throws java.lang.IllegalArgumentException {
        try {
            return new org.apache.commons.math.linear.ArrayRealVector(operate(((org.apache.commons.math.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nCols) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.getDimension(), nCols);
            }
            final double[] out = new double[nRows];
            for (int row = 0; row < nRows; ++row) {
                double sum = 0;
                for (int i = 0; i < nCols; ++i) {
                    sum += (getEntry(row, i)) * (v.getEntry(i));
                }
                out[row] = sum;
            }
            return new org.apache.commons.math.linear.ArrayRealVector(out, false);
        }
    }

    public double[] preMultiply(final double[] v) throws java.lang.IllegalArgumentException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nRows) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.length, nRows);
        }
        final double[] out = new double[nCols];
        for (int col = 0; col < nCols; ++col) {
            double sum = 0;
            for (int i = 0; i < nRows; ++i) {
                sum += (getEntry(i, col)) * (v[i]);
            }
            out[col] = sum;
        }
        return out;
    }

    public org.apache.commons.math.linear.RealVector preMultiply(final org.apache.commons.math.linear.RealVector v) throws java.lang.IllegalArgumentException {
        try {
            return new org.apache.commons.math.linear.ArrayRealVector(preMultiply(((org.apache.commons.math.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nRows) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.getDimension(), nRows);
            }
            final double[] out = new double[nCols];
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nRows; ++i) {
                    sum += (getEntry(i, col)) * (v.getEntry(i));
                }
                out[col] = sum;
            }
            return new org.apache.commons.math.linear.ArrayRealVector(out);
        }
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    @java.lang.Deprecated
    public double[] solve(final double[] b) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.solve(b);
    }

    @java.lang.Deprecated
    public org.apache.commons.math.linear.RealMatrix solve(final org.apache.commons.math.linear.RealMatrix b) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.solve(b);
    }

    @java.lang.Deprecated
    public void luDecompose() throws org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
    }

    @java.lang.Override
    public java.lang.String toString() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final java.lang.StringBuffer res = new java.lang.StringBuffer();
        java.lang.String fullClassName = getClass().getName();
        java.lang.String shortClassName = fullClassName.substring(((fullClassName.lastIndexOf('.')) + 1));
        res.append(shortClassName).append("{");
        for (int i = 0; i < nRows; ++i) {
            if (i > 0) {
                res.append(",");
            }
            res.append("{");
            for (int j = 0; j < nCols; ++j) {
                if (j > 0) {
                    res.append(",");
                }
                res.append(getEntry(i, j));
            }
            res.append("}");
        }
        res.append("}");
        return res.toString();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object object) {
        if (object == (this)) {
            return true;
        }
        if ((object instanceof org.apache.commons.math.linear.RealMatrix) == false) {
            return false;
        }
        org.apache.commons.math.linear.RealMatrix m = ((org.apache.commons.math.linear.RealMatrix) (object));
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (((m.getColumnDimension()) != nCols) || ((m.getRowDimension()) != nRows)) {
            return false;
        }
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                if ((getEntry(row, col)) != (m.getEntry(row, col))) {
                    return false;
                }
            }
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        int ret = 7;
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        ret = (ret * 31) + nRows;
        ret = (ret * 31) + nCols;
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                ret = (ret * 31) + (((11 * (row + 1)) + (17 * (col + 1))) * (org.apache.commons.math.util.MathUtils.hash(getEntry(row, col))));
            }
        }
        return ret;
    }
}
08:55:51.155 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
08:55:51.155 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #377
08:55:51.155 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix$1:211 which is executed by 69 tests
816641250
08:55:51.258 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:51.282 [pool-1372-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:51.534 [pool-1371-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractRealMatrix.java:125: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:125: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:125: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:125: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:125: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:131: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                 ^
AbstractRealMatrix.java:131: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                   ^
AbstractRealMatrix.java:131: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:131: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:131: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                               ^
AbstractRealMatrix.java:132: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:132: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:132: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:132: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:132: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                     ^
08:55:51.669 [pool-1371-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public abstract class AbstractRealMatrix implements org.apache.commons.math.linear.RealMatrix {
    @java.lang.Deprecated
    private org.apache.commons.math.linear.DecompositionSolver lu;

    protected AbstractRealMatrix() {
        lu = null;
    }

    protected AbstractRealMatrix(final int rowDimension, final int columnDimension) throws java.lang.IllegalArgumentException {
        if (rowDimension <= 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("invalid row dimension {0} (must be positive)", rowDimension);
        }
        if (columnDimension <= 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("invalid column dimension {0} (must be positive)", columnDimension);
        }
        lu = null;
    }

    public abstract org.apache.commons.math.linear.RealMatrix createMatrix(final int rowDimension, final int columnDimension) throws java.lang.IllegalArgumentException;

    public abstract org.apache.commons.math.linear.RealMatrix copy();

    public org.apache.commons.math.linear.RealMatrix add(org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkAdditionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix subtract(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkSubtractionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) - (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix scalarAdd(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + d));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix scalarMultiply(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) * d));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix multiply(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(this, m);
        final int nRows = getRowDimension();
        final int nCols = m.getColumnDimension();
        final int nSum = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nRows, nCols);
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nSum; ++i) {
                    sum += (getEntry(row, i)) * (m.getEntry(i, col));
                }
                out.setEntry(row, col, sum);
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix preMultiply(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        return m.multiply(this);
    }

    public double[][] getData() {
        final double[][] data = new double[getRowDimension()][getColumnDimension()];
        for (int i = 0; i < (data.length); ++i) {
            final double[] dataI = data[i];
            for (int j = 0; j < (dataI.length); ++j) {
                dataI[j] = getEntry(i, j);
            }
        }
        return data;
    }

    public double getNorm() {
        return walkInColumnOrder(new org.apache.commons.math.linear.RealMatrixPreservingVisitor() {
            private double endRow;

            private double columnSum;

            private double maxColSum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.endRow = endRow;
                boolean spoonDefaultValue = false;
                try {
                    spoonDefaultValue = true;
                } catch (java.lang.Exception __NopolProcessorException) {
                }
                boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                if (fr.inria.lille.commons.trace.RuntimeValues.instance(232).isEnabled()) {
                    fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectionStarts();
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("endColumn",endColumn);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("startRow",startRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("columns",columns);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("startColumn",startColumn);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("endRow",endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectInput("rows",rows);} catch (Exception ex1) {ex1.printStackTrace();};
                    fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectOutput(runtimeAngelicValue);
                    fr.inria.lille.commons.trace.RuntimeValues.instance(232).collectionEnds();
                }
                if (runtimeAngelicValue)
                    columnSum = 0;

                maxColSum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                columnSum += java.lang.Math.abs(value);
                if (row == (endRow)) {
                    maxColSum = java.lang.Math.max(maxColSum, columnSum);
                    columnSum = 0;
                }
            }

            public double end() {
                return maxColSum;
            }
        });
    }

    public double getFrobeniusNorm() {
        return walkInOptimizedOrder(new org.apache.commons.math.linear.RealMatrixPreservingVisitor() {
            private double sum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                sum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                sum += value * value;
            }

            public double end() {
                return java.lang.Math.sqrt(sum);
            }
        });
    }

    public org.apache.commons.math.linear.RealMatrix getSubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final org.apache.commons.math.linear.RealMatrix subMatrix = createMatrix(((endRow - startRow) + 1), ((endColumn - startColumn) + 1));
        for (int i = startRow; i <= endRow; ++i) {
            for (int j = startColumn; j <= endColumn; ++j) {
                subMatrix.setEntry((i - startRow), (j - startColumn), getEntry(i, j));
            }
        }
        return subMatrix;
    }

    public org.apache.commons.math.linear.RealMatrix getSubMatrix(final int[] selectedRows, final int[] selectedColumns) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        final org.apache.commons.math.linear.RealMatrix subMatrix = createMatrix(selectedRows.length, selectedColumns.length);
        subMatrix.walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor() {
            @java.lang.Override
            public double visit(final int row, final int column, final double value) {
                return getEntry(selectedRows[row], selectedColumns[column]);
            }
        });
        return subMatrix;
    }

    public void copySubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn, final double[][] destination) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final int rowsCount = (endRow + 1) - startRow;
        final int columnsCount = (endColumn + 1) - startColumn;
        if (((destination.length) < rowsCount) || ((destination[0].length) < columnsCount)) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", destination.length, destination[0].length, rowsCount, columnsCount);
        }
        walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor() {
            private int startRow;

            private int startColumn;

            @java.lang.Override
            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.startRow = startRow;
                this.startColumn = startColumn;
            }

            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                destination[(row - (startRow))][(column - (startColumn))] = value;
            }
        }, startRow, endRow, startColumn, endColumn);
    }

    public void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        if (((destination.length) < (selectedRows.length)) || ((destination[0].length) < (selectedColumns.length))) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", destination.length, destination[0].length, selectedRows.length, selectedColumns.length);
        }
        for (int i = 0; i < (selectedRows.length); i++) {
            final double[] destinationI = destination[i];
            for (int j = 0; j < (selectedColumns.length); j++) {
                destinationI[j] = getEntry(selectedRows[i], selectedColumns[j]);
            }
        }
    }

    public void setSubMatrix(final double[][] subMatrix, final int row, final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        final int nRows = subMatrix.length;
        if (nRows == 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
        }
        final int nCols = subMatrix[0].length;
        if (nCols == 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
        }
        for (int r = 1; r < nRows; ++r) {
            if ((subMatrix[r].length) != nCols) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}", nCols, subMatrix[r].length);
            }
        }
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, ((nRows + row) - 1));
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, ((nCols + column) - 1));
        for (int i = 0; i < nRows; ++i) {
            for (int j = 0; j < nCols; ++j) {
                setEntry((row + i), (column + j), subMatrix[i][j]);
            }
        }
        lu = null;
    }

    public org.apache.commons.math.linear.RealMatrix getRowMatrix(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(1, nCols);
        for (int i = 0; i < nCols; ++i) {
            out.setEntry(0, i, getEntry(row, i));
        }
        return out;
    }

    public void setRowMatrix(final int row, final org.apache.commons.math.linear.RealMatrix matrix) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if (((matrix.getRowDimension()) != 1) || ((matrix.getColumnDimension()) != nCols)) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", matrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, matrix.getEntry(0, i));
        }
    }

    public org.apache.commons.math.linear.RealMatrix getColumnMatrix(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nRows, 1);
        for (int i = 0; i < nRows; ++i) {
            out.setEntry(i, 0, getEntry(i, column));
        }
        return out;
    }

    public void setColumnMatrix(final int column, final org.apache.commons.math.linear.RealMatrix matrix) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if (((matrix.getRowDimension()) != nRows) || ((matrix.getColumnDimension()) != 1)) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", matrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, matrix.getEntry(i, 0));
        }
    }

    public org.apache.commons.math.linear.RealVector getRowVector(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        return new org.apache.commons.math.linear.ArrayRealVector(getRow(row), false);
    }

    public void setRowVector(final int row, final org.apache.commons.math.linear.RealVector vector) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((vector.getDimension()) != nCols) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", 1, vector.getDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, vector.getEntry(i));
        }
    }

    public org.apache.commons.math.linear.RealVector getColumnVector(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        return new org.apache.commons.math.linear.ArrayRealVector(getColumn(column), false);
    }

    public void setColumnVector(final int column, final org.apache.commons.math.linear.RealVector vector) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((vector.getDimension()) != nRows) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", vector.getDimension(), 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, vector.getEntry(i));
        }
    }

    public double[] getRow(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final double[] out = new double[nCols];
        for (int i = 0; i < nCols; ++i) {
            out[i] = getEntry(row, i);
        }
        return out;
    }

    public void setRow(final int row, final double[] array) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((array.length) != nCols) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", 1, array.length, 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, array[i]);
        }
    }

    public double[] getColumn(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final double[] out = new double[nRows];
        for (int i = 0; i < nRows; ++i) {
            out[i] = getEntry(i, column);
        }
        return out;
    }

    public void setColumn(final int column, final double[] array) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((array.length) != nRows) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", array.length, 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, array[i]);
        }
    }

    public abstract double getEntry(int row, int column) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void setEntry(int row, int column, double value) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void addToEntry(int row, int column, double increment) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void multiplyEntry(int row, int column, double factor) throws org.apache.commons.math.linear.MatrixIndexException;

    public org.apache.commons.math.linear.RealMatrix transpose() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nCols, nRows);
        walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor() {
            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                out.setEntry(column, row, value);
            }
        });
        return out;
    }

    @java.lang.Deprecated
    public org.apache.commons.math.linear.RealMatrix inverse() throws org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.getInverse();
    }

    @java.lang.Deprecated
    public double getDeterminant() throws org.apache.commons.math.linear.InvalidMatrixException {
        return new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getDeterminant();
    }

    public boolean isSquare() {
        return (getColumnDimension()) == (getRowDimension());
    }

    @java.lang.Deprecated
    public boolean isSingular() {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return !(lu.isNonSingular());
    }

    public abstract int getRowDimension();

    public abstract int getColumnDimension();

    public double getTrace() throws org.apache.commons.math.linear.NonSquareMatrixException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (nRows != nCols) {
            throw new org.apache.commons.math.linear.NonSquareMatrixException(nRows, nCols);
        }
        double trace = 0;
        for (int i = 0; i < nRows; ++i) {
            trace += getEntry(i, i);
        }
        return trace;
    }

    public double[] operate(final double[] v) throws java.lang.IllegalArgumentException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nCols) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.length, nCols);
        }
        final double[] out = new double[nRows];
        for (int row = 0; row < nRows; ++row) {
            double sum = 0;
            for (int i = 0; i < nCols; ++i) {
                sum += (getEntry(row, i)) * (v[i]);
            }
            out[row] = sum;
        }
        return out;
    }

    public org.apache.commons.math.linear.RealVector operate(final org.apache.commons.math.linear.RealVector v) throws java.lang.IllegalArgumentException {
        try {
            return new org.apache.commons.math.linear.ArrayRealVector(operate(((org.apache.commons.math.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nCols) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.getDimension(), nCols);
            }
            final double[] out = new double[nRows];
            for (int row = 0; row < nRows; ++row) {
                double sum = 0;
                for (int i = 0; i < nCols; ++i) {
                    sum += (getEntry(row, i)) * (v.getEntry(i));
                }
                out[row] = sum;
            }
            return new org.apache.commons.math.linear.ArrayRealVector(out, false);
        }
    }

    public double[] preMultiply(final double[] v) throws java.lang.IllegalArgumentException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nRows) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.length, nRows);
        }
        final double[] out = new double[nCols];
        for (int col = 0; col < nCols; ++col) {
            double sum = 0;
            for (int i = 0; i < nRows; ++i) {
                sum += (getEntry(i, col)) * (v[i]);
            }
            out[col] = sum;
        }
        return out;
    }

    public org.apache.commons.math.linear.RealVector preMultiply(final org.apache.commons.math.linear.RealVector v) throws java.lang.IllegalArgumentException {
        try {
            return new org.apache.commons.math.linear.ArrayRealVector(preMultiply(((org.apache.commons.math.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nRows) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.getDimension(), nRows);
            }
            final double[] out = new double[nCols];
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nRows; ++i) {
                    sum += (getEntry(i, col)) * (v.getEntry(i));
                }
                out[col] = sum;
            }
            return new org.apache.commons.math.linear.ArrayRealVector(out);
        }
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    @java.lang.Deprecated
    public double[] solve(final double[] b) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.solve(b);
    }

    @java.lang.Deprecated
    public org.apache.commons.math.linear.RealMatrix solve(final org.apache.commons.math.linear.RealMatrix b) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.solve(b);
    }

    @java.lang.Deprecated
    public void luDecompose() throws org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
    }

    @java.lang.Override
    public java.lang.String toString() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final java.lang.StringBuffer res = new java.lang.StringBuffer();
        java.lang.String fullClassName = getClass().getName();
        java.lang.String shortClassName = fullClassName.substring(((fullClassName.lastIndexOf('.')) + 1));
        res.append(shortClassName).append("{");
        for (int i = 0; i < nRows; ++i) {
            if (i > 0) {
                res.append(",");
            }
            res.append("{");
            for (int j = 0; j < nCols; ++j) {
                if (j > 0) {
                    res.append(",");
                }
                res.append(getEntry(i, j));
            }
            res.append("}");
        }
        res.append("}");
        return res.toString();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object object) {
        if (object == (this)) {
            return true;
        }
        if ((object instanceof org.apache.commons.math.linear.RealMatrix) == false) {
            return false;
        }
        org.apache.commons.math.linear.RealMatrix m = ((org.apache.commons.math.linear.RealMatrix) (object));
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (((m.getColumnDimension()) != nCols) || ((m.getRowDimension()) != nRows)) {
            return false;
        }
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                if ((getEntry(row, col)) != (m.getEntry(row, col))) {
                    return false;
                }
            }
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        int ret = 7;
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        ret = (ret * 31) + nRows;
        ret = (ret * 31) + nCols;
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                ret = (ret * 31) + (((11 * (row + 1)) + (17 * (col + 1))) * (org.apache.commons.math.util.MathUtils.hash(getEntry(row, col))));
            }
        }
        return ret;
    }
}
08:55:51.670 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
08:55:51.670 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #378
08:55:51.670 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix$1:210 which is executed by 69 tests
816641250
08:55:51.763 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:51.786 [pool-1374-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:52.031 [pool-1373-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
AbstractRealMatrix.java:124: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:124: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:124: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:124: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:124: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                     ^
AbstractRealMatrix.java:130: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                 ^
AbstractRealMatrix.java:130: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                   ^
AbstractRealMatrix.java:130: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:130: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                        ^
AbstractRealMatrix.java:130: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                               ^
AbstractRealMatrix.java:131: error: ')' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                    ^
AbstractRealMatrix.java:131: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                      ^
AbstractRealMatrix.java:131: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                       ^
AbstractRealMatrix.java:131: error: illegal start of expression
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                           ^
AbstractRealMatrix.java:131: error: ';' expected
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                                                                                                                                                                                                                                     ^
08:55:52.177 [pool-1373-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public abstract class AbstractRealMatrix implements org.apache.commons.math.linear.RealMatrix {
    @java.lang.Deprecated
    private org.apache.commons.math.linear.DecompositionSolver lu;

    protected AbstractRealMatrix() {
        lu = null;
    }

    protected AbstractRealMatrix(final int rowDimension, final int columnDimension) throws java.lang.IllegalArgumentException {
        if (rowDimension <= 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("invalid row dimension {0} (must be positive)", rowDimension);
        }
        if (columnDimension <= 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("invalid column dimension {0} (must be positive)", columnDimension);
        }
        lu = null;
    }

    public abstract org.apache.commons.math.linear.RealMatrix createMatrix(final int rowDimension, final int columnDimension) throws java.lang.IllegalArgumentException;

    public abstract org.apache.commons.math.linear.RealMatrix copy();

    public org.apache.commons.math.linear.RealMatrix add(org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkAdditionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix subtract(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkSubtractionCompatible(this, m);
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) - (m.getEntry(row, col))));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix scalarAdd(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) + d));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix scalarMultiply(final double d) {
        final int rowCount = getRowDimension();
        final int columnCount = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(rowCount, columnCount);
        for (int row = 0; row < rowCount; ++row) {
            for (int col = 0; col < columnCount; ++col) {
                out.setEntry(row, col, ((getEntry(row, col)) * d));
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix multiply(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(this, m);
        final int nRows = getRowDimension();
        final int nCols = m.getColumnDimension();
        final int nSum = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nRows, nCols);
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nSum; ++i) {
                    sum += (getEntry(row, i)) * (m.getEntry(i, col));
                }
                out.setEntry(row, col, sum);
            }
        }
        return out;
    }

    public org.apache.commons.math.linear.RealMatrix preMultiply(final org.apache.commons.math.linear.RealMatrix m) throws java.lang.IllegalArgumentException {
        return m.multiply(this);
    }

    public double[][] getData() {
        final double[][] data = new double[getRowDimension()][getColumnDimension()];
        for (int i = 0; i < (data.length); ++i) {
            final double[] dataI = data[i];
            for (int j = 0; j < (dataI.length); ++j) {
                dataI[j] = getEntry(i, j);
            }
        }
        return data;
    }

    public double getNorm() {
        return walkInColumnOrder(new org.apache.commons.math.linear.RealMatrixPreservingVisitor() {
            private double endRow;

            private double columnSum;

            private double maxColSum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                boolean spoonDefaultValue = false;
                try {
                    spoonDefaultValue = true;
                } catch (java.lang.Exception __NopolProcessorException) {
                }
                boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
                if (fr.inria.lille.commons.trace.RuntimeValues.instance(233).isEnabled()) {
                    fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectionStarts();
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.columnSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("endColumn",endColumn);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("startRow",startRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("columns",columns);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("startColumn",startColumn);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("endRow",endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow",org.apache.commons.math.linear.AbstractRealMatrix.1.this.endRow);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum",org.apache.commons.math.linear.AbstractRealMatrix.1.this.maxColSum);} catch (Exception ex1) {ex1.printStackTrace();};
                    try{fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectInput("rows",rows);} catch (Exception ex1) {ex1.printStackTrace();};
                    fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectOutput(runtimeAngelicValue);
                    fr.inria.lille.commons.trace.RuntimeValues.instance(233).collectionEnds();
                }
                if (runtimeAngelicValue)
                    this.endRow = endRow;

                columnSum = 0;
                maxColSum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                columnSum += java.lang.Math.abs(value);
                if (row == (endRow)) {
                    maxColSum = java.lang.Math.max(maxColSum, columnSum);
                    columnSum = 0;
                }
            }

            public double end() {
                return maxColSum;
            }
        });
    }

    public double getFrobeniusNorm() {
        return walkInOptimizedOrder(new org.apache.commons.math.linear.RealMatrixPreservingVisitor() {
            private double sum;

            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                sum = 0;
            }

            public void visit(final int row, final int column, final double value) {
                sum += value * value;
            }

            public double end() {
                return java.lang.Math.sqrt(sum);
            }
        });
    }

    public org.apache.commons.math.linear.RealMatrix getSubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final org.apache.commons.math.linear.RealMatrix subMatrix = createMatrix(((endRow - startRow) + 1), ((endColumn - startColumn) + 1));
        for (int i = startRow; i <= endRow; ++i) {
            for (int j = startColumn; j <= endColumn; ++j) {
                subMatrix.setEntry((i - startRow), (j - startColumn), getEntry(i, j));
            }
        }
        return subMatrix;
    }

    public org.apache.commons.math.linear.RealMatrix getSubMatrix(final int[] selectedRows, final int[] selectedColumns) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        final org.apache.commons.math.linear.RealMatrix subMatrix = createMatrix(selectedRows.length, selectedColumns.length);
        subMatrix.walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor() {
            @java.lang.Override
            public double visit(final int row, final int column, final double value) {
                return getEntry(selectedRows[row], selectedColumns[column]);
            }
        });
        return subMatrix;
    }

    public void copySubMatrix(final int startRow, final int endRow, final int startColumn, final int endColumn, final double[][] destination) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        final int rowsCount = (endRow + 1) - startRow;
        final int columnsCount = (endColumn + 1) - startColumn;
        if (((destination.length) < rowsCount) || ((destination[0].length) < columnsCount)) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", destination.length, destination[0].length, rowsCount, columnsCount);
        }
        walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor() {
            private int startRow;

            private int startColumn;

            @java.lang.Override
            public void start(final int rows, final int columns, final int startRow, final int endRow, final int startColumn, final int endColumn) {
                this.startRow = startRow;
                this.startColumn = startColumn;
            }

            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                destination[(row - (startRow))][(column - (startColumn))] = value;
            }
        }, startRow, endRow, startColumn, endColumn);
    }

    public void copySubMatrix(int[] selectedRows, int[] selectedColumns, double[][] destination) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, selectedRows, selectedColumns);
        if (((destination.length) < (selectedRows.length)) || ((destination[0].length) < (selectedColumns.length))) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", destination.length, destination[0].length, selectedRows.length, selectedColumns.length);
        }
        for (int i = 0; i < (selectedRows.length); i++) {
            final double[] destinationI = destination[i];
            for (int j = 0; j < (selectedColumns.length); j++) {
                destinationI[j] = getEntry(selectedRows[i], selectedColumns[j]);
            }
        }
    }

    public void setSubMatrix(final double[][] subMatrix, final int row, final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        final int nRows = subMatrix.length;
        if (nRows == 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("matrix must have at least one row");
        }
        final int nCols = subMatrix[0].length;
        if (nCols == 0) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
        }
        for (int r = 1; r < nRows; ++r) {
            if ((subMatrix[r].length) != nCols) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("some rows have length {0} while others have length {1}", nCols, subMatrix[r].length);
            }
        }
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, ((nRows + row) - 1));
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, ((nCols + column) - 1));
        for (int i = 0; i < nRows; ++i) {
            for (int j = 0; j < nCols; ++j) {
                setEntry((row + i), (column + j), subMatrix[i][j]);
            }
        }
        lu = null;
    }

    public org.apache.commons.math.linear.RealMatrix getRowMatrix(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(1, nCols);
        for (int i = 0; i < nCols; ++i) {
            out.setEntry(0, i, getEntry(row, i));
        }
        return out;
    }

    public void setRowMatrix(final int row, final org.apache.commons.math.linear.RealMatrix matrix) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if (((matrix.getRowDimension()) != 1) || ((matrix.getColumnDimension()) != nCols)) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", matrix.getRowDimension(), matrix.getColumnDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, matrix.getEntry(0, i));
        }
    }

    public org.apache.commons.math.linear.RealMatrix getColumnMatrix(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nRows, 1);
        for (int i = 0; i < nRows; ++i) {
            out.setEntry(i, 0, getEntry(i, column));
        }
        return out;
    }

    public void setColumnMatrix(final int column, final org.apache.commons.math.linear.RealMatrix matrix) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if (((matrix.getRowDimension()) != nRows) || ((matrix.getColumnDimension()) != 1)) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", matrix.getRowDimension(), matrix.getColumnDimension(), nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, matrix.getEntry(i, 0));
        }
    }

    public org.apache.commons.math.linear.RealVector getRowVector(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        return new org.apache.commons.math.linear.ArrayRealVector(getRow(row), false);
    }

    public void setRowVector(final int row, final org.apache.commons.math.linear.RealVector vector) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((vector.getDimension()) != nCols) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", 1, vector.getDimension(), 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, vector.getEntry(i));
        }
    }

    public org.apache.commons.math.linear.RealVector getColumnVector(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        return new org.apache.commons.math.linear.ArrayRealVector(getColumn(column), false);
    }

    public void setColumnVector(final int column, final org.apache.commons.math.linear.RealVector vector) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((vector.getDimension()) != nRows) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", vector.getDimension(), 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, vector.getEntry(i));
        }
    }

    public double[] getRow(final int row) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        final double[] out = new double[nCols];
        for (int i = 0; i < nCols; ++i) {
            out[i] = getEntry(row, i);
        }
        return out;
    }

    public void setRow(final int row, final double[] array) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkRowIndex(this, row);
        final int nCols = getColumnDimension();
        if ((array.length) != nCols) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", 1, array.length, 1, nCols);
        }
        for (int i = 0; i < nCols; ++i) {
            setEntry(row, i, array[i]);
        }
    }

    public double[] getColumn(final int column) throws org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        final double[] out = new double[nRows];
        for (int i = 0; i < nRows; ++i) {
            out[i] = getEntry(i, column);
        }
        return out;
    }

    public void setColumn(final int column, final double[] array) throws org.apache.commons.math.linear.InvalidMatrixException, org.apache.commons.math.linear.MatrixIndexException {
        org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(this, column);
        final int nRows = getRowDimension();
        if ((array.length) != nRows) {
            throw new org.apache.commons.math.linear.InvalidMatrixException("dimensions mismatch: got {0}x{1} but expected {2}x{3}", array.length, 1, nRows, 1);
        }
        for (int i = 0; i < nRows; ++i) {
            setEntry(i, column, array[i]);
        }
    }

    public abstract double getEntry(int row, int column) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void setEntry(int row, int column, double value) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void addToEntry(int row, int column, double increment) throws org.apache.commons.math.linear.MatrixIndexException;

    public abstract void multiplyEntry(int row, int column, double factor) throws org.apache.commons.math.linear.MatrixIndexException;

    public org.apache.commons.math.linear.RealMatrix transpose() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final org.apache.commons.math.linear.RealMatrix out = createMatrix(nCols, nRows);
        walkInOptimizedOrder(new org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor() {
            @java.lang.Override
            public void visit(final int row, final int column, final double value) {
                out.setEntry(column, row, value);
            }
        });
        return out;
    }

    @java.lang.Deprecated
    public org.apache.commons.math.linear.RealMatrix inverse() throws org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.getInverse();
    }

    @java.lang.Deprecated
    public double getDeterminant() throws org.apache.commons.math.linear.InvalidMatrixException {
        return new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getDeterminant();
    }

    public boolean isSquare() {
        return (getColumnDimension()) == (getRowDimension());
    }

    @java.lang.Deprecated
    public boolean isSingular() {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return !(lu.isNonSingular());
    }

    public abstract int getRowDimension();

    public abstract int getColumnDimension();

    public double getTrace() throws org.apache.commons.math.linear.NonSquareMatrixException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (nRows != nCols) {
            throw new org.apache.commons.math.linear.NonSquareMatrixException(nRows, nCols);
        }
        double trace = 0;
        for (int i = 0; i < nRows; ++i) {
            trace += getEntry(i, i);
        }
        return trace;
    }

    public double[] operate(final double[] v) throws java.lang.IllegalArgumentException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nCols) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.length, nCols);
        }
        final double[] out = new double[nRows];
        for (int row = 0; row < nRows; ++row) {
            double sum = 0;
            for (int i = 0; i < nCols; ++i) {
                sum += (getEntry(row, i)) * (v[i]);
            }
            out[row] = sum;
        }
        return out;
    }

    public org.apache.commons.math.linear.RealVector operate(final org.apache.commons.math.linear.RealVector v) throws java.lang.IllegalArgumentException {
        try {
            return new org.apache.commons.math.linear.ArrayRealVector(operate(((org.apache.commons.math.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nCols) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.getDimension(), nCols);
            }
            final double[] out = new double[nRows];
            for (int row = 0; row < nRows; ++row) {
                double sum = 0;
                for (int i = 0; i < nCols; ++i) {
                    sum += (getEntry(row, i)) * (v.getEntry(i));
                }
                out[row] = sum;
            }
            return new org.apache.commons.math.linear.ArrayRealVector(out, false);
        }
    }

    public double[] preMultiply(final double[] v) throws java.lang.IllegalArgumentException {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if ((v.length) != nRows) {
            throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.length, nRows);
        }
        final double[] out = new double[nCols];
        for (int col = 0; col < nCols; ++col) {
            double sum = 0;
            for (int i = 0; i < nRows; ++i) {
                sum += (getEntry(i, col)) * (v[i]);
            }
            out[col] = sum;
        }
        return out;
    }

    public org.apache.commons.math.linear.RealVector preMultiply(final org.apache.commons.math.linear.RealVector v) throws java.lang.IllegalArgumentException {
        try {
            return new org.apache.commons.math.linear.ArrayRealVector(preMultiply(((org.apache.commons.math.linear.ArrayRealVector) (v)).getDataRef()), false);
        } catch (java.lang.ClassCastException cce) {
            final int nRows = getRowDimension();
            final int nCols = getColumnDimension();
            if ((v.getDimension()) != nRows) {
                throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}", v.getDimension(), nRows);
            }
            final double[] out = new double[nCols];
            for (int col = 0; col < nCols; ++col) {
                double sum = 0;
                for (int i = 0; i < nRows; ++i) {
                    sum += (getEntry(i, col)) * (v.getEntry(i));
                }
                out[col] = sum;
            }
            return new org.apache.commons.math.linear.ArrayRealVector(out);
        }
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int row = 0; row < rows; ++row) {
            for (int column = 0; column < columns; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInRowOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int row = startRow; row <= endRow; ++row) {
            for (int column = startColumn; column <= endColumn; ++column) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        final int rows = getRowDimension();
        final int columns = getColumnDimension();
        visitor.start(rows, columns, 0, (rows - 1), 0, (columns - 1));
        for (int column = 0; column < columns; ++column) {
            for (int row = 0; row < rows; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                final double oldValue = getEntry(row, column);
                final double newValue = visitor.visit(row, column, oldValue);
                setEntry(row, column, newValue);
            }
        }
        lu = null;
        return visitor.end();
    }

    public double walkInColumnOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(this, startRow, endRow, startColumn, endColumn);
        visitor.start(getRowDimension(), getColumnDimension(), startRow, endRow, startColumn, endColumn);
        for (int column = startColumn; column <= endColumn; ++column) {
            for (int row = startRow; row <= endRow; ++row) {
                visitor.visit(row, column, getEntry(row, column));
            }
        }
        return visitor.end();
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor) throws org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixChangingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    public double walkInOptimizedOrder(final org.apache.commons.math.linear.RealMatrixPreservingVisitor visitor, final int startRow, final int endRow, final int startColumn, final int endColumn) throws org.apache.commons.math.linear.MatrixIndexException, org.apache.commons.math.linear.MatrixVisitorException {
        return walkInRowOrder(visitor, startRow, endRow, startColumn, endColumn);
    }

    @java.lang.Deprecated
    public double[] solve(final double[] b) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.solve(b);
    }

    @java.lang.Deprecated
    public org.apache.commons.math.linear.RealMatrix solve(final org.apache.commons.math.linear.RealMatrix b) throws java.lang.IllegalArgumentException, org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
        return lu.solve(b);
    }

    @java.lang.Deprecated
    public void luDecompose() throws org.apache.commons.math.linear.InvalidMatrixException {
        if ((lu) == null) {
            lu = new org.apache.commons.math.linear.LUDecompositionImpl(this, org.apache.commons.math.util.MathUtils.SAFE_MIN).getSolver();
        }
    }

    @java.lang.Override
    public java.lang.String toString() {
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        final java.lang.StringBuffer res = new java.lang.StringBuffer();
        java.lang.String fullClassName = getClass().getName();
        java.lang.String shortClassName = fullClassName.substring(((fullClassName.lastIndexOf('.')) + 1));
        res.append(shortClassName).append("{");
        for (int i = 0; i < nRows; ++i) {
            if (i > 0) {
                res.append(",");
            }
            res.append("{");
            for (int j = 0; j < nCols; ++j) {
                if (j > 0) {
                    res.append(",");
                }
                res.append(getEntry(i, j));
            }
            res.append("}");
        }
        res.append("}");
        return res.toString();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object object) {
        if (object == (this)) {
            return true;
        }
        if ((object instanceof org.apache.commons.math.linear.RealMatrix) == false) {
            return false;
        }
        org.apache.commons.math.linear.RealMatrix m = ((org.apache.commons.math.linear.RealMatrix) (object));
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        if (((m.getColumnDimension()) != nCols) || ((m.getRowDimension()) != nRows)) {
            return false;
        }
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                if ((getEntry(row, col)) != (m.getEntry(row, col))) {
                    return false;
                }
            }
        }
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        int ret = 7;
        final int nRows = getRowDimension();
        final int nCols = getColumnDimension();
        ret = (ret * 31) + nRows;
        ret = (ret * 31) + nCols;
        for (int row = 0; row < nRows; ++row) {
            for (int col = 0; col < nCols; ++col) {
                ret = (ret * 31) + (((11 * (row + 1)) + (17 * (col + 1))) * (org.apache.commons.math.util.MathUtils.hash(getEntry(row, col))));
            }
        }
        return ret;
    }
}
08:55:52.177 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
08:55:52.178 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #379
08:55:52.178 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:195 which is executed by 69 tests
816641250
08:55:52.359 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #380
08:55:52.359 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:310 which is executed by 76 tests
-1875222545
08:55:52.441 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #381
08:55:52.442 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:306 which is executed by 76 tests
-1875222545
08:55:52.525 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:52.548 [pool-1376-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:52.695 [pool-1377-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:52.696 [pool-1378-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:52.697 [pool-1379-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:52.698 [pool-1380-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:52.698 [pool-1375-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:52.698 [pool-1375-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:52.698 [pool-1375-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:306.
08:55:52.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #382
08:55:52.698 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:304 which is executed by 76 tests
-1875222545
08:55:52.787 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:52.810 [pool-1382-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:52.957 [pool-1383-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:52.958 [pool-1384-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:52.960 [pool-1385-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:52.961 [pool-1386-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:52.961 [pool-1381-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:52.961 [pool-1381-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:52.961 [pool-1381-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:304.
08:55:52.961 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #383
08:55:52.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:303 which is executed by 76 tests
-1875222545
08:55:53.044 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:53.068 [pool-1388-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:53.214 [pool-1389-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:53.215 [pool-1390-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:53.216 [pool-1391-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:53.217 [pool-1392-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:53.217 [pool-1387-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:53.217 [pool-1387-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:53.217 [pool-1387-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:303.
08:55:53.217 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #384
08:55:53.217 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:302 which is executed by 76 tests
-1875222545
08:55:53.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #385
08:55:53.300 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:301 which is executed by 76 tests
-1875222545
08:55:53.383 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:53.407 [pool-1394-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:53.554 [pool-1395-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:53.555 [pool-1396-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:53.556 [pool-1397-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:53.556 [pool-1398-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:53.556 [pool-1393-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:53.556 [pool-1393-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:53.556 [pool-1393-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:301.
08:55:53.557 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #386
08:55:53.557 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:300 which is executed by 76 tests
-1875222545
08:55:53.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #387
08:55:53.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:299 which is executed by 76 tests
-1875222545
08:55:53.723 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #388
08:55:53.723 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:298 which is executed by 76 tests
-1875222545
08:55:53.805 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:53.829 [pool-1400-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:53.973 [pool-1401-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:53.974 [pool-1402-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:53.975 [pool-1403-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:53.976 [pool-1404-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:53.976 [pool-1399-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:53.976 [pool-1399-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:53.976 [pool-1399-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:298.
08:55:53.976 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #389
08:55:53.976 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:297 which is executed by 76 tests
-1875222545
08:55:54.058 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #390
08:55:54.058 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:296 which is executed by 76 tests
-1875222545
08:55:54.141 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #391
08:55:54.141 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:295 which is executed by 76 tests
-1875222545
08:55:54.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #392
08:55:54.224 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:294 which is executed by 76 tests
-1875222545
08:55:54.306 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #393
08:55:54.307 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:292 which is executed by 76 tests
-1875222545
08:55:54.389 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:54.413 [pool-1406-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:54.556 [pool-1407-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:54.557 [pool-1408-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:54.558 [pool-1409-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:54.558 [pool-1410-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:54.558 [pool-1405-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:54.558 [pool-1405-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:54.559 [pool-1405-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:292.
08:55:54.559 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #394
08:55:54.559 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:640 which is executed by 85 tests
1308483921
08:55:54.654 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #395
08:55:54.654 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:634 which is executed by 85 tests
1308483921
08:55:54.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #396
08:55:54.747 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:633 which is executed by 85 tests
1308483921
08:55:54.840 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:54.879 [pool-1412-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:55.055 [pool-1413-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (20 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:55.056 [pool-1414-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:55.056 [pool-1415-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:55.057 [pool-1416-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:55.057 [pool-1411-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:55.057 [pool-1411-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:55.057 [pool-1411-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.MatrixUtils:633.
08:55:55.057 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:55.081 [pool-1418-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:55.250 [pool-1419-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:55.251 [pool-1420-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.MathRuntimeException$4: 3x3 and 3x3 matrices are not subtraction compatible
    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.MatrixUtils.checkSubtractionCompatible(MatrixUtils.java:260)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.subtract(Array2DRowRealMatrix.java:252)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.subtract(Array2DRowRealMatrix.java:235)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:55.254 [pool-1421-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[3x3 and 3x3 matrices are not subtraction compatible]
org.apache.commons.math.MathRuntimeException$4: 3x3 and 3x3 matrices are not subtraction compatible    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.MatrixUtils.checkSubtractionCompatible(MatrixUtils.java:260)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.subtract(Array2DRowRealMatrix.java:252)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.subtract(Array2DRowRealMatrix.java:235)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.MathRuntimeException$4: 2x2 and 2x2 matrices are not subtraction compatible
    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.MatrixUtils.checkSubtractionCompatible(MatrixUtils.java:260)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.subtract(Array2DRowRealMatrix.java:252)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.subtract(Array2DRowRealMatrix.java:235)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:55.255 [pool-1422-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[2x2 and 2x2 matrices are not subtraction compatible]
org.apache.commons.math.MathRuntimeException$4: 2x2 and 2x2 matrices are not subtraction compatible    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.MatrixUtils.checkSubtractionCompatible(MatrixUtils.java:260)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.subtract(Array2DRowRealMatrix.java:252)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.subtract(Array2DRowRealMatrix.java:235)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:55.255 [pool-1417-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:55.255 [pool-1417-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): 3x3 and 3x3 matrices are not subtraction compatible, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): 2x2 and 2x2 matrices are not subtraction compatible]
08:55:55.255 [pool-1417-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.MatrixUtils:633.
08:55:55.255 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #397
08:55:55.255 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix$5:612 which is executed by 86 tests
816641250
08:55:55.350 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #398
08:55:55.350 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix$5:611 which is executed by 86 tests
816641250
08:55:55.443 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:55.467 [pool-1424-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:55.765 [pool-1425-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:55.766 [pool-1426-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:55.767 [pool-1427-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:55.767 [pool-1428-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:55.767 [pool-1423-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:55.767 [pool-1423-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:55.767 [pool-1423-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.AbstractRealMatrix$5:611.
08:55:55.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #399
08:55:55.767 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:616 which is executed by 86 tests
816641250
08:55:55.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #400
08:55:55.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:606 which is executed by 86 tests
816641250
08:55:55.955 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:55.980 [pool-1430-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:56.284 [pool-1431-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:56.285 [pool-1432-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:56.286 [pool-1433-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:56.286 [pool-1434-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:56.286 [pool-1429-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:56.286 [pool-1429-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:56.286 [pool-1429-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:606.
08:55:56.286 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #401
08:55:56.286 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:605 which is executed by 86 tests
816641250
08:55:56.381 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #402
08:55:56.381 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:604 which is executed by 86 tests
816641250
08:55:56.476 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #403
08:55:56.476 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:603 which is executed by 86 tests
816641250
08:55:56.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #404
08:55:56.569 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor:35 which is executed by 89 tests
-69848058
08:55:56.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #405
08:55:56.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:505 which is executed by 90 tests
-1875222545
08:55:56.725 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #406
08:55:56.725 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:502 which is executed by 90 tests
-1875222545
08:55:56.809 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:56.834 [pool-1436-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:56.965 [pool-1437-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:56.966 [pool-1438-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:56.966 [pool-1439-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:56.967 [pool-1440-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:56.967 [pool-1435-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:56.967 [pool-1435-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:56.967 [pool-1435-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:502.
08:55:56.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #407
08:55:56.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:501 which is executed by 90 tests
-1875222545
08:55:57.051 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:57.075 [pool-1442-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:57.205 [pool-1443-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:57.206 [pool-1444-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:57.206 [pool-1445-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:57.207 [pool-1446-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:57.207 [pool-1441-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:57.207 [pool-1441-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:57.207 [pool-1441-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:501.
08:55:57.207 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #408
08:55:57.207 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:500 which is executed by 90 tests
-1875222545
08:55:57.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #409
08:55:57.290 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:499 which is executed by 90 tests
-1875222545
08:55:57.374 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:57.397 [pool-1448-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:57.527 [pool-1449-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:57.527 [pool-1450-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:57.528 [pool-1451-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:57.528 [pool-1452-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:57.529 [pool-1447-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:55:57.529 [pool-1447-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:57.529 [pool-1447-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:499.
08:55:57.529 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #410
08:55:57.529 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:498 which is executed by 90 tests
-1875222545
08:55:57.612 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:57.636 [pool-1454-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:57.777 [pool-1455-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:57.777 [pool-1456-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:57.778 [pool-1457-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:57.779 [pool-1458-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:57.779 [pool-1453-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:57.779 [pool-1453-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:57.779 [pool-1453-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:498.
08:55:57.779 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #411
08:55:57.779 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:497 which is executed by 90 tests
-1875222545
08:55:57.862 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #412
08:55:57.862 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:496 which is executed by 90 tests
-1875222545
08:55:57.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #413
08:55:57.945 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor:44 which is executed by 94 tests
-69848058
08:55:58.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #414
08:55:58.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.AbstractRealMatrix:919 which is executed by 94 tests
816641250
08:55:58.110 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #415
08:55:58.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:656 which is executed by 97 tests
1308483921
08:55:58.204 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #416
08:55:58.204 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:650 which is executed by 97 tests
1308483921
08:55:58.297 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:58.321 [pool-1460-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:58.489 [pool-1461-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:58.490 [pool-1462-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:58.490 [pool-1463-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:58.491 [pool-1464-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:58.491 [pool-1459-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:58.491 [pool-1459-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:58.491 [pool-1459-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.MatrixUtils:650.
08:55:58.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:58.515 [pool-1466-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:58.694 [pool-1467-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:58.695 [pool-1468-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.MathRuntimeException$4: 3x3 and 3x2 matrices are not multiplication compatible
    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:266)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:187)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
08:55:58.698 [pool-1469-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[3x3 and 3x2 matrices are not multiplication compatible]
org.apache.commons.math.MathRuntimeException$4: 3x3 and 3x2 matrices are not multiplication compatible    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:266)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:187)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)

org.apache.commons.math.MathRuntimeException$4: 2x2 and 2x1 matrices are not multiplication compatible
    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:266)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:187)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
08:55:58.699 [pool-1470-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[2x2 and 2x1 matrices are not multiplication compatible]
org.apache.commons.math.MathRuntimeException$4: 2x2 and 2x1 matrices are not multiplication compatible    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.MatrixUtils.checkMultiplicationCompatible(MatrixUtils.java:266)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:292)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.multiply(Array2DRowRealMatrix.java:275)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:187)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)

08:55:58.699 [pool-1465-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:58.699 [pool-1465-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): 3x3 and 3x2 matrices are not multiplication compatible, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): 2x2 and 2x1 matrices are not multiplication compatible]
08:55:58.700 [pool-1465-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.MatrixUtils:650.
08:55:58.700 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #417
08:55:58.700 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:181 which is executed by 98 tests
-1875222545
08:55:58.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #418
08:55:58.782 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:106 which is executed by 101 tests
1308483921
08:55:58.874 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #419
08:55:58.874 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:61 which is executed by 111 tests
1308483921
08:55:58.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #420
08:55:58.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:534 which is executed by 113 tests
1308483921
08:55:59.060 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #421
08:55:59.060 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:530 which is executed by 113 tests
1308483921
08:55:59.153 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:59.176 [pool-1472-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:59.344 [pool-1473-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:59.345 [pool-1474-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:59.345 [pool-1475-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:59.346 [pool-1476-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:59.346 [pool-1471-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:59.346 [pool-1471-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:59.346 [pool-1471-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.MatrixUtils:530.
08:55:59.346 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:59.370 [pool-1478-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:59.538 [pool-1479-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:59.538 [pool-1480-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.linear.MatrixIndexException: row index 0 out of allowed range [0, 2]
    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:216)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:227)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:59.542 [pool-1481-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[row index 0 out of allowed range [0, 2]]
org.apache.commons.math.linear.MatrixIndexException: row index 0 out of allowed range [0, 2]    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:216)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:227)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.linear.MatrixIndexException: row index 0 out of allowed range [0, 1]
    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:216)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:227)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:59.542 [pool-1482-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[row index 0 out of allowed range [0, 1]]
org.apache.commons.math.linear.MatrixIndexException: row index 0 out of allowed range [0, 1]    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:216)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:227)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:55:59.542 [pool-1477-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:55:59.543 [pool-1477-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): row index 0 out of allowed range [0, 2], testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): row index 0 out of allowed range [0, 1]]
08:55:59.543 [pool-1477-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.MatrixUtils:530.
08:55:59.543 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #422
08:55:59.543 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.ArrayRealVector:951 which is executed by 114 tests
-357391461
08:55:59.653 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #423
08:55:59.653 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:548 which is executed by 119 tests
1308483921
08:55:59.753 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #424
08:55:59.753 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.MatrixUtils:544 which is executed by 119 tests
1308483921
08:55:59.849 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:55:59.873 [pool-1484-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:00.045 [pool-1485-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:00.046 [pool-1486-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:00.046 [pool-1487-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:00.047 [pool-1488-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:00.047 [pool-1483-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:00.047 [pool-1483-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:00.047 [pool-1483-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.MatrixUtils:544.
08:56:00.047 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:00.071 [pool-1490-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:00.245 [pool-1491-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:00.246 [pool-1492-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.linear.MatrixIndexException: column index 0 out of allowed range [0, 2]
    at org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(MatrixUtils.java:222)
    at org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(AbstractRealMatrix.java:507)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:266)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:00.249 [pool-1493-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[column index 0 out of allowed range [0, 2]]
org.apache.commons.math.linear.MatrixIndexException: column index 0 out of allowed range [0, 2]    at org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(MatrixUtils.java:222)
    at org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(AbstractRealMatrix.java:507)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:266)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:187)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.linear.MatrixIndexException: column index 0 out of allowed range [0, 1]
    at org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(MatrixUtils.java:222)
    at org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(AbstractRealMatrix.java:507)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:266)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:00.250 [pool-1494-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[column index 0 out of allowed range [0, 1]]
org.apache.commons.math.linear.MatrixIndexException: column index 0 out of allowed range [0, 1]    at org.apache.commons.math.linear.MatrixUtils.checkColumnIndex(MatrixUtils.java:222)
    at org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(AbstractRealMatrix.java:507)
    at org.apache.commons.math.linear.EigenDecompositionImpl.getV(EigenDecompositionImpl.java:266)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:00.250 [pool-1489-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:00.250 [pool-1489-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): column index 0 out of allowed range [0, 2], testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): column index 0 out of allowed range [0, 1]]
08:56:00.250 [pool-1489-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.MatrixUtils:544.
08:56:00.250 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #425
08:56:00.250 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.ArrayRealVector:946 which is executed by 120 tests
-357391461
08:56:00.352 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #426
08:56:00.352 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:317 which is executed by 131 tests
-1875222545
08:56:00.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #427
08:56:00.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:622 which is executed by 133 tests
-1875222545
08:56:00.522 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #428
08:56:00.522 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:620 which is executed by 133 tests
-1875222545
08:56:00.607 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:00.630 [pool-1496-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:56:00.751 [pool-1497-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<0>]
java.lang.AssertionError: expected:<2> but was:<0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]
    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:00.762 [pool-1498-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[row index -1 out of allowed range [0, 1]]
org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:00.763 [pool-1499-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:00.764 [pool-1500-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:00.764 [pool-1495-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): row index -1 out of allowed range [0, 1]]
08:56:00.764 [pool-1495-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:00.764 [pool-1495-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:620.
08:56:00.764 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #429
08:56:00.764 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:619 which is executed by 133 tests
-1875222545
08:56:00.849 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:00.885 [pool-1502-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:56:01.006 [pool-1503-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<0>]
java.lang.AssertionError: expected:<2> but was:<0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]
    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:01.017 [pool-1504-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[row index -1 out of allowed range [0, 1]]
org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:01.018 [pool-1505-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:01.019 [pool-1506-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:01.019 [pool-1501-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): row index -1 out of allowed range [0, 1]]
08:56:01.019 [pool-1501-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:01.019 [pool-1501-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:619.
08:56:01.019 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #430
08:56:01.019 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:617 which is executed by 133 tests
-1875222545
08:56:01.103 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #431
08:56:01.103 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:616 which is executed by 133 tests
-1875222545
08:56:01.186 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #432
08:56:01.186 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:374 which is executed by 158 tests
-1875222545
08:56:01.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #433
08:56:01.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:391 which is executed by 173 tests
-1875222545
08:56:01.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #434
08:56:01.353 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:390 which is executed by 173 tests
-1875222545
08:56:01.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #435
08:56:01.437 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:386 which is executed by 173 tests
-1875222545
08:56:01.520 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:01.547 [pool-1508-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<14.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:01.699 [pool-1509-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<14.0>]
java.lang.AssertionError: expected:<0.0> but was:<14.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<4.0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:01.700 [pool-1510-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<4.0>]
java.lang.AssertionError: expected:<0.0> but was:<4.0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:01.702 [pool-1511-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:01.702 [pool-1512-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:01.703 [pool-1507-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<14.0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<4.0>]
08:56:01.703 [pool-1507-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:01.703 [pool-1507-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:386.
08:56:01.703 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #436
08:56:01.703 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:637 which is executed by 177 tests
-1875222545
08:56:01.787 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #437
08:56:01.787 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:636 which is executed by 177 tests
-1875222545
08:56:01.871 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:01.896 [pool-1514-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NegativeArraySizeException
    at org.apache.commons.math.linear.BiDiagonalTransformer.<init>(BiDiagonalTransformer.java:67)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:120)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:176)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:56:02.014 [pool-1515-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NegativeArraySizeException    at org.apache.commons.math.linear.BiDiagonalTransformer.<init>(BiDiagonalTransformer.java:67)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:120)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:176)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NegativeArraySizeException
    at org.apache.commons.math.linear.BiDiagonalTransformer.<init>(BiDiagonalTransformer.java:67)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:120)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:216)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:56:02.015 [pool-1516-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NegativeArraySizeException    at org.apache.commons.math.linear.BiDiagonalTransformer.<init>(BiDiagonalTransformer.java:67)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:120)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:216)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:02.027 [pool-1517-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:02.027 [pool-1518-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:02.027 [pool-1513-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:56:02.027 [pool-1513-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:02.027 [pool-1513-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:636.
08:56:02.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #438
08:56:02.028 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:367 which is executed by 177 tests
-1875222545
08:56:02.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #439
08:56:02.111 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:363 which is executed by 177 tests
-1875222545
08:56:02.195 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #440
08:56:02.195 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:361 which is executed by 177 tests
-1875222545
08:56:02.278 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:02.302 [pool-1520-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:56:02.427 [pool-1521-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<0>]
java.lang.AssertionError: expected:<2> but was:<0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]
    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:02.438 [pool-1522-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[row index -1 out of allowed range [0, 1]]
org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:02.439 [pool-1523-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:02.440 [pool-1524-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:02.440 [pool-1519-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): row index -1 out of allowed range [0, 1]]
08:56:02.440 [pool-1519-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:02.440 [pool-1519-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:361.
08:56:02.440 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #441
08:56:02.440 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:357 which is executed by 177 tests
-1875222545
08:56:02.524 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:02.548 [pool-1526-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:02.678 [pool-1527-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:02.678 [pool-1528-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:02.679 [pool-1529-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:02.680 [pool-1530-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:02.680 [pool-1525-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:02.680 [pool-1525-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:02.680 [pool-1525-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:357.
08:56:02.680 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:02.703 [pool-1532-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:02.833 [pool-1533-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:02.834 [pool-1534-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.MathRuntimeException$4: some rows have length 3 while others have length 3
    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:203)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:411)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:02.837 [pool-1535-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[some rows have length 3 while others have length 3]
org.apache.commons.math.MathRuntimeException$4: some rows have length 3 while others have length 3    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:203)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:411)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.MathRuntimeException$4: some rows have length 2 while others have length 2
    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:203)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:411)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:213)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:02.838 [pool-1536-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[some rows have length 2 while others have length 2]
org.apache.commons.math.MathRuntimeException$4: some rows have length 2 while others have length 2    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:203)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:411)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:213)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:02.838 [pool-1531-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:02.838 [pool-1531-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): some rows have length 3 while others have length 3, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): some rows have length 2 while others have length 2]
08:56:02.838 [pool-1531-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:357.
08:56:02.838 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #442
08:56:02.838 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:356 which is executed by 177 tests
-1875222545
08:56:02.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:02.946 [pool-1538-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<2> but was:<0>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)
08:56:03.067 [pool-1539-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (8 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<2> but was:<0>]
java.lang.AssertionError: expected:<2> but was:<0>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:118)
    at org.junit.Assert.assertEquals(Assert.java:555)
    at org.junit.Assert.assertEquals(Assert.java:542)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:181)

org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]
    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:03.078 [pool-1540-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[row index -1 out of allowed range [0, 1]]
org.apache.commons.math.linear.MatrixIndexException: row index -1 out of allowed range [0, 1]    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.MatrixUtils.checkSubMatrixIndex(MatrixUtils.java:565)
    at org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(AbstractRealMatrix.java:264)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(SingularValueDecompositionImpl.java:162)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:218)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:03.079 [pool-1541-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:03.080 [pool-1542-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:03.080 [pool-1537-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<2> but was:<0>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): row index -1 out of allowed range [0, 1]]
08:56:03.080 [pool-1537-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:03.080 [pool-1537-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:356.
08:56:03.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #443
08:56:03.080 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:355 which is executed by 177 tests
-1875222545
08:56:03.163 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:03.187 [pool-1544-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NullPointerException
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:201)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:411)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:56:03.303 [pool-1545-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:201)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:411)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NullPointerException
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:201)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:411)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:213)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:56:03.304 [pool-1546-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NullPointerException    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:201)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:411)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:213)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:03.317 [pool-1547-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (13 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:03.317 [pool-1548-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:03.318 [pool-1543-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:56:03.318 [pool-1543-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:03.318 [pool-1543-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:355.
08:56:03.318 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #444
08:56:03.318 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:351 which is executed by 177 tests
-1875222545
08:56:03.401 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:03.424 [pool-1550-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:03.555 [pool-1551-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:03.556 [pool-1552-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:03.557 [pool-1553-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:03.557 [pool-1554-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:03.557 [pool-1549-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:03.557 [pool-1549-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:03.557 [pool-1549-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:351.
08:56:03.558 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:03.584 [pool-1556-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:03.715 [pool-1557-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:03.716 [pool-1558-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.MathRuntimeException$4: matrix must have at least one column
    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:198)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:411)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:03.719 [pool-1559-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[matrix must have at least one column]
org.apache.commons.math.MathRuntimeException$4: matrix must have at least one column    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:198)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:411)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.MathRuntimeException$4: matrix must have at least one column
    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:198)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:411)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:213)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:03.719 [pool-1560-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[matrix must have at least one column]
org.apache.commons.math.MathRuntimeException$4: matrix must have at least one column    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:198)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:411)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:213)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:03.719 [pool-1555-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:03.719 [pool-1555-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): matrix must have at least one column, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): matrix must have at least one column]
08:56:03.720 [pool-1555-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:351.
08:56:03.720 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #445
08:56:03.720 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:350 which is executed by 177 tests
-1875222545
08:56:03.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #446
08:56:03.816 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:345 which is executed by 177 tests
-1875222545
08:56:03.899 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:03.922 [pool-1562-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.052 [pool-1563-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.052 [pool-1564-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.053 [pool-1565-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.054 [pool-1566-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:04.054 [pool-1561-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:04.054 [pool-1561-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:04.054 [pool-1561-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:345.
08:56:04.054 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.077 [pool-1568-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.207 [pool-1569-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.208 [pool-1570-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.MathRuntimeException$4: matrix must have at least one row
    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:193)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:410)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.211 [pool-1571-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[matrix must have at least one row]
org.apache.commons.math.MathRuntimeException$4: matrix must have at least one row    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:193)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:410)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.MathRuntimeException$4: matrix must have at least one row
    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:193)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:410)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:213)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.212 [pool-1572-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[matrix must have at least one row]
org.apache.commons.math.MathRuntimeException$4: matrix must have at least one row    at org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:193)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:410)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:213)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:04.212 [pool-1567-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:04.212 [pool-1567-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): matrix must have at least one row, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): matrix must have at least one row]
08:56:04.212 [pool-1567-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:345.
08:56:04.212 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #447
08:56:04.212 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:344 which is executed by 177 tests
-1875222545
08:56:04.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #448
08:56:04.295 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:340 which is executed by 177 tests
-1875222545
08:56:04.378 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.402 [pool-1574-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.532 [pool-1575-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.533 [pool-1576-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.533 [pool-1577-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.534 [pool-1578-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:04.534 [pool-1573-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:04.534 [pool-1573-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:04.534 [pool-1573-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:340.
08:56:04.534 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.557 [pool-1580-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.686 [pool-1581-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.687 [pool-1582-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.MathRuntimeException$5: first 0 columns are not initialized yet
    at org.apache.commons.math.MathRuntimeException.createIllegalStateException(MathRuntimeException.java:347)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:188)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:409)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.690 [pool-1583-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[first 0 columns are not initialized yet]
org.apache.commons.math.MathRuntimeException$5: first 0 columns are not initialized yet    at org.apache.commons.math.MathRuntimeException.createIllegalStateException(MathRuntimeException.java:347)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:188)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:409)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.MathRuntimeException$5: first 0 columns are not initialized yet
    at org.apache.commons.math.MathRuntimeException.createIllegalStateException(MathRuntimeException.java:347)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:188)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:409)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:213)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.690 [pool-1584-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[first 0 columns are not initialized yet]
org.apache.commons.math.MathRuntimeException$5: first 0 columns are not initialized yet    at org.apache.commons.math.MathRuntimeException.createIllegalStateException(MathRuntimeException.java:347)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:188)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:409)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:213)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:04.690 [pool-1579-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:04.691 [pool-1579-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): first 0 columns are not initialized yet, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): first 0 columns are not initialized yet]
08:56:04.691 [pool-1579-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:340.
08:56:04.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #449
08:56:04.691 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:336 which is executed by 177 tests
-1875222545
08:56:04.773 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.797 [pool-1586-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.928 [pool-1587-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.929 [pool-1588-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.929 [pool-1589-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.930 [pool-1590-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:04.930 [pool-1585-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:04.930 [pool-1585-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:04.930 [pool-1585-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:336.
08:56:04.930 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:04.953 [pool-1592-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:05.083 [pool-1593-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:05.084 [pool-1594-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.MathRuntimeException$5: first 0 rows are not initialized yet
    at org.apache.commons.math.MathRuntimeException.createIllegalStateException(MathRuntimeException.java:347)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:185)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:409)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:05.087 [pool-1595-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[first 0 rows are not initialized yet]
org.apache.commons.math.MathRuntimeException$5: first 0 rows are not initialized yet    at org.apache.commons.math.MathRuntimeException.createIllegalStateException(MathRuntimeException.java:347)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:185)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:409)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:169)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.MathRuntimeException$5: first 0 rows are not initialized yet
    at org.apache.commons.math.MathRuntimeException.createIllegalStateException(MathRuntimeException.java:347)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:185)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:409)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:213)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:05.087 [pool-1596-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[first 0 rows are not initialized yet]
org.apache.commons.math.MathRuntimeException$5: first 0 rows are not initialized yet    at org.apache.commons.math.MathRuntimeException.createIllegalStateException(MathRuntimeException.java:347)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:185)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:409)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:213)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:05.087 [pool-1591-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:05.088 [pool-1591-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): first 0 rows are not initialized yet, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): first 0 rows are not initialized yet]
08:56:05.088 [pool-1591-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:336.
08:56:05.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #450
08:56:05.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:335 which is executed by 177 tests
-1875222545
08:56:05.171 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:05.195 [pool-1598-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.NegativeArraySizeException
    at org.apache.commons.math.linear.BiDiagonalTransformer.<init>(BiDiagonalTransformer.java:67)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:120)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:176)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:56:05.314 [pool-1599-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NegativeArraySizeException    at org.apache.commons.math.linear.BiDiagonalTransformer.<init>(BiDiagonalTransformer.java:67)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:120)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:176)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.NegativeArraySizeException
    at org.apache.commons.math.linear.BiDiagonalTransformer.<init>(BiDiagonalTransformer.java:67)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:120)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:216)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
08:56:05.314 [pool-1600-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[null]
java.lang.NegativeArraySizeException    at org.apache.commons.math.linear.BiDiagonalTransformer.<init>(BiDiagonalTransformer.java:67)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:120)
    at org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:98)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:216)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:05.326 [pool-1601-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:05.327 [pool-1602-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:05.327 [pool-1597-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): null, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): null]
08:56:05.327 [pool-1597-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:05.327 [pool-1597-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:335.
08:56:05.327 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:05.351 [pool-1604-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 14
<> Ignored tests: 0
<> Failed tests: 4
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math.linear.MatrixIndexException: row index 0 out of allowed range [0, -1]
    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.AbstractRealMatrix.setSubMatrix(AbstractRealMatrix.java:393)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:206)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:409)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:169)
08:56:05.474 [pool-1605-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (9 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[row index 0 out of allowed range [0, -1]]
org.apache.commons.math.linear.MatrixIndexException: row index 0 out of allowed range [0, -1]    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.AbstractRealMatrix.setSubMatrix(AbstractRealMatrix.java:393)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:206)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:409)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:169)

org.apache.commons.math.linear.MatrixIndexException: row index 0 out of allowed range [0, -1]
    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.AbstractRealMatrix.setSubMatrix(AbstractRealMatrix.java:393)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:206)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:409)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:213)
08:56:05.475 [pool-1606-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[row index 0 out of allowed range [0, -1]]
org.apache.commons.math.linear.MatrixIndexException: row index 0 out of allowed range [0, -1]    at org.apache.commons.math.linear.MatrixUtils.checkRowIndex(MatrixUtils.java:532)
    at org.apache.commons.math.linear.AbstractRealMatrix.setSubMatrix(AbstractRealMatrix.java:393)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.setSubMatrix(Array2DRowRealMatrix.java:206)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.copyIn(Array2DRowRealMatrix.java:409)
    at org.apache.commons.math.linear.Array2DRowRealMatrix.<init>(Array2DRowRealMatrix.java:26)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:213)

java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:05.485 [pool-1607-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320A(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<0.09336767546650937>]
java.lang.AssertionError: expected:<0.0> but was:<0.09336767546650937>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

java.lang.AssertionError: expected:<0.0> but was:<3.2>
    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
08:56:05.486 [pool-1608-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testMath320B(org.apache.commons.math.linear.SingularValueSolverTest)
[expected:<0.0> but was:<3.2>]
java.lang.AssertionError: expected:<0.0> but was:<3.2>    at org.junit.Assert.fail(Assert.java:88)
    at org.junit.Assert.failNotEquals(Assert.java:743)
    at org.junit.Assert.assertEquals(Assert.java:494)
    at org.junit.Assert.assertEquals(Assert.java:592)
    at org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

08:56:05.486 [pool-1603-thread-1] DEBUG tests.output - Failing tests with false: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): row index 0 out of allowed range [0, -1], testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): row index 0 out of allowed range [0, -1]]
08:56:05.486 [pool-1603-thread-1] DEBUG tests.output - Failing tests with true: 
[testMath320A(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<0.09336767546650937>, testMath320B(org.apache.commons.math.linear.SingularValueSolverTest): expected:<0.0> but was:<3.2>]
08:56:05.487 [pool-1603-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:335.
08:56:05.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #451
08:56:05.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:426 which is executed by 227 tests
-1875222545
08:56:05.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #452
08:56:05.570 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math.linear.Array2DRowRealMatrix:420 which is executed by 228 tests
-1875222545
08:56:05.661 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
08:56:05.787 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 398
08:56:05.787 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 2928
08:56:05.787 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 273
08:56:05.787 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
08:56:05.787 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
08:56:05.789 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
08:56:05.789 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
08:56:05.789 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 130321ms
08:56:05.789 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
NO_ANGELIC_VALUE
Command exited with non-zero status 255
227.35user 19.61system 2:11.99elapsed 187%CPU (0avgtext+0avgdata 1868444maxresident)k
45760inputs+15784outputs (3major+668528minor)pagefaults 0swaps


Node: graphene-107.nancy.grid5000.fr



Date: Sat Dec 29 08:56:06 EST 2018

