cd /tmp/jMutRepair_Bug_dot_jar_Commons-Math_0596e314;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4g -Xms1g -cp /home/tdurieux/defects4j4repair/script/../libs/jtestex7.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/astor.jar fr.inria.main.evolution.AstorMain \
	-mode jMutRepair \
	-location . \
	-id Commons-Math-0596e314 \
	-failing org.apache.commons.math.random.RandomDataTest:org.apache.commons.math.random.AbstractRandomGeneratorTest:org.apache.commons.math.random.RandomAdaptorTest \
	-jvm4testexecution /home/tdurieux/openjdk-1.7.0/bin/ \
	-jvm4evosuitetestexecution /home/tdurieux/openjdk-1.7.0/bin/ \
	-maxgen 1000000 \
	-maxtime 120 \
	-stopfirst true \
	-seed 0 \
	-scope local \
	-population 1 \
	-javacompliancelevel 7 \
	-srcjavafolder src/main/java \
	-srctestfolder src/test/java \
	-binjavafolder target/classes \
	-bintestfolder target/test-classes \
	-parameters x:x \
	-dependencies /home/tdurieux/.m2/repository/junit/junit/4.4/junit-4.4.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
[INFO ] fr.inria.astor.core.setup.ProjectConfiguration.getVersionJDK(ProjectConfiguration.java:282) - Version of the JVM used: 1.7.0-u80-unofficial
[INFO ] fr.inria.main.AbstractMain.processArguments(AbstractMain.java:370) - Java version of the JDK used to run tests: 1.7.0-u80-unofficial
[INFO ] fr.inria.main.AbstractMain.processArguments(AbstractMain.java:371) - The compliance of the JVM is:  7
[INFO ] fr.inria.main.AbstractMain.processArguments(AbstractMain.java:645) - command line arguments: [-mode  jMutRepair  -location  .  -id  Commons-Math-0596e314  -failing  org.apache.commons.math.random.RandomDataTest:org.apache.commons.math.random.AbstractRandomGeneratorTest:org.apache.commons.math.random.RandomAdaptorTest  -jvm4testexecution  /home/tdurieux/openjdk-1.7.0/bin/  -jvm4evosuitetestexecution  /home/tdurieux/openjdk-1.7.0/bin/  -maxgen  1000000  -maxtime  120  -stopfirst  true  -seed  0  -scope  local  -population  1  -javacompliancelevel  7  -srcjavafolder  src/main/java  -srctestfolder  src/test/java  -binjavafolder  target/classes  -bintestfolder  target/test-classes  -parameters  x:x  -dependencies  /home/tdurieux/.m2/repository/junit/junit/4.4/junit-4.4.jar]
[INFO ] fr.inria.main.evolution.AstorMain.execute(AstorMain.java:216) - Running Astor on a JDK at /usr/lib/jvm/java-8-openjdk-amd64/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:849) - Source folders: [/tmp/jMutRepair_Bug_dot_jar_Commons-Math_0596e314/./src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:868) - Source Test folders: [/tmp/jMutRepair_Bug_dot_jar_Commons-Math_0596e314/./src/test/java]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:75) - -Executing Gzoltar classpath: /tmp/jMutRepair_Bug_dot_jar_Commons-Math_0596e314/./output_astor/AstorMain-Commons-Math-0596e314//bin//default from 225 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:149) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:169) - -gz-Adding classpath: [/home/tdurieux/.m2/repository/junit/junit/4.4/junit-4.4.jar, /tmp/jMutRepair_Bug_dot_jar_Commons-Math_0596e314/./output_astor/AstorMain-Commons-Math-0596e314//bin//default]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.commons.math.random.RandomAdaptorTest#testNextExponential
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.commons.math.random.RandomDataTest#testNextExponential
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:206) - Test failt: org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#derivativesConsistency
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:218) - Gzoltar Test Result Total:2100, fails: 4, GZoltar suspicious 17340, with positive susp 528
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:226) - nr test results 2100
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:271) - Gzoltar found: 413 with susp > 0.1, we consider: 413
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:689) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:781) - Creating model,  Code location from working folder: /tmp/jMutRepair_Bug_dot_jar_Commons-Math_0596e314/./src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:65) - building model: /tmp/jMutRepair_Bug_dot_jar_Commons-Math_0596e314/./src/main/java, compliance level: 7
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:78) - Classpath for building SpoonModel [/home/tdurieux/.m2/repository/junit/junit/4.4/junit-4.4.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:693) - 
---- Initial suspicious size: 413
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.RetryTestCase, methodName=org.apache.commons.math.RetryTestCase{runTest()V 0.0, lineNumber=52, susp=0.6708203932499369]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.RetryTestCase, methodName=org.apache.commons.math.RetryTestCase{runTest()V 0.0, lineNumber=49, susp=0.17437145811572893]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{requiresDenseOutput()Z 0.0, lineNumber=35, susp=0.16666666666666666]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=41, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=42, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=44, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=48, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=49, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=50, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=51, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=52, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=53, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=54, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=55, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=56, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=57, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=58, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=59, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=60, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=61, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=62, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=63, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=65, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=66, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=68, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=69, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=73, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{handleStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;Z)V 0.0, lineNumber=76, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils$1{reset()V 0.0, lineNumber=79, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils{checkDerivativesConsistency(Lorg/apache/commons/math/ode/FirstOrderIntegrator;Lorg/apache/commons/math/ode/TestProblemAbstract;D)V 0.0, lineNumber=32, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils{checkDerivativesConsistency(Lorg/apache/commons/math/ode/FirstOrderIntegrator;Lorg/apache/commons/math/ode/TestProblemAbstract;D)V 0.0, lineNumber=83, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils{checkDerivativesConsistency(Lorg/apache/commons/math/ode/FirstOrderIntegrator;Lorg/apache/commons/math/ode/TestProblemAbstract;D)V 0.0, lineNumber=84, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils, methodName=org.apache.commons.math.ode.sampling.StepInterpolatorTestUtils{checkDerivativesConsistency(Lorg/apache/commons/math/ode/FirstOrderIntegrator;Lorg/apache/commons/math/ode/TestProblemAbstract;D)V 0.0, lineNumber=85, susp=0.15811388300841897]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:127) - Total suspicious from FL: 413,  69
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:136) - Total ModPoint created: 69
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 69, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 4
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /tmp/jMutRepair_Bug_dot_jar_Commons-Math_0596e314/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /home/tdurieux/openjdk-1.7.0/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= mutationspace
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= target/classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 32284
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= if-conditions
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= src/test/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= org.apache.commons.math.random.RandomDataTest:org.apache.commons.math.random.AbstractRandomGeneratorTest:org.apache.commons.math.random.RandomAdaptorTest
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 7
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:x= x
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= Commons-Math-0596e314
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= target/test-classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.7.0-u80-unofficial
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jMutRepair
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /home/tdurieux/openjdk-1.7.0/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /home/tdurieux/.m2/repository/junit/junit/4.4/junit-4.4.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= local
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src/main/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= .
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.random.RandomDataImpl line: 465, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mean < 0.0 ` -topatch--> `mean == 0.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.random.RandomDataImpl line: 465, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mean < 0.0 ` -topatch--> `mean != 0.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.random.RandomDataImpl line: 465, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mean < 0.0 ` -topatch--> `mean >= 0.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.random.RandomDataImpl line: 465, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mean < 0.0 ` -topatch--> `mean > 0.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.random.RandomDataImpl line: 465, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mean < 0.0 ` -topatch--> `mean <= 0.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.random.RandomDataImpl line: 465, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mean < 0.0 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 757, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) &&  ((costPerTimeUnit[(targetIter - 1)]) <  ((orderControl1) * (costPerTimeUnit[tar[...] ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 757, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) &&  ((costPerTimeUnit[(targetIter - 1)]) <  ((orderControl1) * (costPerTimeUnit[tar[...] ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 757, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) &&  ((costPerTimeUnit[(targetIter - 1)]) <  ((orderControl1) * (costPerTimeUnit[tar[...] ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 757, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) &&  ((costPerTimeUnit[(targetIter - 1)]) <  ((orderControl1) * (costPerTimeUnit[tar[...] ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 757, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) &&  ((costPerTimeUnit[(targetIter - 1)]) <  ((orderControl1) * (costPerTimeUnit[tar[...] ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 757, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) &&  ((costPerTimeUnit[(targetIter - 1)]) <  ((orderControl1) * (costPerTimeUnit[tar[...] ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 757, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) &&  ((costPerTimeUnit[(targetIter - 1)]) <  ((orderControl1) * (costPerTimeUnit[tar[...] ` -topatch--> `(targetIter > 1) && ( (this.costPerTimeUnit[(targetIter - 1)]) ==  ((this.orderControl1) * (this.cos[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 757, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) &&  ((costPerTimeUnit[(targetIter - 1)]) <  ((orderControl1) * (costPerTimeUnit[tar[...] ` -topatch--> `(targetIter > 1) && ( (this.costPerTimeUnit[(targetIter - 1)]) !=  ((this.orderControl1) * (this.cos[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 757, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) &&  ((costPerTimeUnit[(targetIter - 1)]) <  ((orderControl1) * (costPerTimeUnit[tar[...] ` -topatch--> `(targetIter > 1) && ( (this.costPerTimeUnit[(targetIter - 1)]) >=  ((this.orderControl1) * (this.cos[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 757, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) &&  ((costPerTimeUnit[(targetIter - 1)]) <  ((orderControl1) * (costPerTimeUnit[tar[...] ` -topatch--> `(targetIter > 1) && ( (this.costPerTimeUnit[(targetIter - 1)]) >  ((this.orderControl1) * (this.cost[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 757, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) &&  ((costPerTimeUnit[(targetIter - 1)]) <  ((orderControl1) * (costPerTimeUnit[tar[...] ` -topatch--> `(targetIter > 1) && ( (this.costPerTimeUnit[(targetIter - 1)]) <=  ((this.orderControl1) * (this.cos[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 757, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) &&  ((costPerTimeUnit[(targetIter - 1)]) <  ((orderControl1) * (costPerTimeUnit[tar[...] ` -topatch--> `(targetIter > 1) && (! ((this.costPerTimeUnit[(targetIter - 1)]) <  ((this.orderControl1) * (this.co[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 757, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) &&  ((costPerTimeUnit[(targetIter - 1)]) <  ((orderControl1) * (costPerTimeUnit[tar[...] ` -topatch--> `(targetIter > 1) ||  ((this.costPerTimeUnit[(targetIter - 1)]) <  ((this.orderControl1) * (this.cost[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 757, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) &&  ((costPerTimeUnit[(targetIter - 1)]) <  ((orderControl1) * (costPerTimeUnit[tar[...] ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 777, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error > (ratio * ratio) ` -topatch--> `error == (ratio * ratio)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 777, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error > (ratio * ratio) ` -topatch--> `error != (ratio * ratio)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 777, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error > (ratio * ratio) ` -topatch--> `error >= (ratio * ratio)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 777, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error > (ratio * ratio) ` -topatch--> `error <= (ratio * ratio)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 777, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error > (ratio * ratio) ` -topatch--> `error < (ratio * ratio)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 777, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error > (ratio * ratio) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 793, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error > 1.0 ` -topatch--> `error == 1.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 793, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error > 1.0 ` -topatch--> `error != 1.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 793, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error > 1.0 ` -topatch--> `error >= 1.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 793, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error > 1.0 ` -topatch--> `error <= 1.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 793, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error > 1.0 ` -topatch--> `error < 1.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 793, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error > 1.0 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 944, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k > 2) &&  ((costPerTimeUnit[(k - 2)]) < ((orderControl1) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 944, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k > 2) &&  ((costPerTimeUnit[(k - 2)]) < ((orderControl1) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 944, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k > 2) &&  ((costPerTimeUnit[(k - 2)]) < ((orderControl1) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 944, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k > 2) &&  ((costPerTimeUnit[(k - 2)]) < ((orderControl1) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 944, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k > 2) &&  ((costPerTimeUnit[(k - 2)]) < ((orderControl1) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 944, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k > 2) &&  ((costPerTimeUnit[(k - 2)]) < ((orderControl1) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 944, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k > 2) &&  ((costPerTimeUnit[(k - 2)]) < ((orderControl1) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(k > 2) && ( (this.costPerTimeUnit[(k - 2)]) == ((this.orderControl1) * (this.costPerTimeUnit[(k - 1[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 944, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k > 2) &&  ((costPerTimeUnit[(k - 2)]) < ((orderControl1) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(k > 2) && ( (this.costPerTimeUnit[(k - 2)]) != ((this.orderControl1) * (this.costPerTimeUnit[(k - 1[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 944, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k > 2) &&  ((costPerTimeUnit[(k - 2)]) < ((orderControl1) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(k > 2) && ( (this.costPerTimeUnit[(k - 2)]) >= ((this.orderControl1) * (this.costPerTimeUnit[(k - 1[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 944, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k > 2) &&  ((costPerTimeUnit[(k - 2)]) < ((orderControl1) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(k > 2) && ( (this.costPerTimeUnit[(k - 2)]) > ((this.orderControl1) * (this.costPerTimeUnit[(k - 1)[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 944, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k > 2) &&  ((costPerTimeUnit[(k - 2)]) < ((orderControl1) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(k > 2) && ( (this.costPerTimeUnit[(k - 2)]) <= ((this.orderControl1) * (this.costPerTimeUnit[(k - 1[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 944, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k > 2) &&  ((costPerTimeUnit[(k - 2)]) < ((orderControl1) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(k > 2) && (! ((this.costPerTimeUnit[(k - 2)]) < ((this.orderControl1) * (this.costPerTimeUnit[(k - [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 944, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k > 2) &&  ((costPerTimeUnit[(k - 2)]) < ((orderControl1) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(k > 2) ||  ((this.costPerTimeUnit[(k - 2)]) < ((this.orderControl1) * (this.costPerTimeUnit[(k - 1)[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 944, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k > 2) &&  ((costPerTimeUnit[(k - 2)]) < ((orderControl1) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 948, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[optimalIter])) ` -topatch--> `(this.costPerTimeUnit[k]) == ((this.orderControl2) * (this.costPerTimeUnit[optimalIter]))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 948, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[optimalIter])) ` -topatch--> `(this.costPerTimeUnit[k]) != ((this.orderControl2) * (this.costPerTimeUnit[optimalIter]))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 948, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[optimalIter])) ` -topatch--> `(this.costPerTimeUnit[k]) >= ((this.orderControl2) * (this.costPerTimeUnit[optimalIter]))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 948, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[optimalIter])) ` -topatch--> `(this.costPerTimeUnit[k]) > ((this.orderControl2) * (this.costPerTimeUnit[optimalIter]))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 948, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[optimalIter])) ` -topatch--> `(this.costPerTimeUnit[k]) <= ((this.orderControl2) * (this.costPerTimeUnit[optimalIter]))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 948, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[optimalIter])) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.random.RandomDataImpl line: 520, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(rand) == null ` -topatch--> `(this.rand) != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.random.RandomDataImpl line: 520, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(rand) == null ` -topatch--> `(this.rand) >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.random.RandomDataImpl line: 520, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(rand) == null ` -topatch--> `(this.rand) > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.random.RandomDataImpl line: 520, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(rand) == null ` -topatch--> `(this.rand) <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.random.RandomDataImpl line: 520, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(rand) == null ` -topatch--> `(this.rand) < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.random.RandomDataImpl line: 520, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(rand) == null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 751, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error > (ratio * ratio) ` -topatch--> `error == (ratio * ratio)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 751, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error > (ratio * ratio) ` -topatch--> `error != (ratio * ratio)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 751, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error > (ratio * ratio) ` -topatch--> `error >= (ratio * ratio)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 751, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error > (ratio * ratio) ` -topatch--> `error <= (ratio * ratio)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 751, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error > (ratio * ratio) ` -topatch--> `error < (ratio * ratio)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 751, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error > (ratio * ratio) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 864, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu >= 0 ` -topatch--> `mu == 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 864, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu >= 0 ` -topatch--> `mu != 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 864, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu >= 0 ` -topatch--> `mu > 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 864, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu >= 0 ` -topatch--> `mu <= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 864, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu >= 0 ` -topatch--> `mu < 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 864, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu >= 0 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 871, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtFieldReadImpl) `useInterpolationError ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 876, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `interpError > 10.0 ` -topatch--> `interpError == 10.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 876, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `interpError > 10.0 ` -topatch--> `interpError != 10.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 876, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `interpError > 10.0 ` -topatch--> `interpError >= 10.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 876, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `interpError > 10.0 ` -topatch--> `interpError <= 10.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 876, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `interpError > 10.0 ` -topatch--> `interpError < 10.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 876, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `interpError > 10.0 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 883, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `!reject ` -topatch--> `reject` (spoon.support.reflect.code.CtVariableReadImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 885, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `eventsHandlersManager.evaluateStep(interpolator) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 897, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `!reject ` -topatch--> `reject` (spoon.support.reflect.code.CtVariableReadImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 939, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)])) ` -topatch--> `(this.costPerTimeUnit[k]) == ((this.orderControl2) * (this.costPerTimeUnit[(k - 1)]))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 939, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)])) ` -topatch--> `(this.costPerTimeUnit[k]) != ((this.orderControl2) * (this.costPerTimeUnit[(k - 1)]))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 939, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)])) ` -topatch--> `(this.costPerTimeUnit[k]) >= ((this.orderControl2) * (this.costPerTimeUnit[(k - 1)]))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 939, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)])) ` -topatch--> `(this.costPerTimeUnit[k]) > ((this.orderControl2) * (this.costPerTimeUnit[(k - 1)]))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 939, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)])) ` -topatch--> `(this.costPerTimeUnit[k]) <= ((this.orderControl2) * (this.costPerTimeUnit[(k - 1)]))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 939, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)])) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((polynoms) == null) || ((polynoms.length) <= (mu + 4)) ` -topatch--> `((this.polynoms) == null) && ((this.polynoms.length) <= (mu + 4))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((polynoms) == null) || ((polynoms.length) <= (mu + 4)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((polynoms) == null) || ((polynoms.length) <= (mu + 4)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((polynoms) == null) || ((polynoms.length) <= (mu + 4)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((polynoms) == null) || ((polynoms.length) <= (mu + 4)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((polynoms) == null) || ((polynoms.length) <= (mu + 4)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((polynoms) == null) || ((polynoms.length) <= (mu + 4)) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((polynoms) == null) || ((polynoms.length) <= (mu + 4)) ` -topatch--> `((this.polynoms) == null) || ((this.polynoms.length) == (mu + 4))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((polynoms) == null) || ((polynoms.length) <= (mu + 4)) ` -topatch--> `((this.polynoms) == null) || ((this.polynoms.length) != (mu + 4))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((polynoms) == null) || ((polynoms.length) <= (mu + 4)) ` -topatch--> `((this.polynoms) == null) || ((this.polynoms.length) >= (mu + 4))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((polynoms) == null) || ((polynoms.length) <= (mu + 4)) ` -topatch--> `((this.polynoms) == null) || ((this.polynoms.length) > (mu + 4))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((polynoms) == null) || ((polynoms.length) <= (mu + 4)) ` -topatch--> `((this.polynoms) == null) || ((this.polynoms.length) < (mu + 4))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((polynoms) == null) || ((polynoms.length) <= (mu + 4)) ` -topatch--> `((this.polynoms) == null) || (!((this.polynoms.length) <= (mu + 4)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((polynoms) == null) || ((polynoms.length) <= (mu + 4)) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 259, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu < 0 ` -topatch--> `mu == 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 259, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu < 0 ` -topatch--> `mu != 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 259, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu < 0 ` -topatch--> `mu >= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 259, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu < 0 ` -topatch--> `mu > 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 259, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu < 0 ` -topatch--> `mu <= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 259, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu < 0 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 267, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu > 0 ` -topatch--> `mu == 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 267, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu > 0 ` -topatch--> `mu != 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 267, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu > 0 ` -topatch--> `mu >= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 267, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu > 0 ` -topatch--> `mu <= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 267, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu > 0 ` -topatch--> `mu < 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 267, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu > 0 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 271, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu > 1 ` -topatch--> `mu == 1` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 271, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu > 1 ` -topatch--> `mu != 1` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 271, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu > 1 ` -topatch--> `mu >= 1` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 271, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu > 1 ` -topatch--> `mu <= 1` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 271, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu > 1 ` -topatch--> `mu < 1` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 271, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu > 1 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu > 2 ` -topatch--> `mu == 2` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu > 2 ` -topatch--> `mu != 2` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu > 2 ` -topatch--> `mu >= 2` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu > 2 ` -topatch--> `mu <= 2` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu > 2 ` -topatch--> `mu < 2` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `mu > 2 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 299, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentDegree) >= 5 ` -topatch--> `(this.currentDegree) == 5` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 299, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentDegree) >= 5 ` -topatch--> `(this.currentDegree) != 5` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 299, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentDegree) >= 5 ` -topatch--> `(this.currentDegree) > 5` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 299, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentDegree) >= 5 ` -topatch--> `(this.currentDegree) <= 5` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 299, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentDegree) >= 5 ` -topatch--> `(this.currentDegree) < 5` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 299, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentDegree) >= 5 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 335, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentDegree) > 3 ` -topatch--> `(this.currentDegree) == 3` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 335, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentDegree) > 3 ` -topatch--> `(this.currentDegree) != 3` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 335, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentDegree) > 3 ` -topatch--> `(this.currentDegree) >= 3` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 335, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentDegree) > 3 ` -topatch--> `(this.currentDegree) <= 3` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 335, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentDegree) > 3 ` -topatch--> `(this.currentDegree) < 3` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 335, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(currentDegree) > 3 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 349, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(h) == 0 ` -topatch--> `(this.h) != 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 349, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(h) == 0 ` -topatch--> `(this.h) >= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 349, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(h) == 0 ` -topatch--> `(this.h) > 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 349, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(h) == 0 ` -topatch--> `(this.h) <= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 349, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(h) == 0 ` -topatch--> `(this.h) < 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 349, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(h) == 0 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 739, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) && (!previousRejected) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 739, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) && (!previousRejected) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 739, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) && (!previousRejected) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 739, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) && (!previousRejected) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 739, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) && (!previousRejected) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 739, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) && (!previousRejected) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 739, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) && (!previousRejected) ` -topatch--> `(targetIter > 1) && previousRejected` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 739, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) && (!previousRejected) ` -topatch--> `(targetIter > 1) || (!previousRejected)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 739, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(targetIter > 1) && (!previousRejected) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 742, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error <= 1.0 ` -topatch--> `error == 1.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 742, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error <= 1.0 ` -topatch--> `error != 1.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 742, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error <= 1.0 ` -topatch--> `error >= 1.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 742, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error <= 1.0 ` -topatch--> `error > 1.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 742, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error <= 1.0 ` -topatch--> `error < 1.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 742, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error <= 1.0 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 769, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error <= 1.0 ` -topatch--> `error == 1.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 769, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error <= 1.0 ` -topatch--> `error != 1.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 769, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error <= 1.0 ` -topatch--> `error >= 1.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 769, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error <= 1.0 ` -topatch--> `error > 1.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 769, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error <= 1.0 ` -topatch--> `error < 1.0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 769, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `error <= 1.0 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 806, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(firstTime || lastStep) && (error <= 1.0) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 806, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(firstTime || lastStep) && (error <= 1.0) ` -topatch--> `((!                                                                                                 [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 806, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(firstTime || lastStep) && (error <= 1.0) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 806, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(firstTime || lastStep) && (error <= 1.0) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 806, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(firstTime || lastStep) && (error <= 1.0) ` -topatch--> `(firstTime || lastStep) && (error == 1.0)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 806, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(firstTime || lastStep) && (error <= 1.0) ` -topatch--> `(firstTime || lastStep) && (error != 1.0)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 806, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(firstTime || lastStep) && (error <= 1.0) ` -topatch--> `(firstTime || lastStep) && (error >= 1.0)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 806, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(firstTime || lastStep) && (error <= 1.0) ` -topatch--> `(firstTime || lastStep) && (error > 1.0)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 806, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(firstTime || lastStep) && (error <= 1.0) ` -topatch--> `(firstTime || lastStep) && (error < 1.0)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 806, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(firstTime || lastStep) && (error <= 1.0) ` -topatch--> `(firstTime || lastStep) && (!(error <= 1.0))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 806, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(firstTime || lastStep) && (error <= 1.0) ` -topatch--> `(firstTime || lastStep) || (error <= 1.0)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 806, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(firstTime || lastStep) && (error <= 1.0) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 820, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(denseOutput) && (!reject) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 820, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(denseOutput) && (!reject) ` -topatch--> `(this.denseOutput) && reject` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 820, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(denseOutput) && (!reject) ` -topatch--> `(this.denseOutput) || (!reject)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 820, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(denseOutput) && (!reject) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 905, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `!reject ` -topatch--> `reject` (spoon.support.reflect.code.CtVariableReadImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 912, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtInvocationImpl) `eventsHandlersManager.stop() ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 923, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(eventsHandlersManager.reset(stepStart, y)) && (!lastStep) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 923, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(eventsHandlersManager.reset(stepStart, y)) && (!lastStep) ` -topatch--> `(this.eventsHandlersManager.reset(this.stepStart, y)) && lastStep` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 923, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(eventsHandlersManager.reset(stepStart, y)) && (!lastStep) ` -topatch--> `(this.eventsHandlersManager.reset(this.stepStart, y)) || (!lastStep)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 923, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(eventsHandlersManager.reset(stepStart, y)) && (!lastStep) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 930, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `k == 1 ` -topatch--> `k != 1` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 930, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `k == 1 ` -topatch--> `k >= 1` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 930, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `k == 1 ` -topatch--> `k > 1` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 930, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `k == 1 ` -topatch--> `k <= 1` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 930, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `k == 1 ` -topatch--> `k < 1` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 930, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `k == 1 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 935, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `k <= targetIter ` -topatch--> `k == targetIter` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 935, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `k <= targetIter ` -topatch--> `k != targetIter` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 935, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `k <= targetIter ` -topatch--> `k >= targetIter` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 935, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `k <= targetIter ` -topatch--> `k > targetIter` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 935, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `k <= targetIter ` -topatch--> `k < targetIter` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 935, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `k <= targetIter ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 937, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(costPerTimeUnit[(k - 1)]) < ((orderControl1) * (costPerTimeUnit[k])) ` -topatch--> `(this.costPerTimeUnit[(k - 1)]) == ((this.orderControl1) * (this.costPerTimeUnit[k]))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 937, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(costPerTimeUnit[(k - 1)]) < ((orderControl1) * (costPerTimeUnit[k])) ` -topatch--> `(this.costPerTimeUnit[(k - 1)]) != ((this.orderControl1) * (this.costPerTimeUnit[k]))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 937, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(costPerTimeUnit[(k - 1)]) < ((orderControl1) * (costPerTimeUnit[k])) ` -topatch--> `(this.costPerTimeUnit[(k - 1)]) >= ((this.orderControl1) * (this.costPerTimeUnit[k]))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 937, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(costPerTimeUnit[(k - 1)]) < ((orderControl1) * (costPerTimeUnit[k])) ` -topatch--> `(this.costPerTimeUnit[(k - 1)]) > ((this.orderControl1) * (this.costPerTimeUnit[k]))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 937, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(costPerTimeUnit[(k - 1)]) < ((orderControl1) * (costPerTimeUnit[k])) ` -topatch--> `(this.costPerTimeUnit[(k - 1)]) <= ((this.orderControl1) * (this.costPerTimeUnit[k]))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 937, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(costPerTimeUnit[(k - 1)]) < ((orderControl1) * (costPerTimeUnit[k])) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 953, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtVariableReadImpl) `previousRejected ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 960, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `optimalIter <= k ` -topatch--> `optimalIter == k` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 960, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `optimalIter <= k ` -topatch--> `optimalIter != k` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 960, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `optimalIter <= k ` -topatch--> `optimalIter >= k` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 960, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `optimalIter <= k ` -topatch--> `optimalIter > k` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 960, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `optimalIter <= k ` -topatch--> `optimalIter < k` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 960, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `optimalIter <= k ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 963, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k < targetIter) &&  ((costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 963, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k < targetIter) &&  ((costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 963, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k < targetIter) &&  ((costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 963, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k < targetIter) &&  ((costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 963, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k < targetIter) &&  ((costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 963, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k < targetIter) &&  ((costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 963, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k < targetIter) &&  ((costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(k < targetIter) && ( (this.costPerTimeUnit[k]) == ((this.orderControl2) * (this.costPerTimeUnit[(k [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 963, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k < targetIter) &&  ((costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(k < targetIter) && ( (this.costPerTimeUnit[k]) != ((this.orderControl2) * (this.costPerTimeUnit[(k [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 963, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k < targetIter) &&  ((costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(k < targetIter) && ( (this.costPerTimeUnit[k]) >= ((this.orderControl2) * (this.costPerTimeUnit[(k [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 963, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k < targetIter) &&  ((costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(k < targetIter) && ( (this.costPerTimeUnit[k]) > ((this.orderControl2) * (this.costPerTimeUnit[(k -[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 963, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k < targetIter) &&  ((costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(k < targetIter) && ( (this.costPerTimeUnit[k]) <= ((this.orderControl2) * (this.costPerTimeUnit[(k [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 963, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k < targetIter) &&  ((costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(k < targetIter) && (! ((this.costPerTimeUnit[k]) < ((this.orderControl2) * (this.costPerTimeUnit[(k[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 963, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k < targetIter) &&  ((costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `(k < targetIter) ||  ((this.costPerTimeUnit[k]) < ((this.orderControl2) * (this.costPerTimeUnit[(k -[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 963, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(k < targetIter) &&  ((costPerTimeUnit[k]) < ((orderControl2) * (costPerTimeUnit[(k - 1)]))) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 982, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `!forward ` -topatch--> `forward` (spoon.support.reflect.code.CtVariableReadImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 988, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtVariableReadImpl) `reject ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `maxDegree < 0 ` -topatch--> `maxDegree == 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `maxDegree < 0 ` -topatch--> `maxDegree != 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `maxDegree < 0 ` -topatch--> `maxDegree >= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `maxDegree < 0 ` -topatch--> `maxDegree > 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `maxDegree < 0 ` -topatch--> `maxDegree <= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 187, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `maxDegree < 0 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(polynoms) != null ` -topatch--> `(this.polynoms) == null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(polynoms) != null ` -topatch--> `(this.polynoms) >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(polynoms) != null ` -topatch--> `(this.polynoms) > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(polynoms) != null ` -topatch--> `(this.polynoms) <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(polynoms) != null ` -topatch--> `(this.polynoms) < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 194, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(polynoms) != null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 207, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `maxDegree <= 4 ` -topatch--> `maxDegree == 4` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 207, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `maxDegree <= 4 ` -topatch--> `maxDegree != 4` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 207, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `maxDegree <= 4 ` -topatch--> `maxDegree >= 4` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 207, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `maxDegree <= 4 ` -topatch--> `maxDegree > 4` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 207, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `maxDegree <= 4 ` -topatch--> `maxDegree < 4` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator line: 207, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `maxDegree <= 4 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 435, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vecAbsoluteTolerance) == null ` -topatch--> `(this.vecAbsoluteTolerance) != null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 435, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vecAbsoluteTolerance) == null ` -topatch--> `(this.vecAbsoluteTolerance) >= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 435, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vecAbsoluteTolerance) == null ` -topatch--> `(this.vecAbsoluteTolerance) > null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 435, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vecAbsoluteTolerance) == null ` -topatch--> `(this.vecAbsoluteTolerance) <= null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 435, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vecAbsoluteTolerance) == null ` -topatch--> `(this.vecAbsoluteTolerance) < null` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 435, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(vecAbsoluteTolerance) == null ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 486, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(2 * j) == n ` -topatch--> `(2 * j) != n` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 486, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(2 * j) == n ` -topatch--> `(2 * j) >= n` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 486, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(2 * j) == n ` -topatch--> `(2 * j) > n` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 486, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(2 * j) == n ` -topatch--> `(2 * j) <= n` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 486, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(2 * j) == n ` -topatch--> `(2 * j) < n` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 486, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(2 * j) == n ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 501, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((performTest) && (j <= (maxChecks))) && (k < (maxIter)) ` -topatch--> `((!                                                                                                 [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 501, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((performTest) && (j <= (maxChecks))) && (k < (maxIter)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 501, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((performTest) && (j <= (maxChecks))) && (k < (maxIter)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 501, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((performTest) && (j <= (maxChecks))) && (k < (maxIter)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 501, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((performTest) && (j <= (maxChecks))) && (k < (maxIter)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 501, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((performTest) && (j <= (maxChecks))) && (k < (maxIter)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 501, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((performTest) && (j <= (maxChecks))) && (k < (maxIter)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 501, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((performTest) && (j <= (maxChecks))) && (k < (maxIter)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 501, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((performTest) && (j <= (maxChecks))) && (k < (maxIter)) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 501, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((performTest) && (j <= (maxChecks))) && (k < (maxIter)) ` -topatch--> `((this.performTest) && (j <= (this.maxChecks))) && (k == (this.maxIter))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 501, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((performTest) && (j <= (maxChecks))) && (k < (maxIter)) ` -topatch--> `((this.performTest) && (j <= (this.maxChecks))) && (k != (this.maxIter))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 501, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((performTest) && (j <= (maxChecks))) && (k < (maxIter)) ` -topatch--> `((this.performTest) && (j <= (this.maxChecks))) && (k >= (this.maxIter))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 501, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((performTest) && (j <= (maxChecks))) && (k < (maxIter)) ` -topatch--> `((this.performTest) && (j <= (this.maxChecks))) && (k > (this.maxIter))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 501, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((performTest) && (j <= (maxChecks))) && (k < (maxIter)) ` -topatch--> `((this.performTest) && (j <= (this.maxChecks))) && (k <= (this.maxIter))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 501, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((performTest) && (j <= (maxChecks))) && (k < (maxIter)) ` -topatch--> `((this.performTest) && (j <= (this.maxChecks))) && (!(k < (this.maxIter)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 501, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((performTest) && (j <= (maxChecks))) && (k < (maxIter)) ` -topatch--> `((this.performTest) && (j <= (this.maxChecks))) || (k < (this.maxIter))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 501, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((performTest) && (j <= (maxChecks))) && (k < (maxIter)) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 512, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `deltaNorm > (4 * (java.lang.Math.max(1.0E-15, initialNorm))) ` -topatch--> `deltaNorm == (4 * (java.lang.Math.max(1.0E-15, initialNorm)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 512, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `deltaNorm > (4 * (java.lang.Math.max(1.0E-15, initialNorm))) ` -topatch--> `deltaNorm != (4 * (java.lang.Math.max(1.0E-15, initialNorm)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 512, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `deltaNorm > (4 * (java.lang.Math.max(1.0E-15, initialNorm))) ` -topatch--> `deltaNorm >= (4 * (java.lang.Math.max(1.0E-15, initialNorm)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 512, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `deltaNorm > (4 * (java.lang.Math.max(1.0E-15, initialNorm))) ` -topatch--> `deltaNorm <= (4 * (java.lang.Math.max(1.0E-15, initialNorm)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 512, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `deltaNorm > (4 * (java.lang.Math.max(1.0E-15, initialNorm))) ` -topatch--> `deltaNorm < (4 * (java.lang.Math.max(1.0E-15, initialNorm)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 512, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `deltaNorm > (4 * (java.lang.Math.max(1.0E-15, initialNorm))) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 592, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `y != y0 ` -topatch--> `y == y0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 592, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `y != y0 ` -topatch--> `y >= y0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 592, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `y != y0 ` -topatch--> `y > y0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 592, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `y != y0 ` -topatch--> `y <= y0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 592, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `y != y0 ` -topatch--> `y < y0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 592, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `y != y0 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 598, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtFieldReadImpl) `denseOutput ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 622, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(denseOutput) || (!(eventsHandlersManager.isEmpty())) ` -topatch--> `(this.denseOutput) && (!(this.eventsHandlersManager.isEmpty()))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 622, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(denseOutput) || (!(eventsHandlersManager.isEmpty())) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 622, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(denseOutput) || (!(eventsHandlersManager.isEmpty())) ` -topatch--> `(this.denseOutput) || (this.eventsHandlersManager.isEmpty())` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 622, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(denseOutput) || (!(eventsHandlersManager.isEmpty())) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 648, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtVariableReadImpl) `newStep ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 653, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `!firstStepAlreadyComputed ` -topatch--> `firstStepAlreadyComputed` (spoon.support.reflect.code.CtVariableReadImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 657, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtVariableReadImpl) `firstTime ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 663, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `!forward ` -topatch--> `forward` (spoon.support.reflect.code.CtVariableReadImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `(forward && (((this.stepStart) + (this.stepSize)) > t)) &&  ((!forward) && (((this.stepStart) + (thi[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `((!                                                                                                 [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `(forward && (((this.stepStart) + (this.stepSize)) > t)) || ( forward && (((this.stepStart) + (this.s[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `(forward && (((this.stepStart) + (this.stepSize)) > t)) || ( (!forward) && (((this.stepStart) + (thi[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `(forward && (((this.stepStart) + (this.stepSize)) > t)) || ( (!forward) && (((this.stepStart) + (thi[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `(forward && (((this.stepStart) + (this.stepSize)) > t)) || ( (!forward) && (((this.stepStart) + (thi[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `(forward && (((this.stepStart) + (this.stepSize)) > t)) || ( (!forward) && (((this.stepStart) + (thi[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `(forward && (((this.stepStart) + (this.stepSize)) > t)) || ( (!forward) && (((this.stepStart) + (thi[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `(forward && (((this.stepStart) + (this.stepSize)) > t)) || ( (!forward) && (!(((this.stepStart) + (t[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `(forward && (((this.stepStart) + (this.stepSize)) > t)) || ( (!forward) || (((this.stepStart) + (thi[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `(forward && (((this.stepStart) + (this.stepSize)) > t)) || (! ((!forward) && (((this.stepStart) + (t[...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 676, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(forward && (((stepStart) + (stepSize)) > t)) ||  ((!forward) && (((stepStart) + (stepSize)) < t)) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 690, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `!(tryStep(stepStart, y, stepSize, k, scale, fk[k],  (k == 0 ? yMidDots[0] : diagonal[(k - 1)]),  (k [...] ` -topatch--> `tryStep(this.stepStart, y, this.stepSize, k, scale, fk[k],  (k == 0 ? yMidDots[0] : diagonal[(k - 1)[...]` (spoon.support.reflect.code.CtInvocationImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 703, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `k > 0 ` -topatch--> `k == 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 703, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `k > 0 ` -topatch--> `k != 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 703, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `k > 0 ` -topatch--> `k >= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 703, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `k > 0 ` -topatch--> `k <= 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 703, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `k > 0 ` -topatch--> `k < 0` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 703, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `k > 0 ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(error > 1.0E15) && ((k > 1) && (error > maxError))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(error > 1.0E15) || ((k == 1) && (error > maxError))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(error > 1.0E15) || ((k != 1) && (error > maxError))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(error > 1.0E15) || ((k >= 1) && (error > maxError))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(error > 1.0E15) || ((k <= 1) && (error > maxError))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(error > 1.0E15) || ((k < 1) && (error > maxError))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(error > 1.0E15) || ((!(k > 1)) && (error > maxError))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(error > 1.0E15) || ((k > 1) && (error == maxError))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(error > 1.0E15) || ((k > 1) && (error != maxError))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(error > 1.0E15) || ((k > 1) && (error >= maxError))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(error > 1.0E15) || ((k > 1) && (error <= maxError))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(error > 1.0E15) || ((k > 1) && (error < maxError))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(error > 1.0E15) || ((k > 1) && (!(error > maxError)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(error > 1.0E15) || ((k > 1) || (error > maxError))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `(error > 1.0E15) || (!((k > 1) && (error > maxError)))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 718, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(error > 1.0E15) || ((k > 1) && (error > maxError)) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor > 0.9999) ` -topatch--> `(stepsizeReductionFactor < 1.0E-4) && (stepsizeReductionFactor > 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor > 0.9999) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor > 0.9999) ` -topatch--> `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor == 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor > 0.9999) ` -topatch--> `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor != 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor > 0.9999) ` -topatch--> `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor >= 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor > 0.9999) ` -topatch--> `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor <= 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor > 0.9999) ` -topatch--> `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor < 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor > 0.9999) ` -topatch--> `(stepsizeReductionFactor < 1.0E-4) || (!(stepsizeReductionFactor > 0.9999))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(stepsizeReductionFactor < 1.0E-4) || (stepsizeReductionFactor > 0.9999) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 263, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(control1 < 1.0E-4) && (control1 > 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 263, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 263, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 263, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 263, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 263, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 263, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 263, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(control1 < 1.0E-4) || (control1 == 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 263, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(control1 < 1.0E-4) || (control1 != 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 263, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(control1 < 1.0E-4) || (control1 >= 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 263, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(control1 < 1.0E-4) || (control1 <= 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 263, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(control1 < 1.0E-4) || (control1 < 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 263, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(control1 < 1.0E-4) || (!(control1 > 0.9999))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 263, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 269, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(control2 < 1.0E-4) && (control2 > 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 269, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 269, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 269, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 269, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 269, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 269, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 269, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(control2 < 1.0E-4) || (control2 == 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 269, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(control2 < 1.0E-4) || (control2 != 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 269, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(control2 < 1.0E-4) || (control2 >= 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 269, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(control2 < 1.0E-4) || (control2 <= 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 269, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(control2 < 1.0E-4) || (control2 < 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 269, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(control2 < 1.0E-4) || (!(control2 > 0.9999))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 269, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control3 < 1.0E-4) || (control3 > 0.9999) ` -topatch--> `(control3 < 1.0E-4) && (control3 > 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control3 < 1.0E-4) || (control3 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control3 < 1.0E-4) || (control3 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control3 < 1.0E-4) || (control3 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control3 < 1.0E-4) || (control3 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control3 < 1.0E-4) || (control3 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control3 < 1.0E-4) || (control3 > 0.9999) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control3 < 1.0E-4) || (control3 > 0.9999) ` -topatch--> `(control3 < 1.0E-4) || (control3 == 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control3 < 1.0E-4) || (control3 > 0.9999) ` -topatch--> `(control3 < 1.0E-4) || (control3 != 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control3 < 1.0E-4) || (control3 > 0.9999) ` -topatch--> `(control3 < 1.0E-4) || (control3 >= 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control3 < 1.0E-4) || (control3 > 0.9999) ` -topatch--> `(control3 < 1.0E-4) || (control3 <= 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control3 < 1.0E-4) || (control3 > 0.9999) ` -topatch--> `(control3 < 1.0E-4) || (control3 < 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control3 < 1.0E-4) || (control3 > 0.9999) ` -topatch--> `(control3 < 1.0E-4) || (!(control3 > 0.9999))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control3 < 1.0E-4) || (control3 > 0.9999) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control4 < 1.0001) || (control4 > 999.9) ` -topatch--> `(control4 < 1.0001) && (control4 > 999.9)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control4 < 1.0001) || (control4 > 999.9) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control4 < 1.0001) || (control4 > 999.9) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control4 < 1.0001) || (control4 > 999.9) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control4 < 1.0001) || (control4 > 999.9) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control4 < 1.0001) || (control4 > 999.9) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control4 < 1.0001) || (control4 > 999.9) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control4 < 1.0001) || (control4 > 999.9) ` -topatch--> `(control4 < 1.0001) || (control4 == 999.9)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control4 < 1.0001) || (control4 > 999.9) ` -topatch--> `(control4 < 1.0001) || (control4 != 999.9)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control4 < 1.0001) || (control4 > 999.9) ` -topatch--> `(control4 < 1.0001) || (control4 >= 999.9)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control4 < 1.0001) || (control4 > 999.9) ` -topatch--> `(control4 < 1.0001) || (control4 <= 999.9)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control4 < 1.0001) || (control4 > 999.9) ` -topatch--> `(control4 < 1.0001) || (control4 < 999.9)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control4 < 1.0001) || (control4 > 999.9) ` -topatch--> `(control4 < 1.0001) || (!(control4 > 999.9))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control4 < 1.0001) || (control4 > 999.9) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 315, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(maximalOrder <= 6) || ((maximalOrder % 2) != 0) ` -topatch--> `(maximalOrder <= 6) && ((maximalOrder % 2) != 0)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 315, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(maximalOrder <= 6) || ((maximalOrder % 2) != 0) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 315, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(maximalOrder <= 6) || ((maximalOrder % 2) != 0) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 315, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(maximalOrder <= 6) || ((maximalOrder % 2) != 0) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 315, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(maximalOrder <= 6) || ((maximalOrder % 2) != 0) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 315, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(maximalOrder <= 6) || ((maximalOrder % 2) != 0) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 315, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(maximalOrder <= 6) || ((maximalOrder % 2) != 0) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 315, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(maximalOrder <= 6) || ((maximalOrder % 2) != 0) ` -topatch--> `(maximalOrder <= 6) || ((maximalOrder % 2) == 0)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 315, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(maximalOrder <= 6) || ((maximalOrder % 2) != 0) ` -topatch--> `(maximalOrder <= 6) || ((maximalOrder % 2) >= 0)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 315, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(maximalOrder <= 6) || ((maximalOrder % 2) != 0) ` -topatch--> `(maximalOrder <= 6) || ((maximalOrder % 2) > 0)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 315, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(maximalOrder <= 6) || ((maximalOrder % 2) != 0) ` -topatch--> `(maximalOrder <= 6) || ((maximalOrder % 2) <= 0)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 315, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(maximalOrder <= 6) || ((maximalOrder % 2) != 0) ` -topatch--> `(maximalOrder <= 6) || ((maximalOrder % 2) < 0)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 315, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(maximalOrder <= 6) || ((maximalOrder % 2) != 0) ` -topatch--> `(maximalOrder <= 6) || (!((maximalOrder % 2) != 0))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 315, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(maximalOrder <= 6) || ((maximalOrder % 2) != 0) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 319, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(control1 < 1.0E-4) && (control1 > 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 319, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 319, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 319, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 319, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 319, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 319, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 319, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(control1 < 1.0E-4) || (control1 == 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 319, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(control1 < 1.0E-4) || (control1 != 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 319, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(control1 < 1.0E-4) || (control1 >= 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 319, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(control1 < 1.0E-4) || (control1 <= 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 319, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(control1 < 1.0E-4) || (control1 < 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 319, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `(control1 < 1.0E-4) || (!(control1 > 0.9999))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 319, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control1 < 1.0E-4) || (control1 > 0.9999) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(control2 < 1.0E-4) && (control2 > 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(control2 < 1.0E-4) || (control2 == 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(control2 < 1.0E-4) || (control2 != 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(control2 < 1.0E-4) || (control2 >= 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(control2 < 1.0E-4) || (control2 <= 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(control2 < 1.0E-4) || (control2 < 0.9999)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `(control2 < 1.0E-4) || (!(control2 > 0.9999))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(control2 < 1.0E-4) || (control2 > 0.9999) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 367, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((sequence) == null) || ((sequence.length) != size) ` -topatch--> `((this.sequence) == null) && ((this.sequence.length) != size)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 367, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((sequence) == null) || ((sequence.length) != size) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 367, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((sequence) == null) || ((sequence.length) != size) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 367, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((sequence) == null) || ((sequence.length) != size) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 367, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((sequence) == null) || ((sequence.length) != size) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 367, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((sequence) == null) || ((sequence.length) != size) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 367, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((sequence) == null) || ((sequence.length) != size) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 367, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((sequence) == null) || ((sequence.length) != size) ` -topatch--> `((this.sequence) == null) || ((this.sequence.length) == size)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 367, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((sequence) == null) || ((sequence.length) != size) ` -topatch--> `((this.sequence) == null) || ((this.sequence.length) >= size)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 367, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((sequence) == null) || ((sequence.length) != size) ` -topatch--> `((this.sequence) == null) || ((this.sequence.length) > size)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 367, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((sequence) == null) || ((sequence.length) != size) ` -topatch--> `((this.sequence) == null) || ((this.sequence.length) <= size)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 367, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((sequence) == null) || ((sequence.length) != size) ` -topatch--> `((this.sequence) == null) || ((this.sequence.length) < size)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 367, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((sequence) == null) || ((sequence.length) != size) ` -topatch--> `((this.sequence) == null) || (!((this.sequence.length) != size))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 367, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `((sequence) == null) || ((sequence.length) != size) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 376, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtFieldReadImpl) `denseOutput ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 421, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(mudifControlParameter <= 0) || (mudifControlParameter >= 7) ` -topatch--> `(mudifControlParameter <= 0) && (mudifControlParameter >= 7)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 421, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(mudifControlParameter <= 0) || (mudifControlParameter >= 7) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 421, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(mudifControlParameter <= 0) || (mudifControlParameter >= 7) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 421, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(mudifControlParameter <= 0) || (mudifControlParameter >= 7) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 421, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(mudifControlParameter <= 0) || (mudifControlParameter >= 7) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 421, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(mudifControlParameter <= 0) || (mudifControlParameter >= 7) ` -topatch--> `(                                                                                                   [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 421, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(mudifControlParameter <= 0) || (mudifControlParameter >= 7) ` -topatch--> `(!                                                                                                  [...]` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 421, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(mudifControlParameter <= 0) || (mudifControlParameter >= 7) ` -topatch--> `(mudifControlParameter <= 0) || (mudifControlParameter == 7)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 421, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(mudifControlParameter <= 0) || (mudifControlParameter >= 7) ` -topatch--> `(mudifControlParameter <= 0) || (mudifControlParameter != 7)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 421, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(mudifControlParameter <= 0) || (mudifControlParameter >= 7) ` -topatch--> `(mudifControlParameter <= 0) || (mudifControlParameter > 7)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 421, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(mudifControlParameter <= 0) || (mudifControlParameter >= 7) ` -topatch--> `(mudifControlParameter <= 0) || (mudifControlParameter <= 7)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 421, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(mudifControlParameter <= 0) || (mudifControlParameter >= 7) ` -topatch--> `(mudifControlParameter <= 0) || (mudifControlParameter < 7)` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 421, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(mudifControlParameter <= 0) || (mudifControlParameter >= 7) ` -topatch--> `(mudifControlParameter <= 0) || (!(mudifControlParameter >= 7))` (spoon.support.reflect.code.CtBinaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator line: 421, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtBinaryOperatorImpl) `(mudifControlParameter <= 0) || (mudifControlParameter >= 7) ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.commons.math.ode.sampling.AbstractStepInterpolator line: 287, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
IfExpresionMutOp:(spoon.support.reflect.code.CtFieldReadImpl) `dirtyState ` -topatch--> `!                                                                                                   [...]` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:168) - Time Repair Loop (s): 1562.379
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:170) - generationsexecuted: 1
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:234) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:184) - 
 --SOLUTIONS DESCRIPTION--


Astor Output:

General stats:
EXECUTION_IDENTIFIER=Commons-Math-0596e314
TOTAL_TIME=1562.379
NR_GENERATIONS=null
NR_RIGHT_COMPILATIONS=461
NR_FAILLING_COMPILATIONS=24
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=EXHAUSTIVE_NAVIGATED

Patch stats:

[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:103) - Storing ing JSON at /tmp/jMutRepair_Bug_dot_jar_Commons-Math_0596e314/./output_astor/AstorMain-Commons-Math-0596e314//astor_output.json
[INFO ] fr.inria.astor.core.output.PatchJSONStandarOutput.produceOutput(PatchJSONStandarOutput.java:104) - astor_output:
{"general":{"NR_RIGHT_COMPILATIONS":461,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"Commons-Math-0596e314","OUTPUT_STATUS":"EXHAUSTIVE_NAVIGATED","NR_FAILLING_COMPILATIONS":24,"NR_GENERATIONS":null,"TOTAL_TIME":1562.379,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[]}
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:200) - Time Total(s): 1605.346
2334.40user 38.73system 26:46.43elapsed 147%CPU (0avgtext+0avgdata 1625956maxresident)k
89232inputs+95208outputs (30major+12417001minor)pagefaults 0swaps


Node: graphene-45.nancy.grid5000.fr



Date: Tue Feb  5 02:46:05 EST 2019

