cd /tmp/NPEFix_Bug_dot_jar_Commons-Math_fc409e88;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4048m -cp /home/tdurieux/defects4j4repair/script/../repair_tools/npefix.jar fr.inria.spirals.npefix.main.run.Main \
    --test org.apache.commons.math.util.MathUtilsTest \
    --iteration 100 \
	--complianceLevel 7 \
	--workingdirectory . \
	--source src/main/java \
	--classpath target/classes:target/test-classes:/home/tdurieux/.m2/repository/junit/junit/4.8.2/junit-4.8.2.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
TernarySplitter  in 289ms
throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, (x == null ? 0 : x.length), (y == null ? 0 : y.length))
throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, (x == null ? 0 : x.length), (y == null ? 0 : y.length))
this.point = (point == null) ? null : point.clone()
this.value = (value == null) ? null : value.clone()
this(prototypeStatistics, (prototypeStatistics == null ? null : new SummaryStatistics(prototypeStatistics)))
return !((x == null) ^ (y == null))
return !((x == null) ^ (y == null))
return !((x == null) ^ (y == null))
return !((x == null) ^ (y == null))
return !((x == null) ^ (y == null))
return !((x == null) ^ (y == null))
return !((x == null) ^ (y == null))
return !((x == null) ^ (y == null))
this.arguments = new Object[]{ rootCause == null ? "" : rootCause.getMessage() }
this.point = (point == null) ? null : point.clone()
return ((key) == null ? (oP.getKey()) == null : key.equals(oP.getKey())) && ((value) == null ? (oP.getValue()) == null : value.equals(oP.getValue()))
return ((key) == null ? (oP.getKey()) == null : key.equals(oP.getKey())) && ((value) == null ? (oP.getValue()) == null : value.equals(oP.getValue()))
return ((key) == null ? (oP.getKey()) == null : key.equals(oP.getKey())) && ((value) == null ? (oP.getValue()) == null : value.equals(oP.getValue()))
return ((key) == null ? (oP.getKey()) == null : key.equals(oP.getKey())) && ((value) == null ? (oP.getValue()) == null : value.equals(oP.getValue()))
return ((key) == null ? 0 : key.hashCode()) ^ ((value) == null ? 0 : value.hashCode())
return ((key) == null ? 0 : key.hashCode()) ^ ((value) == null ? 0 : value.hashCode())
this.arguments = new Object[]{ rootCause == null ? "" : rootCause.getMessage() }
CheckNotNull  in 914ms
ForceNullInit in 301ms
AddImplicitCastChecker --> 4 in 509ms
BeforeDeref --> 9057 (failed:0) in 2088ms
target--> 12087 (failed:0) in 3731ms
TryRegister # Try: 93 in 421ms
Assign --> 6316 (failed: 0) in 3254ms
VarInit --> 4340 in 1398ms
MethodEncapsulation # Method: 3927 in 3278ms
ConstructorEncapsulation # Constructor: 775 in 1416ms
VariableFor in 718ms
RMI Selector (Host: 127.0.0.1, Port: 10000): KO
org.apache.commons.math.util.MathUtilsTest#testAddAndCheckLong
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testEqualsIncludingNaNWithAllowedDelta
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#test0Choose0
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testAddAndCheck
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficient
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientLarge
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientFail
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testCompareToEpsilon
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testCompareToMaxUlps
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testCosh
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testCoshNaN
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testEqualsIncludingNaN
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedDelta
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testMath475
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testFloatEqualsWithAllowedUlps
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedUlps
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testArrayEquals
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testArrayEqualsIncludingNaN
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testFactorial
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testFactorialFail
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testGcd
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testGcdLong
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testGcdConsistency
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testHash
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testArrayHash
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testPermutedArrayHash
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testIndicatorByte
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testIndicatorDouble
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testIndicatorFloat
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testIndicatorInt
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testIndicatorLong
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testIndicatorShort
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testLcm
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testLcmLong
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testLog
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testMulAndCheck
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testMulAndCheckLong
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testNormalizeArray
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testRoundDouble
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testRoundFloat
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testSignByte
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testSignDouble
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testSignFloat
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testSignInt
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testSignLong
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testSignShort
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testSinh
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testSinhNaN
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testSubAndCheck
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testSubAndCheckErrorMessage
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testSubAndCheckLong
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testPow
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testL1DistanceDouble
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testL1DistanceInt
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testL2DistanceDouble
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testL2DistanceInt
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testLInfDistanceDouble
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testLInfDistanceInt
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testCheckOrder
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testCheckFinite
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testSortInPlace
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testCopyOfInt
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testCopyOfInt2
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testCopyOfInt3
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testCopyOfDouble
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testCopyOfDouble2
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testCopyOfDouble3
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testCheckNotNull1
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testCheckNotNull2
<No Strat> Status: Ok
org.apache.commons.math.util.MathUtilsTest#testEqualsIncludingNaNWithAllowedUlps
<No Strat> Status: Ok
Multirun 71/100 71%
695.26user 2.41system 9:38.69elapsed 120%CPU (0avgtext+0avgdata 1935816maxresident)k
20448inputs+35736outputs (1major+536161minor)pagefaults 0swaps


Node: petitprince-14.luxembourg.grid5000.fr



Date: Sat Dec 29 19:47:04 EST 2018

