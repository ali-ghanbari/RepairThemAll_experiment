{
  "repair_end": "2018-12-30 18:45:36.844569", 
  "repair_begin": "2018-12-30 18:20:16.856532", 
  "patches": [
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_146/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:40.164082789 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +293,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n@@ -323,10 +312,7 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n+        final double[] quat = new double[4];\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Replace", 
          "seed": "final double[] quat=new double[4];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_1/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:27.539348787 -0500\n@@ -264,7 +264,8 @@\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        setSize(getSize() / 3.0);\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n@@ -301,7 +302,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:19:26.658809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_64/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:42:59.171664468 -0500\n@@ -491,7 +491,8 @@\n      */\n     @Override\n     public boolean sameOrientationAs(final Hyperplane<Euclidean3D> other) {\n-        return (((Plane) other).w).dotProduct(w) > 0.0;\n+        double x = u.getX();\n+\t\treturn (((Plane) other).w).dotProduct(w) > 0.0;\n     }\n \n }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_64/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:59.171664468 -0500\n@@ -268,7 +268,15 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -298,15 +306,11 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            final double[] quat = new double[4];\n         }\n \n-        // search in the far branch\n+        final double[] quat = new double[4];\n+\t\t// search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 494, 
          "faulty": "return (((Plane)other).w).dotProduct(w) > 0.0;", 
          "type": "InsertBefore", 
          "seed": "double x=u.getX();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final double[] quat=new double[4];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "InsertBefore", 
          "seed": "final double[] quat=new double[4];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_366/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:23.153193335 -0500\n@@ -291,21 +291,6 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +308,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "far=plus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "InsertBefore", 
          "seed": "final Vector3D direction=line.getDirection();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "return 642;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "final double[][] cHessian=new double[3][3];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_339/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:09.325040057 -0500\n@@ -281,31 +281,12 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n-\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +304,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_J);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "double[][] o=new double[3][3];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_174/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:48.828173147 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +293,12 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n         }\n \n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n         }\n \n         // search in the far branch\n@@ -325,11 +320,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n         }\n         return null;\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(1,0,0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_250/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:29.288603090 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +314,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_K);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_148/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:40.812089524 -0500\n@@ -245,7 +245,8 @@\n      * sub-hyperplaned\n      */\n     public SubHyperplane<Euclidean3D> firstIntersection(final Vector3D point, final Line line) {\n-        return recurseFirstIntersection(getTree(true), point, line);\n+        final double[][] hj = new double[3][3];\n+\t\treturn recurseFirstIntersection(getTree(true), point, line);\n     }\n \n     /** Get the first sub-hyperplane crossed by a semi-infinite line.\n@@ -268,7 +269,9 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -295,17 +298,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +317,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 642;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "return line;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 248, 
          "faulty": "return recurseFirstIntersection(getTree(true),point,line);", 
          "type": "InsertBefore", 
          "seed": "final double[][] hj=new double[3][3];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_K);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_195/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:00.920300301 -0500\n@@ -298,12 +298,6 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n@@ -325,7 +319,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "return new BSPTree<Euclidean3D>(Boolean.FALSE);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_387/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:32.985302994 -0500\n@@ -291,20 +291,7 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n \n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n@@ -323,10 +310,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "far=plus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "InsertBefore", 
          "seed": "final Vector3D direction=line.getDirection();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "return 642;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Replace", 
          "seed": "Vector3D v2=applyInverseTo(Vector3D.PLUS_J);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_134/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:35.228031599 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -295,17 +296,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -327,10 +317,6 @@\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n-        }\n         return null;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Delete", 
          "seed": "return 3;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_140/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:37.128051278 -0500\n@@ -268,9 +268,11 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        double fn = 0;\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -292,18 +294,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "double fn=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_304/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:51.696846359 -0500\n@@ -291,21 +291,6 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,11 +308,8 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n-        if ((attribute.getPlusInside() != null) &&\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tif ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "return new EnclosingBall<Euclidean3D,Vector3D>(Vector3D.ZERO,Double.NEGATIVE_INFINITY);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "final FieldVector3D<T> v1=applyTo(vector(1,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Replace", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_228/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:18.852490998 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +314,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_116/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:27.323950079 -0500\n@@ -245,7 +245,9 @@\n      * sub-hyperplaned\n      */\n     public SubHyperplane<Euclidean3D> firstIntersection(final Vector3D point, final Line line) {\n-        return recurseFirstIntersection(getTree(true), point, line);\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\treturn recurseFirstIntersection(getTree(true), point, line);\n     }\n \n     /** Get the first sub-hyperplane crossed by a semi-infinite line.\n@@ -268,7 +270,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +295,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 248, 
          "faulty": "return recurseFirstIntersection(getTree(true),point,line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_288/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:44.672769737 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "near=minus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return Vector3DFormat.getInstance().format(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_J);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "far=plus;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_13/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:33.867414599 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(far,point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Replace", 
          "seed": "final FieldVector3D<T> v1=applyTo(vector(1,0,0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_317/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:58.908925368 -0500\n@@ -281,31 +281,12 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n-\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +306,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_J);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "double[][] o=new double[3][3];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_154/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:42.484106922 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -295,17 +296,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,14 +313,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n-        }\n         return null;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Delete", 
          "seed": "return 3;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "return new Plane(this);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_262/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:33.456648078 -0500\n@@ -291,21 +291,6 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +310,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_K);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "return new EnclosingBall<Euclidean3D,Vector3D>(Vector3D.ZERO,Double.NEGATIVE_INFINITY);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_132/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:34.664025764 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +293,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n@@ -325,7 +314,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 642;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "return line;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_162/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:45.144134648 -0500\n@@ -245,7 +245,8 @@\n      * sub-hyperplaned\n      */\n     public SubHyperplane<Euclidean3D> firstIntersection(final Vector3D point, final Line line) {\n-        return recurseFirstIntersection(getTree(true), point, line);\n+        final double[][] hj = new double[3][3];\n+\t\treturn recurseFirstIntersection(getTree(true), point, line);\n     }\n \n     /** Get the first sub-hyperplane crossed by a semi-infinite line.\n@@ -268,7 +269,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +294,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 248, 
          "faulty": "return recurseFirstIntersection(getTree(true),point,line);", 
          "type": "InsertBefore", 
          "seed": "final double[][] hj=new double[3][3];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_K);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_170/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:47.524159507 -0500\n@@ -260,7 +260,8 @@\n                                                                 final Vector3D point,\n                                                                 final Line line) {\n \n-        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+        double fn = 0;\n+\t\tfinal SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n             return null;\n         }\n@@ -268,7 +269,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -295,17 +297,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -327,10 +318,6 @@\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n-        }\n         return null;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Delete", 
          "seed": "return 3;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Delete", 
          "seed": "return 3;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "InsertBefore", 
          "seed": "double fn=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_235/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:21.820522796 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_24/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:39.999474517 -0500\n@@ -281,31 +281,12 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n-\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(far,point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final SubHyperplane<Euclidean3D> crossed=recurseFirstIntersection(near,point,line);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_272/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:37.436691150 -0500\n@@ -291,21 +291,6 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +310,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "return new EnclosingBall<Euclidean3D,Vector3D>(Vector3D.ZERO,Double.NEGATIVE_INFINITY);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_K);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_345/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:11.561064765 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +312,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_32/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:44.291516703 -0500\n@@ -292,6 +292,9 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n+\t\t\treturn crossed;\n+\t\t}\n+\t\tif (crossed != null) {\n             return crossed;\n         }\n \n@@ -325,7 +328,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "return LazyHolder.INSTANCE;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "InsertBefore", 
          "seed": "if (crossed != null) {\n  return crossed;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:19:26.658809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_49/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:42:51.023583266 -0500\n@@ -491,7 +491,8 @@\n      */\n     @Override\n     public boolean sameOrientationAs(final Hyperplane<Euclidean3D> other) {\n-        return (((Plane) other).w).dotProduct(w) > 0.0;\n+        double x = u.getX();\n+\t\treturn (((Plane) other).w).dotProduct(w) > 0.0;\n     }\n \n }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_49/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:51.027583306 -0500\n@@ -268,7 +268,15 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -298,12 +306,7 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            final double[] quat = new double[4];\n         }\n \n         // search in the far branch\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 494, 
          "faulty": "return (((Plane)other).w).dotProduct(w) > 0.0;", 
          "type": "InsertBefore", 
          "seed": "double x=u.getX();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final double[] quat=new double[4];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_172/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:48.080165320 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +293,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n@@ -327,10 +316,6 @@\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n-        }\n         return null;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Delete", 
          "seed": "return 3;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_4/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:29.743374538 -0500\n@@ -298,12 +298,6 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_254/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:30.320614217 -0500\n@@ -291,21 +291,6 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +310,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "return new EnclosingBall<Euclidean3D,Vector3D>(Vector3D.ZERO,Double.NEGATIVE_INFINITY);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "return FastMath.abs(offset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_225/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:16.628467214 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +314,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Delete", 
          "seed": "final BSPTree<Euclidean3D> minus=node.getMinus();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_379/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:29.137260011 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +312,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "far=plus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "return Vector3DFormat.getInstance().format(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Delete", 
          "seed": "return 642;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_9/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:32.739403623 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -327,10 +316,6 @@\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n-        }\n         return null;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_258/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:31.928631570 -0500\n@@ -291,21 +291,6 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +310,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "return new EnclosingBall<Euclidean3D,Vector3D>(Vector3D.ZERO,Double.NEGATIVE_INFINITY);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:19:26.658809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_52/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:42:53.195604846 -0500\n@@ -364,7 +364,8 @@\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n-        final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n+        double fn = 0;\n+\t\tfinal double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_52/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:53.199604885 -0500\n@@ -281,14 +281,6 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n-\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n@@ -301,7 +293,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final SubHyperplane<Euclidean3D> crossed=recurseFirstIntersection(near,point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return plane;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 367, 
          "faulty": "final double k=-(originOffset + w.dotProduct(point)) / dot;", 
          "type": "InsertBefore", 
          "seed": "double fn=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_98/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:15.847832735 -0500\n@@ -301,12 +301,12 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n \n-        // search in the far branch\n+        final double[] quat = new double[4];\n+\t\t// search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "InsertBefore", 
          "seed": "final double[] quat=new double[4];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_138/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:36.504044812 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +293,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n@@ -325,7 +314,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_341/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:09.821045536 -0500\n@@ -281,31 +281,12 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n-\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -319,15 +300,14 @@\n      */\n     private SubHyperplane<Euclidean3D> boundaryFacet(final Vector3D point,\n                                                      final BSPTree<Euclidean3D> node) {\n-        final Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0, 0, 0));\n+\t\tfinal Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n-        if ((attribute.getPlusInside() != null) &&\n+        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+\t\tif ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_J);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "double[][] o=new double[3][3];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "double s=getNorm();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 322, 
          "faulty": "final Vector2D point2D=((Plane)node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_280/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:40.980729594 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "near=minus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return Vector3DFormat.getInstance().format(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_J);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_125/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:31.767995844 -0500\n@@ -268,7 +268,9 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +294,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n@@ -325,7 +315,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 642;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_291/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:45.736781322 -0500\n@@ -291,21 +291,6 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +310,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "near=minus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return Vector3DFormat.getInstance().format(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_K);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "return new EnclosingBall<Euclidean3D,Vector3D>(Vector3D.ZERO,Double.NEGATIVE_INFINITY);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "final FieldVector3D<T> v1=applyTo(vector(1,0,0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_390/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:35.269328547 -0500\n@@ -281,31 +281,12 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n-\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +304,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "far=plus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "return Vector3DFormat.getInstance().format(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "double[][] o=new double[3][3];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "double threshold=0.6 * getNorm();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_108/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:23.319908998 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -291,21 +292,6 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_219/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:14.272442058 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Delete", 
          "seed": "final BSPTree<Euclidean3D> minus=node.getMinus();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "return distance(line.zero);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_92/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:12.279796504 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +293,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_16/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:35.391429453 -0500\n@@ -298,12 +298,6 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n@@ -325,7 +319,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "return LazyHolder.INSTANCE;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:19:26.658809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_58/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:42:56.447637245 -0500\n@@ -491,7 +491,8 @@\n      */\n     @Override\n     public boolean sameOrientationAs(final Hyperplane<Euclidean3D> other) {\n-        return (((Plane) other).w).dotProduct(w) > 0.0;\n+        double x = u.getX();\n+\t\treturn (((Plane) other).w).dotProduct(w) > 0.0;\n     }\n \n }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_58/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:56.451637285 -0500\n@@ -268,7 +268,15 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -298,12 +306,7 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            final double[] quat = new double[4];\n         }\n \n         // search in the far branch\n@@ -327,7 +330,8 @@\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\tif ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 494, 
          "faulty": "return (((Plane)other).w).dotProduct(w) > 0.0;", 
          "type": "InsertBefore", 
          "seed": "double x=u.getX();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final double[] quat=new double[4];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_72/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:04.595718897 -0500\n@@ -268,7 +268,15 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -291,18 +299,11 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "return new Vector3D(1,0,0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return facet;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_233/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:21.168515805 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +314,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_K);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "near=minus;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_331/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:05.352996243 -0500\n@@ -281,31 +281,12 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n-\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,9 +304,9 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n+        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+\t\tif ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_J);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "double[][] o=new double[3][3];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_75/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:05.619729205 -0500\n@@ -268,7 +268,16 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tfinal Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -295,17 +304,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_112/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:25.931935780 -0500\n@@ -245,7 +245,9 @@\n      * sub-hyperplaned\n      */\n     public SubHyperplane<Euclidean3D> firstIntersection(final Vector3D point, final Line line) {\n-        return recurseFirstIntersection(getTree(true), point, line);\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\treturn recurseFirstIntersection(getTree(true), point, line);\n     }\n \n     /** Get the first sub-hyperplane crossed by a semi-infinite line.\n@@ -268,7 +270,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +295,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 248, 
          "faulty": "return recurseFirstIntersection(getTree(true),point,line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_286/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:43.960761988 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +314,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_K);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_K);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_J);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_349/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:13.889090522 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +312,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "far=plus;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_114/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:26.719943873 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +293,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n@@ -323,10 +312,7 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n+        final BSPTree<Euclidean3D> minus = node.getMinus();\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Delete", 
          "seed": "return Vector3DFormat.getInstance().format(toVector3D());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Replace", 
          "seed": "final BSPTree<Euclidean3D> minus=node.getMinus();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return FastMath.abs(offset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_90/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:11.627789897 -0500\n@@ -295,18 +295,26 @@\n             return crossed;\n         }\n \n-        if (!in) {\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tif (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n \n-        // search in the far branch\n+        final double[] quat = new double[4];\n+\t\t// search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "InsertBefore", 
          "seed": "final double[] quat=new double[4];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_252/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:29.776608350 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "near=minus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return Vector3DFormat.getInstance().format(this);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_306/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:52.368853707 -0500\n@@ -291,21 +291,6 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +308,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_K);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return Vector3DFormat.getInstance().format(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_K);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "return new EnclosingBall<Euclidean3D,Vector3D>(Vector3D.ZERO,Double.NEGATIVE_INFINITY);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "final FieldVector3D<T> v1=applyTo(vector(1,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Replace", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Delete", 
          "seed": "return Vector3DFormat.getInstance().format(toVector3D());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_352/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:15.609109572 -0500\n@@ -289,23 +289,13 @@\n             }\n         }\n \n-        // search in the near branch\n+        final double[] quat = new double[4];\n+\t\t// search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +313,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "return line;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 293, 
          "faulty": "final SubHyperplane<Euclidean3D> crossed=recurseFirstIntersection(near,point,line);", 
          "type": "InsertBefore", 
          "seed": "final double[] quat=new double[4];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_164/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:45.756141035 -0500\n@@ -266,9 +266,11 @@\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n-        final Plane               plane = (Plane) cut.getHyperplane();\n+        double[][] m = new double[3][];\n+\t\tfinal Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -295,17 +297,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,14 +314,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n-        }\n         return null;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Delete", 
          "seed": "return 3;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "return new Plane(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 269, 
          "faulty": "final Plane plane=(Plane)cut.getHyperplane();", 
          "type": "InsertBefore", 
          "seed": "double[][] m=new double[3][];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "Vector3D v2=applyInverseTo(Vector3D.PLUS_K);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_347/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:13.005080737 -0500\n@@ -289,23 +289,13 @@\n             }\n         }\n \n-        // search in the near branch\n+        final double[] quat = new double[4];\n+\t\t// search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +313,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "return line;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 293, 
          "faulty": "final SubHyperplane<Euclidean3D> crossed=recurseFirstIntersection(near,point,line);", 
          "type": "InsertBefore", 
          "seed": "final double[] quat=new double[4];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:19:26.658809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_197/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:44:01.624307741 -0500\n@@ -360,7 +360,8 @@\n     public Vector3D intersection(final Line line) {\n         final Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n-        if (FastMath.abs(dot) < 1.0e-10) {\n+        final double x = u.getX();\n+\t\tif (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_197/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:01.628307784 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +322,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 363, 
          "faulty": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "final double x=u.getX();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_256/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:30.908620561 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_362/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:21.797178255 -0500\n@@ -292,18 +292,8 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            final Vector3D direction = line.getDirection();\n+\t\t\treturn crossed;\n         }\n \n         // search in the far branch\n@@ -323,10 +313,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "far=plus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "InsertBefore", 
          "seed": "final Vector3D direction=line.getDirection();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "return 642;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:19:26.658809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_77/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:43:06.143734484 -0500\n@@ -491,7 +491,8 @@\n      */\n     @Override\n     public boolean sameOrientationAs(final Hyperplane<Euclidean3D> other) {\n-        return (((Plane) other).w).dotProduct(w) > 0.0;\n+        double x = u.getX();\n+\t\treturn (((Plane) other).w).dotProduct(w) > 0.0;\n     }\n \n }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_77/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:06.147734524 -0500\n@@ -268,7 +268,15 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -298,15 +306,11 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            final double[] quat = new double[4];\n         }\n \n-        // search in the far branch\n+        final double[] quat = new double[4];\n+\t\t// search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 494, 
          "faulty": "return (((Plane)other).w).dotProduct(w) > 0.0;", 
          "type": "InsertBefore", 
          "seed": "double x=u.getX();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final double[] quat=new double[4];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "InsertBefore", 
          "seed": "final double[] quat=new double[4];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "return FastMath.abs(offset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_267/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:35.424669361 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:19:26.658809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_192/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:43:59.464284929 -0500\n@@ -360,7 +360,8 @@\n     public Vector3D intersection(final Line line) {\n         final Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n-        if (FastMath.abs(dot) < 1.0e-10) {\n+        final double x = u.getX();\n+\t\tif (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_192/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:59.468284971 -0500\n@@ -325,7 +325,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 363, 
          "faulty": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "final double x=u.getX();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:19:26.658809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_79/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:43:06.899742105 -0500\n@@ -491,7 +491,8 @@\n      */\n     @Override\n     public boolean sameOrientationAs(final Hyperplane<Euclidean3D> other) {\n-        return (((Plane) other).w).dotProduct(w) > 0.0;\n+        double x = u.getX();\n+\t\treturn (((Plane) other).w).dotProduct(w) > 0.0;\n     }\n \n }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_79/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:06.903742146 -0500\n@@ -268,7 +268,16 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\tif (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -298,15 +307,11 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            final double[] quat = new double[4];\n         }\n \n-        // search in the far branch\n+        final double[] quat = new double[4];\n+\t\t// search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 494, 
          "faulty": "return (((Plane)other).w).dotProduct(w) > 0.0;", 
          "type": "InsertBefore", 
          "seed": "double x=u.getX();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final double[] quat=new double[4];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "InsertBefore", 
          "seed": "final double[] quat=new double[4];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_105/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:20.919884445 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +293,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_364/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:22.505186128 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +312,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "far=plus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "return Vector3DFormat.getInstance().format(this);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_176/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:49.748182779 -0500\n@@ -245,7 +245,8 @@\n      * sub-hyperplaned\n      */\n     public SubHyperplane<Euclidean3D> firstIntersection(final Vector3D point, final Line line) {\n-        return recurseFirstIntersection(getTree(true), point, line);\n+        final double[][] hj = new double[3][3];\n+\t\treturn recurseFirstIntersection(getTree(true), point, line);\n     }\n \n     /** Get the first sub-hyperplane crossed by a semi-infinite line.\n@@ -268,7 +269,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +294,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 248, 
          "faulty": "return recurseFirstIntersection(getTree(true),point,line);", 
          "type": "InsertBefore", 
          "seed": "final double[][] hj=new double[3][3];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_K);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "return plane;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_160/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:44.652129516 -0500\n@@ -268,7 +268,9 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +294,7 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n         }\n \n         // search in the far branch\n@@ -325,12 +316,8 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n         }\n+        int i = 0;\n         return null;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 642;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "return line;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Replace", 
          "seed": "int i=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_358/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:18.969146837 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +312,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "far=plus;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_325/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:02.732967394 -0500\n@@ -270,7 +270,8 @@\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -281,31 +282,13 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n-\n-        // search in the near branch\n+        double fn = 0;\n+\t\t// search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +308,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_J);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 293, 
          "faulty": "final SubHyperplane<Euclidean3D> crossed=recurseFirstIntersection(near,point,line);", 
          "type": "InsertBefore", 
          "seed": "double fn=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Euclidean2D.getInstance();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_43/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:48.231555603 -0500\n@@ -281,31 +281,12 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n-\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(far,point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final SubHyperplane<Euclidean3D> crossed=recurseFirstIntersection(near,point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:19:26.658809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_315/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:44:57.676911848 -0500\n@@ -363,7 +363,8 @@\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n-        final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n+        final double z = v.getZ();\n+\t\tfinal Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n         final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_315/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:57.676911848 -0500\n@@ -281,31 +281,12 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n-\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +306,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_J);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 366, 
          "faulty": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);", 
          "type": "InsertBefore", 
          "seed": "final double z=v.getZ();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:19:26.658809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_81/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:43:07.567748845 -0500\n@@ -491,7 +491,8 @@\n      */\n     @Override\n     public boolean sameOrientationAs(final Hyperplane<Euclidean3D> other) {\n-        return (((Plane) other).w).dotProduct(w) > 0.0;\n+        double x = u.getX();\n+\t\treturn (((Plane) other).w).dotProduct(w) > 0.0;\n     }\n \n }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_81/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:07.567748845 -0500\n@@ -268,7 +268,31 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tif (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tif (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -281,14 +305,6 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n-\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n@@ -298,15 +314,11 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            final double[] quat = new double[4];\n         }\n \n-        // search in the far branch\n+        final double[] quat = new double[4];\n+\t\t// search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 494, 
          "faulty": "return (((Plane)other).w).dotProduct(w) > 0.0;", 
          "type": "InsertBefore", 
          "seed": "double x=u.getX();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final double[] quat=new double[4];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "InsertBefore", 
          "seed": "final double[] quat=new double[4];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "return true;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_62/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:58.239655145 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -298,15 +299,11 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            final double[] quat = new double[4];\n         }\n \n-        // search in the far branch\n+        final double[] quat = new double[4];\n+\t\t// search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n@@ -325,7 +322,7 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n+            double fn = 0;\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final double[] quat=new double[4];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "InsertBefore", 
          "seed": "final double[] quat=new double[4];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Replace", 
          "seed": "double fn=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_375/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:27.329239845 -0500\n@@ -291,21 +291,6 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +308,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "far=plus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "InsertBefore", 
          "seed": "final Vector3D direction=line.getDirection();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "return 642;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Replace", 
          "seed": "Vector3D v2=applyInverseTo(Vector3D.PLUS_J);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:19:26.658809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_384/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:45:31.841290207 -0500\n@@ -360,7 +360,8 @@\n     public Vector3D intersection(final Line line) {\n         final Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n-        if (FastMath.abs(dot) < 1.0e-10) {\n+        setFrame();\n+\t\tif (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_384/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:31.845290251 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +312,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "far=plus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "return Vector3DFormat.getInstance().format(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 363, 
          "faulty": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "setFrame();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Replace", 
          "seed": "double[][] m=new double[3][];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_156/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:43.188114254 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +293,7 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n         }\n \n         // search in the far branch\n@@ -325,7 +315,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Delete", 
          "seed": "return 3;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_67/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:00.803680814 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -281,14 +282,6 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n-\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n@@ -298,15 +291,11 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            final double[] quat = new double[4];\n         }\n \n-        // search in the far branch\n+        final double[] quat = new double[4];\n+\t\t// search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n@@ -325,7 +314,7 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n+            double fn = 0;\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final double[] quat=new double[4];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "InsertBefore", 
          "seed": "final double[] quat=new double[4];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Replace", 
          "seed": "double fn=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_223/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:16.016460675 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_136/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:35.784037354 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +293,7 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n         }\n \n         // search in the far branch\n@@ -325,7 +315,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_188/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:57.980269276 -0500\n@@ -298,12 +298,7 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n         }\n \n         // search in the far branch\n@@ -325,7 +320,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_322/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:01.388952613 -0500\n@@ -270,7 +270,8 @@\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -281,31 +282,12 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n-\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +307,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_J);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_152/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:41.992101799 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +293,7 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n         }\n \n         // search in the far branch\n@@ -325,12 +315,8 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n         }\n+        int i = 0;\n         return null;\n     }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Replace", 
          "seed": "int i=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:19:26.658809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_101/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:43:17.691851507 -0500\n@@ -491,7 +491,8 @@\n      */\n     @Override\n     public boolean sameOrientationAs(final Hyperplane<Euclidean3D> other) {\n-        return (((Plane) other).w).dotProduct(w) > 0.0;\n+        double x = u.getX();\n+\t\treturn (((Plane) other).w).dotProduct(w) > 0.0;\n     }\n \n }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_101/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:17.695851548 -0500\n@@ -268,7 +268,32 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tif (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tif (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tfinal Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +317,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 494, 
          "faulty": "return (((Plane)other).w).dotProduct(w) > 0.0;", 
          "type": "InsertBefore", 
          "seed": "double x=u.getX();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_123/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:31.059988541 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +293,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:19:26.658809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_88/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:43:10.891782442 -0500\n@@ -491,7 +491,8 @@\n      */\n     @Override\n     public boolean sameOrientationAs(final Hyperplane<Euclidean3D> other) {\n-        return (((Plane) other).w).dotProduct(w) > 0.0;\n+        double x = u.getX();\n+\t\treturn (((Plane) other).w).dotProduct(w) > 0.0;\n     }\n \n }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_88/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:10.891782442 -0500\n@@ -268,7 +268,16 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\tif (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,21 +301,18 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n+            double[][] o = new double[3][3];\n+\t\t\treturn crossed;\n         }\n \n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            final double[] quat = new double[4];\n         }\n \n-        // search in the far branch\n+        final double[] quat = new double[4];\n+\t\t// search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 494, 
          "faulty": "return (((Plane)other).w).dotProduct(w) > 0.0;", 
          "type": "InsertBefore", 
          "seed": "double x=u.getX();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final double[] quat=new double[4];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "InsertBefore", 
          "seed": "final double[] quat=new double[4];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "InsertBefore", 
          "seed": "double[][] o=new double[3][3];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "return false;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_166/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:46.404147803 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -295,17 +296,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +313,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "return new Plane(this);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_150/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:41.428095932 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +293,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n@@ -325,11 +314,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n         }\n         return null;\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(1,0,0));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_368/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:23.645198810 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +312,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "far=plus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "return Vector3DFormat.getInstance().format(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_118/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:28.675963984 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +293,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_60/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:56.983642595 -0500\n@@ -268,7 +268,17 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -291,9 +301,9 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n+        if (cut == null) {\n+\t\t\treturn null;\n+\t\t}\n \n         if (!in) {\n             // search in the cut hyperplane\n@@ -301,7 +311,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_296/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:47.660802292 -0500\n@@ -291,21 +291,6 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +308,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "near=minus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return Vector3DFormat.getInstance().format(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_K);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "return new EnclosingBall<Euclidean3D,Vector3D>(Vector3D.ZERO,Double.NEGATIVE_INFINITY);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "final FieldVector3D<T> v1=applyTo(vector(1,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Replace", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:19:26.658809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_86/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:43:10.367777139 -0500\n@@ -491,7 +491,8 @@\n      */\n     @Override\n     public boolean sameOrientationAs(final Hyperplane<Euclidean3D> other) {\n-        return (((Plane) other).w).dotProduct(w) > 0.0;\n+        double x = u.getX();\n+\t\treturn (((Plane) other).w).dotProduct(w) > 0.0;\n     }\n \n }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_86/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:10.367777139 -0500\n@@ -268,7 +268,31 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tif (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tif (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -300,9 +324,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 494, 
          "faulty": "return (((Plane)other).w).dotProduct(w) > 0.0;", 
          "type": "InsertBefore", 
          "seed": "double x=u.getX();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return facet;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_247/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:28.172591065 -0500\n@@ -296,14 +296,6 @@\n         }\n \n         if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n@@ -325,7 +317,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_K);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "near=minus;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:19:26.658809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_103/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:43:19.383868760 -0500\n@@ -491,7 +491,8 @@\n      */\n     @Override\n     public boolean sameOrientationAs(final Hyperplane<Euclidean3D> other) {\n-        return (((Plane) other).w).dotProduct(w) > 0.0;\n+        double x = u.getX();\n+\t\treturn (((Plane) other).w).dotProduct(w) > 0.0;\n     }\n \n }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_103/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:19.383868760 -0500\n@@ -268,7 +268,32 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tif (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tif (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tfinal Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +317,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 494, 
          "faulty": "return (((Plane)other).w).dotProduct(w) > 0.0;", 
          "type": "InsertBefore", 
          "seed": "double x=u.getX();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return pointAt(((Vector1D)point).getX());"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_275/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:38.616703941 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "near=minus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return Vector3DFormat.getInstance().format(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Delete", 
          "seed": "final double[] quat=new double[4];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_208/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:08.464380225 -0500\n@@ -299,10 +299,6 @@\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +321,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Delete", 
          "seed": "final BSPTree<Euclidean3D> minus=node.getMinus();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_129/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:33.108009678 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +293,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_35/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:45.383527468 -0500\n@@ -264,7 +264,8 @@\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        setSize(getSize() / 3.0);\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n@@ -281,14 +282,6 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n-\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n@@ -301,7 +294,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final SubHyperplane<Euclidean3D> crossed=recurseFirstIntersection(near,point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return plane;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_335/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:07.233016968 -0500\n@@ -281,31 +281,12 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n-\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +306,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_J);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "double[][] o=new double[3][3];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "return 642;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_293/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:46.288787337 -0500\n@@ -291,21 +291,6 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +310,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_K);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_K);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_J);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "final double threshold=0.6 * getNorm().getReal();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_260/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:32.552638310 -0500\n@@ -291,21 +291,6 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +310,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "return new EnclosingBall<Euclidean3D,Vector3D>(Vector3D.ZERO,Double.NEGATIVE_INFINITY);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "if (crossed != null) {\n  return crossed;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_216/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:12.760425936 -0500\n@@ -291,18 +291,10 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,11 +317,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n         }\n         return null;\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Delete", 
          "seed": "final BSPTree<Euclidean3D> minus=node.getMinus();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "final double[][] hj=new double[3][3];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Delete", 
          "seed": "final BSPTree<Euclidean3D> minus=node.getMinus();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_46/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:49.551568672 -0500\n@@ -264,7 +264,8 @@\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        setSize(getSize() / 3.0);\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n@@ -325,7 +326,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "return LazyHolder.INSTANCE;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_11/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:33.295409032 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(far,point,line);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_38/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:46.515538641 -0500\n@@ -301,7 +301,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathIllegalArgumentException(LocalizedFormats.ZERO_NORM_FOR_ROTATION_AXIS);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_168/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:47.036154405 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -291,21 +292,6 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +309,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "return getInstance(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "return new Plane(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "return FastMath.abs(offset);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_213/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:11.112408383 -0500\n@@ -291,18 +291,11 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,11 +318,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n         }\n         return null;\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "final double[][] hj=new double[3][3];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_211/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:10.492401786 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +314,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Delete", 
          "seed": "final BSPTree<Euclidean3D> minus=node.getMinus();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_27/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:41.375488021 -0500\n@@ -325,7 +325,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "return LazyHolder.INSTANCE;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_327/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:03.548976375 -0500\n@@ -281,31 +281,15 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n-\n-        // search in the near branch\n+        if (cut == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t// search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +309,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_J);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "double[][] o=new double[3][3];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 293, 
          "faulty": "final SubHyperplane<Euclidean3D> crossed=recurseFirstIntersection(near,point,line);", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_127/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:32.400002368 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        final Vector3D p3D = (Vector3D) point;\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -292,18 +293,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n@@ -325,7 +314,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "Replace", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "return this.isNaN();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "final Line reverted=new Line(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (isNaN()) {\n  return 409;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_283/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:42.360744588 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +322,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_230/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:19.640499434 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:19:26.658809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_40/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:42:47.051543934 -0500\n@@ -491,7 +491,8 @@\n      */\n     @Override\n     public boolean sameOrientationAs(final Hyperplane<Euclidean3D> other) {\n-        return (((Plane) other).w).dotProduct(w) > 0.0;\n+        double x = u.getX();\n+\t\treturn (((Plane) other).w).dotProduct(w) > 0.0;\n     }\n \n }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_40/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:47.051543934 -0500\n@@ -264,11 +264,20 @@\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        setSize(getSize() / 3.0);\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -298,12 +307,7 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            final double[] quat = new double[4];\n         }\n \n         // search in the far branch\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 494, 
          "faulty": "return (((Plane)other).w).dotProduct(w) > 0.0;", 
          "type": "InsertBefore", 
          "seed": "double x=u.getX();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final double[] quat=new double[4];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:19:26.658809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_373/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-30 12:45:26.757233468 -0500\n@@ -360,7 +360,8 @@\n     public Vector3D intersection(final Line line) {\n         final Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n-        if (FastMath.abs(dot) < 1.0e-10) {\n+        setFrame();\n+\t\tif (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_373/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:26.757233468 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +312,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "far=plus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "return Vector3DFormat.getInstance().format(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 363, 
          "faulty": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "setFrame();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_337/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:08.465030563 -0500\n@@ -281,31 +281,12 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n-\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,11 +304,8 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n-        if ((attribute.getPlusInside() != null) &&\n+        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+\t\tif ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_J);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "double[][] o=new double[3][3];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "final SubHyperplane<Euclidean3D> cut=node.getCut();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Replace", 
          "seed": "return false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "double s=getNorm();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_355/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:45:17.129126422 -0500\n@@ -289,23 +289,13 @@\n             }\n         }\n \n-        // search in the near branch\n+        final double[] quat = new double[4];\n+\t\t// search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +313,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "final Vector3D p3D=(Vector3D)point;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "return line;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 293, 
          "faulty": "final SubHyperplane<Euclidean3D> crossed=recurseFirstIntersection(near,point,line);", 
          "type": "InsertBefore", 
          "seed": "final double[] quat=new double[4];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Replace", 
          "seed": "int i=0;"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_200/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:03.164324029 -0500\n@@ -264,7 +264,8 @@\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        final double[][] hj = new double[3][3];\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n@@ -298,12 +299,6 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n@@ -325,9 +320,13 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n+        if ((attribute.getPlusOutside() != null)\n+\t\t\t\t&& (((SubPlane) attribute.getPlusOutside())\n+\t\t\t\t\t\t.getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n+\t\t\treturn attribute.getPlusOutside();\n+\t\t}\n+\t\tif ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "return new BSPTree<Euclidean3D>(Boolean.FALSE);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "InsertBefore", 
          "seed": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "final double[][] hj=new double[3][3];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_312/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:55.756890796 -0500\n@@ -281,31 +281,12 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n-\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +306,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "computeJacobian();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_J);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_206/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:07.240367227 -0500\n@@ -291,18 +291,11 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +318,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "final BSPTree<Euclidean3D> minus=node.getMinus();"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_56/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:55.827631059 -0500\n@@ -298,15 +298,11 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            final double[] quat = new double[4];\n         }\n \n-        // search in the far branch\n+        final double[] quat = new double[4];\n+\t\t// search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "final double[] quat=new double[4];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "InsertBefore", 
          "seed": "final double[] quat=new double[4];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_178/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:43:51.532201477 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +322,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_245/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:27.684585810 -0500\n@@ -291,21 +291,6 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +310,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "return new EnclosingBall<Euclidean3D,Vector3D>(Vector3D.ZERO,Double.NEGATIVE_INFINITY);"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_299/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:44:49.112818133 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +314,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_K);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "Vector3D v1=applyTo(Vector3D.PLUS_K);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "final Plane plane=(Plane)cut.getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "final FieldVector3D<T> v2=applyInverseTo(vector(0,0,1));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "throw new MathArithmeticException(LocalizedFormats.CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "final boolean in=FastMath.abs(offset) < 1.0e-10;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (attribute.getPlusOutside() != null) {\n  addContribution(attribute.getPlusOutside(),false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "Delete", 
          "seed": "final double[] quat=new double[4];"
        }
      ]
    }, 
    {
      "diff": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:19:26.662809000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/patches_8s5f/Patch_22/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 12:42:39.143466129 -0500\n@@ -268,7 +268,15 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -301,7 +309,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n", 
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "final Plane thisPlane=(Plane)getHyperplane();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ]
    }
  ]
}