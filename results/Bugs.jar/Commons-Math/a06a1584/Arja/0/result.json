{
  "repair_end": "2018-12-29 12:27:04.307237", 
  "repair_begin": "2018-12-29 11:57:07.700503", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_132/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:59.526461888 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,10 +320,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1009/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:57.263847252 -0500\n@@ -260,7 +260,10 @@\n                                                                 final Vector3D point,\n                                                                 final Line line) {\n \n-        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+        getTree(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.visit(new FacetsContributionVisitor());\n+\t\tfinal SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n             return null;\n         }\n@@ -300,9 +303,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n@@ -325,7 +326,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_517/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:09.555136899 -0500\n@@ -295,14 +295,22 @@\n             return crossed;\n         }\n \n-        if (!in) {\n+        if (cut == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tif (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                if (getSize() < 0) {\n+\t\t\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t\t\t} else {\n+\t\t\t\t\tsetSize(getSize() / 3.0);\n+\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t\t}\n             }\n         }\n \n@@ -323,10 +331,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1824/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:50.061195160 -0500\n@@ -300,9 +300,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (facet != null) {\n  return facet;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 368, 
          "faulty": "return new Vector3D(1.0,point,k,direction);", 
          "type": "InsertBefore", 
          "seed": "if (direction.getNorm() < 1.0e-10) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1461/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:37.984443131 -0500\n@@ -281,7 +281,9 @@\n             far  = minus;\n         }\n \n-        if (in) {\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\tif (in) {\n             // search in the cut hyperplane\n             final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n             if (facet != null) {\n@@ -301,7 +303,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n@@ -325,7 +326,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1461/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:24:37.984443131 -0500\n@@ -365,7 +365,10 @@\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n         final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n-        return new Vector3D(1.0, point, k, direction);\n+        if (direction.getNorm() < 1.0e-10) {\n+\t\t\treturn null;\n+\t\t}\n+\t\treturn new Vector3D(1.0, point, k, direction);\n     }\n \n     /** Build the line shared by the instance and another plane.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_157/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:07.782509355 -0500\n@@ -270,7 +270,8 @@\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 362, 
          "faulty": "final double dot=w.dotProduct(direction);", 
          "type": "InsertBefore", 
          "seed": "setFrame();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 269, 
          "faulty": "final Plane plane=(Plane)cut.getHyperplane();", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1314/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:23:44.432245610 -0500\n@@ -359,7 +359,8 @@\n      */\n     public Vector3D intersection(final Line line) {\n         final Vector3D direction = line.getDirection();\n-        final double   dot       = w.dotProduct(direction);\n+        setFrame();\n+\t\tfinal double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1314/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:44.432245610 -0500\n@@ -266,7 +266,9 @@\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n-        final Plane               plane = (Plane) cut.getHyperplane();\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\tfinal Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n@@ -300,9 +302,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Replace", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_504/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:04.967115347 -0500\n@@ -292,7 +292,7 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n+            throw new CardanEulerSingularityException(false);\n         }\n \n         if (!in) {\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_337/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:08.230836373 -0500\n@@ -299,10 +299,8 @@\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                setSize(0);\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 322, 
          "faulty": "final Vector2D point2D=((Plane)node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_596/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:36.063258798 -0500\n@@ -301,7 +301,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n@@ -319,14 +318,19 @@\n      */\n     private SubHyperplane<Euclidean3D> boundaryFacet(final Vector3D point,\n                                                      final BSPTree<Euclidean3D> node) {\n-        final Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n+        if (getSize() < 0) {\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSize(getSize() / 3.0);\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1.0 / (4 * getSize()),\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Vector3D) getBarycenter()));\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n+\t\tfinal Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 361, 
          "faulty": "final Vector3D direction=line.getDirection();", 
          "type": "InsertBefore", 
          "seed": "v=Vector3D.crossProduct(w,u);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_575/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:30.031231441 -0500\n@@ -260,7 +260,8 @@\n                                                                 final Vector3D point,\n                                                                 final Line line) {\n \n-        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+        setSize(getSize() / 3.0);\n+\t\tfinal SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n             return null;\n         }\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_575/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:19:30.035231459 -0500\n@@ -358,7 +358,8 @@\n      * instance (null if the line is parallel to the instance)\n      */\n     public Vector3D intersection(final Line line) {\n-        final Vector3D direction = line.getDirection();\n+        v = Vector3D.crossProduct(w, u);\n+\t\tfinal Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_751/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:28.179486722 -0500\n@@ -270,7 +270,8 @@\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        setSize(getSize() / 3.0);\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 278, 
          "faulty": "far=plus;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1736/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:19.505034515 -0500\n@@ -260,7 +260,10 @@\n                                                                 final Vector3D point,\n                                                                 final Line line) {\n \n-        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+        getTree(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.visit(new FacetsContributionVisitor());\n+\t\tfinal SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n             return null;\n         }\n@@ -275,7 +278,8 @@\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n             near = minus;\n-            far  = plus;\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\t\tfar  = plus;\n         } else {\n             near = plus;\n             far  = minus;\n@@ -300,9 +304,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 362, 
          "faulty": "final double dot=w.dotProduct(direction);", 
          "type": "InsertBefore", 
          "seed": "setFrame();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_709/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:20:13.679424743 -0500\n@@ -359,7 +359,8 @@\n      */\n     public Vector3D intersection(final Line line) {\n         final Vector3D direction = line.getDirection();\n-        final double   dot       = w.dotProduct(direction);\n+        setFrame();\n+\t\tfinal double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_709/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:13.679424743 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 368, 
          "faulty": "return new Vector3D(1.0,point,k,direction);", 
          "type": "InsertBefore", 
          "seed": "v=Vector3D.crossProduct(w,u);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_271/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:46.766724140 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_271/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:17:46.770724161 -0500\n@@ -365,7 +365,8 @@\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n         final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n-        return new Vector3D(1.0, point, k, direction);\n+        v = Vector3D.crossProduct(w, u);\n+\t\treturn new Vector3D(1.0, point, k, direction);\n     }\n \n     /** Build the line shared by the instance and another plane.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1413/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:20.760374208 -0500\n@@ -260,7 +260,11 @@\n                                                                 final Vector3D point,\n                                                                 final Line line) {\n \n-        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0));\n+\t\tfinal SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n             return null;\n         }\n@@ -323,10 +327,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 366, 
          "faulty": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);", 
          "type": "InsertBefore", 
          "seed": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1697/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:05.640959277 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1697/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:26:05.640959277 -0500\n@@ -363,7 +363,10 @@\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n-        final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n+        if (FastMath.abs(dot) < 1.0e-10) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tfinal Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n         final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_811/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:49.459575863 -0500\n@@ -260,7 +260,10 @@\n                                                                 final Vector3D point,\n                                                                 final Line line) {\n \n-        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+        getTree(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.visit(new FacetsContributionVisitor());\n+\t\tfinal SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n             return null;\n         }\n@@ -300,9 +303,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 98, 
          "faulty": "return j < i ? i * (i + 1) / 2 + j : j * (j + 1) / 2 + i;", 
          "type": "Replace", 
          "seed": "return j < i ? i * (i + 1) / 2 + j : j * (j + 1) / 2 + i;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1254/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:23.072168646 -0500\n@@ -281,13 +281,8 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n@@ -323,10 +318,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1280/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:32.364202257 -0500\n@@ -291,18 +291,13 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n \n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_87/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:46.422385013 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,7 +312,12 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n+        if ((attribute.getPlusOutside() != null)\n+\t\t\t\t&& (((SubPlane) attribute.getPlusOutside())\n+\t\t\t\t\t\t.getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n+\t\t\treturn attribute.getPlusOutside();\n+\t\t}\n+\t\tif ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_159/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:08.222511864 -0500\n@@ -300,13 +300,18 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n-        // search in the far branch\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 268, 
          "faulty": "final BSPTree<Euclidean3D> plus=node.getPlus();", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_550/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:21.367191759 -0500\n@@ -265,7 +265,15 @@\n             return null;\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n-        final BSPTree<Euclidean3D> plus  = node.getPlus();\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tfinal BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n@@ -300,9 +308,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1498/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:51.572528266 -0500\n@@ -268,7 +268,10 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (cut == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -300,9 +303,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 367, 
          "faulty": "final double k=-(originOffset + w.dotProduct(point)) / dot;", 
          "type": "InsertBefore", 
          "seed": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 269, 
          "faulty": "final Plane plane=(Plane)cut.getHyperplane();", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "setSize(getSize() / 3.0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_335/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:18:07.810834215 -0500\n@@ -364,7 +364,10 @@\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n-        final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n+        if (FastMath.abs(dot) < 1.0e-10) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tfinal double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_335/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:07.810834215 -0500\n@@ -266,7 +266,8 @@\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n-        final Plane               plane = (Plane) cut.getHyperplane();\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tfinal Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n@@ -295,17 +296,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 248, 
          "faulty": "return recurseFirstIntersection(getTree(true),point,line);", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_164/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:09.846521109 -0500\n@@ -245,7 +245,8 @@\n      * sub-hyperplaned\n      */\n     public SubHyperplane<Euclidean3D> firstIntersection(final Vector3D point, final Line line) {\n-        return recurseFirstIntersection(getTree(true), point, line);\n+        setSize(0);\n+\t\treturn recurseFirstIntersection(getTree(true), point, line);\n     }\n \n     /** Get the first sub-hyperplane crossed by a semi-infinite line.\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1309/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:42.776239680 -0500\n@@ -300,9 +300,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n@@ -323,7 +321,8 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tif ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "if (offset < 0) {\n  near=minus;\n  far=plus;\n}\n else {\n  near=plus;\n  far=minus;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_627/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:46.415305251 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -295,17 +296,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 363, 
          "faulty": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 269, 
          "faulty": "final Plane plane=(Plane)cut.getHyperplane();", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_260/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:17:43.358705944 -0500\n@@ -361,6 +361,9 @@\n         final Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tif (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_260/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:43.358705944 -0500\n@@ -266,7 +266,8 @@\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n-        final Plane               plane = (Plane) cut.getHyperplane();\n+        setSize(0);\n+\t\tfinal Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_314/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:00.730797610 -0500\n@@ -296,13 +296,12 @@\n         }\n \n         if (!in) {\n-            // search in the cut hyperplane\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t// search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (facet != null) {\n  return facet;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_768/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:33.639509794 -0500\n@@ -301,7 +301,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n@@ -325,7 +324,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 322, 
          "faulty": "final Vector2D point2D=((Plane)node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "if (offset < 0) {\n  near=minus;\n  far=plus;\n}\n else {\n  near=plus;\n  far=minus;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_506/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:05.351117156 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -319,7 +308,16 @@\n      */\n     private SubHyperplane<Euclidean3D> boundaryFacet(final Vector3D point,\n                                                      final BSPTree<Euclidean3D> node) {\n-        final Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n+        if (getSize() < 0) {\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSize(getSize() / 3.0);\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1.0 / (4 * getSize()),\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Vector3D) getBarycenter()));\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n+\t\tfinal Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 363, 
          "faulty": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "u=w.orthogonal();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_464/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:18:51.179049719 -0500\n@@ -360,7 +360,8 @@\n     public Vector3D intersection(final Line line) {\n         final Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n-        if (FastMath.abs(dot) < 1.0e-10) {\n+        u = w.orthogonal();\n+\t\tif (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_464/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:51.183049739 -0500\n@@ -296,13 +296,12 @@\n         }\n \n         if (!in) {\n-            // search in the cut hyperplane\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t// search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 334, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_826/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:54.231595570 -0500\n@@ -325,13 +325,17 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n-        return null;\n+        if ((attribute.getPlusInside() != null)\n+\t\t\t\t&& (((SubPlane) attribute.getPlusInside()).getRemainingRegion()\n+\t\t\t\t\t\t.checkPoint(point2D) == Location.INSIDE)) {\n+\t\t\treturn attribute.getPlusInside();\n+\t\t}\n+\t\treturn null;\n     }\n \n     /** Rotate the region around the specified point.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_273/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:47.202726460 -0500\n@@ -291,9 +291,16 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n+        if (!in) {\n+\t\t\tfinal Vector3D hit3D = plane.intersection(line);\n+\t\t\tif (hit3D != null) {\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D,\n+\t\t\t\t\t\tnode);\n+\t\t\t\tif (facet != null) {\n+\t\t\t\t\treturn facet;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n \n         if (!in) {\n             // search in the cut hyperplane\n@@ -323,10 +330,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 83, 
          "faulty": "setElement(i,j,new StorelessBivariateCovariance(biasCorrected));", 
          "type": "InsertBefore", 
          "seed": "setElement(i,j,new StorelessBivariateCovariance(biasCorrected));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_328/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:06.070825259 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 05:56:19.636072000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_328/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 06:18:06.074825279 -0500\n@@ -80,7 +80,9 @@\n     private void initializeMatrix(final boolean biasCorrected) {\n         for(int i = 0; i < dimension; i++){\n             for(int j = 0; j < dimension; j++){\n-                setElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n+                setElement(i, j,\n+\t\t\t\t\t\tnew StorelessBivariateCovariance(biasCorrected));\n+\t\t\t\tsetElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n             }\n         }\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 334, 
          "faulty": "return null;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1222/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:11.984128261 -0500\n@@ -300,9 +300,14 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                if (getSize() < 0) {\n+\t\t\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t\t\t} else {\n+\t\t\t\t\tsetSize(getSize() / 3.0);\n+\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t\t}\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 363, 
          "faulty": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1734/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:26:19.013031871 -0500\n@@ -361,6 +361,9 @@\n         final Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tif (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1734/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:19.013031871 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,7 +320,15 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tif ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 81, 
          "faulty": "for (int i=0; i < dimension; i++) {\n  for (int j=0; j < dimension; j++) {\n    setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < dimension; i++) {\n  for (int j=0; j < dimension; j++) {\n    setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_599/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:36.915262645 -0500\n@@ -301,7 +301,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n@@ -325,7 +324,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 05:56:19.636072000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_599/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 06:19:36.915262645 -0500\n@@ -78,7 +78,13 @@\n      * @param biasCorrected if the covariance estimate shall be corrected for bias\n      */\n     private void initializeMatrix(final boolean biasCorrected) {\n-        for(int i = 0; i < dimension; i++){\n+        for (int i = 0; i < dimension; i++) {\n+\t\t\tfor (int j = 0; j < dimension; j++) {\n+\t\t\t\tsetElement(i, j,\n+\t\t\t\t\t\tnew StorelessBivariateCovariance(biasCorrected));\n+\t\t\t}\n+\t\t}\n+\t\tfor(int i = 0; i < dimension; i++){\n             for(int j = 0; j < dimension; j++){\n                 setElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 361, 
          "faulty": "final Vector3D direction=line.getDirection();", 
          "type": "InsertBefore", 
          "seed": "u=w.orthogonal();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_685/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:20:05.971391363 -0500\n@@ -358,7 +358,8 @@\n      * instance (null if the line is parallel to the instance)\n      */\n     public Vector3D intersection(final Line line) {\n-        final Vector3D direction = line.getDirection();\n+        u = w.orthogonal();\n+\t\tfinal Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_685/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:05.971391363 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "far=plus;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1452/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:35.092424748 -0500\n@@ -298,12 +298,6 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_191/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:19.406574970 -0500\n@@ -300,9 +300,14 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                if (getSize() < 0) {\n+\t\t\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t\t\t} else {\n+\t\t\t\t\tsetSize(getSize() / 3.0);\n+\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t\t}\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 362, 
          "faulty": "final double dot=w.dotProduct(direction);", 
          "type": "InsertBefore", 
          "seed": "if (direction.getNorm() < 1.0e-10) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_304/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:17:57.338779920 -0500\n@@ -359,7 +359,10 @@\n      */\n     public Vector3D intersection(final Line line) {\n         final Vector3D direction = line.getDirection();\n-        final double   dot       = w.dotProduct(direction);\n+        if (direction.getNorm() < 1.0e-10) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tfinal double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_304/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:57.338779920 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_819/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:52.039586531 -0500\n@@ -268,7 +268,15 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -300,9 +308,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1051/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:11.243901118 -0500\n@@ -295,14 +295,17 @@\n             return crossed;\n         }\n \n-        if (!in) {\n+        if (in) {\n+\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n+\t\t\tif (facet != null) {\n+\t\t\t\treturn facet;\n+\t\t\t}\n+\t\t}\n+\t\tif (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_787/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:40.383538099 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        setSize(0);\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "if (offset < 0) {\n  near=minus;\n  far=plus;\n}\n else {\n  near=plus;\n  far=minus;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_830/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:55.467600660 -0500\n@@ -264,7 +264,8 @@\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n@@ -295,17 +296,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 368, 
          "faulty": "return new Vector3D(1.0,point,k,direction);", 
          "type": "InsertBefore", 
          "seed": "v=Vector3D.crossProduct(w,u);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_230/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:32.770648728 -0500\n@@ -300,9 +300,9 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                if (cut == null) {\n+\t\t\t\t\treturn null;\n+\t\t\t\t}\n             }\n         }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_230/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:17:32.770648728 -0500\n@@ -365,7 +365,8 @@\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n         final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n-        return new Vector3D(1.0, point, k, direction);\n+        v = Vector3D.crossProduct(w, u);\n+\t\treturn new Vector3D(1.0, point, k, direction);\n     }\n \n     /** Build the line shared by the instance and another plane.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(far,point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Replace", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1361/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:02.792310947 -0500\n@@ -301,7 +301,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n@@ -325,7 +324,7 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Replace", 
          "seed": "if (crossed != null) {\n  return crossed;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_89/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:46.818387365 -0500\n@@ -268,7 +268,10 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (cut == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -295,16 +298,9 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n+        if (crossed != null) {\n+\t\t\treturn crossed;\n+\t\t}\n \n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n@@ -323,10 +319,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_610/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:40.567279084 -0500\n@@ -268,7 +268,15 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -299,10 +307,8 @@\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                setSize(0);\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n             }\n         }\n \n@@ -323,10 +329,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 367, 
          "faulty": "final double k=-(originOffset + w.dotProduct(point)) / dot;", 
          "type": "InsertBefore", 
          "seed": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1266/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:23:27.448184499 -0500\n@@ -364,7 +364,10 @@\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n-        final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n+        if (FastMath.abs(dot) < 1.0e-10) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tfinal double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1266/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:27.448184499 -0500\n@@ -291,18 +291,13 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n \n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 367, 
          "faulty": "final double k=-(originOffset + w.dotProduct(point)) / dot;", 
          "type": "InsertBefore", 
          "seed": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1034/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:06.255881973 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +322,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1034/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:22:06.255881973 -0500\n@@ -364,7 +364,10 @@\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n-        final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n+        if (FastMath.abs(dot) < 1.0e-10) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tfinal double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "far=plus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_849/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:01.735626362 -0500\n@@ -299,10 +299,8 @@\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                setSize(0);\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 367, 
          "faulty": "final double k=-(originOffset + w.dotProduct(point)) / dot;", 
          "type": "InsertBefore", 
          "seed": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1553/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:25:10.600644098 -0500\n@@ -364,7 +364,10 @@\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n-        final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n+        if (FastMath.abs(dot) < 1.0e-10) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tfinal double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1553/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:25:10.600644098 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1006/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:56.363843762 -0500\n@@ -260,7 +260,10 @@\n                                                                 final Vector3D point,\n                                                                 final Line line) {\n \n-        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1.0 / (4 * getSize()),\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Vector3D) getBarycenter()));\n+\t\tfinal SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n             return null;\n         }\n@@ -300,9 +303,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +325,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 264, 
          "faulty": "if (cut == null) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1146/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:44.108025322 -0500\n@@ -261,14 +261,16 @@\n                                                                 final Line line) {\n \n         final SubHyperplane<Euclidean3D> cut = node.getCut();\n-        if (cut == null) {\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\tif (cut == null) {\n             return null;\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        setSize(0);\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -300,9 +302,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +324,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "return crossed;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_357/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:15.858875317 -0500\n@@ -300,9 +300,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                return crossed;\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 361, 
          "faulty": "final Vector3D direction=line.getDirection();", 
          "type": "InsertBefore", 
          "seed": "v=Vector3D.crossProduct(w,u);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_606/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:19:39.287273331 -0500\n@@ -358,7 +358,8 @@\n      * instance (null if the line is parallel to the instance)\n      */\n     public Vector3D intersection(final Line line) {\n-        final Vector3D direction = line.getDirection();\n+        v = Vector3D.crossProduct(w, u);\n+\t\tfinal Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_606/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:39.291273349 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 334, 
          "faulty": "return null;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_182/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:16.102556462 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "far=plus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "near=minus;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1422/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:24.076385814 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +322,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1174/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:54.232062950 -0500\n@@ -323,9 +323,9 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n+        setSize(getSize() / 3.0);\n+\t\tif ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1533/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:25:03.224599652 -0500\n@@ -268,7 +268,10 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (cut == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -300,13 +303,12 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n-        // search in the far branch\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\t// search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 108, 
          "faulty": "return covMatrix[indexOf(i,j)];", 
          "type": "Replace", 
          "seed": "return covMatrix[indexOf(i,j)];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_535/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:16.043167143 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,10 +320,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 269, 
          "faulty": "final Plane plane=(Plane)cut.getHyperplane();", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "near=minus;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_95/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:48.390396681 -0500\n@@ -266,7 +266,8 @@\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n-        final Plane               plane = (Plane) cut.getHyperplane();\n+        setSize(0);\n+\t\tfinal Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n@@ -295,17 +296,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 277, 
          "faulty": "near=minus;", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_416/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:34.666969358 -0500\n@@ -274,7 +274,8 @@\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n-            near = minus;\n+            setSize(getSize() / 3.0);\n+\t\t\tnear = minus;\n             far  = plus;\n         } else {\n             near = plus;\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 108, 
          "faulty": "return covMatrix[indexOf(i,j)];", 
          "type": "Replace", 
          "seed": "return covMatrix[indexOf(i,j)];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_524/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:12.079148698 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +322,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_179/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:15.258551716 -0500\n@@ -291,18 +291,20 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n \n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 361, 
          "faulty": "final Vector3D direction=line.getDirection();", 
          "type": "InsertBefore", 
          "seed": "setFrame();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_588/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:33.511247250 -0500\n@@ -323,10 +323,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_588/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:19:33.511247250 -0500\n@@ -358,7 +358,8 @@\n      * instance (null if the line is parallel to the instance)\n      */\n     public Vector3D intersection(final Line line) {\n-        final Vector3D direction = line.getDirection();\n+        setFrame();\n+\t\tfinal Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 334, 
          "faulty": "return null;", 
          "type": "Replace", 
          "seed": "return attribute.getPlusOutside();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1167/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:51.844054100 -0500\n@@ -300,9 +300,9 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                if (cut == null) {\n+\t\t\t\t\treturn null;\n+\t\t\t\t}\n             }\n         }\n \n@@ -331,7 +331,7 @@\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n-        return null;\n+        return attribute.getPlusOutside();\n     }\n \n     /** Rotate the region around the specified point.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 277, 
          "faulty": "near=minus;", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 366, 
          "faulty": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);", 
          "type": "InsertBefore", 
          "seed": "v=Vector3D.crossProduct(w,u);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_872/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:09.391657531 -0500\n@@ -274,7 +274,10 @@\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n-            near = minus;\n+            if (cut == null) {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\t\t\tnear = minus;\n             far  = plus;\n         } else {\n             near = plus;\n@@ -300,9 +303,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_872/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:21:09.395657547 -0500\n@@ -363,7 +363,8 @@\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n-        final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n+        v = Vector3D.crossProduct(w, u);\n+\t\tfinal Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n         final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 108, 
          "faulty": "return covMatrix[indexOf(i,j)];", 
          "type": "Replace", 
          "seed": "return covMatrix[indexOf(i,j)];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1517/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:58.180568929 -0500\n@@ -323,10 +323,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "if (crossed != null) {\n  return crossed;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_71/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:41.146353509 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,10 +312,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_755/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:28.999490197 -0500\n@@ -260,7 +260,8 @@\n                                                                 final Vector3D point,\n                                                                 final Line line) {\n \n-        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+        setSize(getSize() / 3.0);\n+\t\tfinal SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n             return null;\n         }\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1130/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:39.316007411 -0500\n@@ -270,7 +270,8 @@\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        setSize(getSize() / 3.0);\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -296,13 +297,12 @@\n         }\n \n         if (!in) {\n-            // search in the cut hyperplane\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t// search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 362, 
          "faulty": "final double dot=w.dotProduct(direction);", 
          "type": "InsertBefore", 
          "seed": "setFrame();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_878/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:11.531666200 -0500\n@@ -301,7 +301,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_878/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:21:11.531666200 -0500\n@@ -359,7 +359,8 @@\n      */\n     public Vector3D intersection(final Line line) {\n         final Vector3D direction = line.getDirection();\n-        final double   dot       = w.dotProduct(direction);\n+        setFrame();\n+\t\tfinal double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 265, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1808/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:45.121169647 -0500\n@@ -262,7 +262,9 @@\n \n         final SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n-            return null;\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\treturn null;\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n@@ -270,7 +272,9 @@\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -300,9 +304,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "far=plus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 269, 
          "faulty": "final Plane plane=(Plane)cut.getHyperplane();", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_331/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:06.914829606 -0500\n@@ -266,7 +266,10 @@\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n-        final Plane               plane = (Plane) cut.getHyperplane();\n+        if (cut == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tfinal Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n@@ -301,7 +304,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n@@ -325,7 +327,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 334, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_219/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:29.358630063 -0500\n@@ -291,18 +291,13 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n \n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -331,7 +326,8 @@\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n-        return null;\n+        setSize(0);\n+\t\treturn null;\n     }\n \n     /** Rotate the region around the specified point.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 83, 
          "faulty": "setElement(i,j,new StorelessBivariateCovariance(biasCorrected));", 
          "type": "InsertBefore", 
          "seed": "setElement(i,j,new StorelessBivariateCovariance(biasCorrected));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_381/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:24.518918961 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,10 +320,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 05:56:19.636072000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_381/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 06:18:24.518918961 -0500\n@@ -80,7 +80,9 @@\n     private void initializeMatrix(final boolean biasCorrected) {\n         for(int i = 0; i < dimension; i++){\n             for(int j = 0; j < dimension; j++){\n-                setElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n+                setElement(i, j,\n+\t\t\t\t\t\tnew StorelessBivariateCovariance(biasCorrected));\n+\t\t\t\tsetElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n             }\n         }\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 278, 
          "faulty": "far=plus;", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1663/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:25:52.420886062 -0500\n@@ -275,7 +275,8 @@\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n             near = minus;\n-            far  = plus;\n+            setSize(getSize() / 3.0);\n+\t\t\tfar  = plus;\n         } else {\n             near = plus;\n             far  = minus;\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 361, 
          "faulty": "final Vector3D direction=line.getDirection();", 
          "type": "InsertBefore", 
          "seed": "u=w.orthogonal();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return facet;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_907/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:21.639706899 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +322,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_907/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:21:21.643706916 -0500\n@@ -358,7 +358,8 @@\n      * instance (null if the line is parallel to the instance)\n      */\n     public Vector3D intersection(final Line line) {\n-        final Vector3D direction = line.getDirection();\n+        u = w.orthogonal();\n+\t\tfinal Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 277, 
          "faulty": "near=minus;", 
          "type": "InsertBefore", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_737/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:22.231461424 -0500\n@@ -274,7 +274,14 @@\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n-            near = minus;\n+            if (in) {\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point,\n+\t\t\t\t\t\tnode);\n+\t\t\t\tif (facet != null) {\n+\t\t\t\t\treturn facet;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tnear = minus;\n             far  = plus;\n         } else {\n             near = plus;\n@@ -300,9 +307,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_275/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:47.666728927 -0500\n@@ -270,7 +270,9 @@\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -300,9 +302,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 322, 
          "faulty": "final Vector2D point2D=((Plane)node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 334, 
          "faulty": "return null;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1442/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:31.924413197 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -319,7 +316,9 @@\n      */\n     private SubHyperplane<Euclidean3D> boundaryFacet(final Vector3D point,\n                                                      final BSPTree<Euclidean3D> node) {\n-        final Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n+        getTree(true)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.visit(new FacetsContributionVisitor());\n+\t\tfinal Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "far=plus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_92/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:47.630392180 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return facet;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Replace", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_977/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:45.871802869 -0500\n@@ -292,7 +292,13 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n+            if (in) {\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point,\n+\t\t\t\t\t\tnode);\n+\t\t\t\tif (facet != null) {\n+\t\t\t\t\treturn facet;\n+\t\t\t\t}\n+\t\t\t}\n         }\n \n         if (!in) {\n@@ -300,9 +306,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +328,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_298/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:55.566770639 -0500\n@@ -281,13 +281,8 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n@@ -300,9 +295,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Replace", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 334, 
          "faulty": "return null;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_487/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:58.847086379 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -327,10 +324,8 @@\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n-        }\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n         return null;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 277, 
          "faulty": "near=minus;", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_971/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:43.939795296 -0500\n@@ -274,7 +274,10 @@\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n-            near = minus;\n+            if (cut == null) {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\t\t\tnear = minus;\n             far  = plus;\n         } else {\n             near = plus;\n@@ -300,9 +303,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,7 +323,15 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tif ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "setSize(getSize() / 3.0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_262/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:43.758708086 -0500\n@@ -298,12 +298,6 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 268, 
          "faulty": "final BSPTree<Euclidean3D> plus=node.getPlus();", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 248, 
          "faulty": "return recurseFirstIntersection(getTree(true),point,line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_139/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:01.566473685 -0500\n@@ -245,7 +245,9 @@\n      * sub-hyperplaned\n      */\n     public SubHyperplane<Euclidean3D> firstIntersection(final Vector3D point, final Line line) {\n-        return recurseFirstIntersection(getTree(true), point, line);\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\treturn recurseFirstIntersection(getTree(true), point, line);\n     }\n \n     /** Get the first sub-hyperplane crossed by a semi-infinite line.\n@@ -265,7 +267,8 @@\n             return null;\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n-        final BSPTree<Euclidean3D> plus  = node.getPlus();\n+        setSize(getSize() / 3.0);\n+\t\tfinal BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n@@ -300,9 +303,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +325,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_913/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:23.683715080 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -301,7 +302,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1336/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:52.836275607 -0500\n@@ -260,7 +260,11 @@\n                                                                 final Vector3D point,\n                                                                 final Line line) {\n \n-        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0));\n+\t\tfinal SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n             return null;\n         }\n@@ -300,9 +304,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 363, 
          "faulty": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "u=w.orthogonal();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_945/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:21:35.107760509 -0500\n@@ -360,7 +360,8 @@\n     public Vector3D intersection(final Line line) {\n         final Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n-        if (FastMath.abs(dot) < 1.0e-10) {\n+        u = w.orthogonal();\n+\t\tif (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_945/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:35.107760509 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Replace", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1183/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:57.192073898 -0500\n@@ -300,9 +300,14 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                if (getSize() < 0) {\n+\t\t\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t\t\t} else {\n+\t\t\t\t\tsetSize(getSize() / 3.0);\n+\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t\t}\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 265, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_9/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:20.642227919 -0500\n@@ -262,7 +262,8 @@\n \n         final SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n-            return null;\n+            setSize(0);\n+\t\t\treturn null;\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n@@ -323,10 +324,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "Replace", 
          "seed": "return crossed;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1811/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:45.957173977 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        setSize(0);\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -300,14 +301,10 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n-        // search in the far branch\n-        return recurseFirstIntersection(far, point, line);\n+        return crossed;\n \n     }\n \n@@ -323,10 +320,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 248, 
          "faulty": "return recurseFirstIntersection(getTree(true),point,line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_853/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:02.939631281 -0500\n@@ -245,7 +245,9 @@\n      * sub-hyperplaned\n      */\n     public SubHyperplane<Euclidean3D> firstIntersection(final Vector3D point, final Line line) {\n-        return recurseFirstIntersection(getTree(true), point, line);\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\treturn recurseFirstIntersection(getTree(true), point, line);\n     }\n \n     /** Get the first sub-hyperplane crossed by a semi-infinite line.\n@@ -325,7 +327,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 248, 
          "faulty": "return recurseFirstIntersection(getTree(true),point,line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1277/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:31.588199457 -0500\n@@ -245,7 +245,9 @@\n      * sub-hyperplaned\n      */\n     public SubHyperplane<Euclidean3D> firstIntersection(final Vector3D point, final Line line) {\n-        return recurseFirstIntersection(getTree(true), point, line);\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\treturn recurseFirstIntersection(getTree(true), point, line);\n     }\n \n     /** Get the first sub-hyperplane crossed by a semi-infinite line.\n@@ -295,17 +297,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +316,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_247/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:38.842681669 -0500\n@@ -270,7 +270,8 @@\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -300,9 +301,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Replace", 
          "seed": "return recurseFirstIntersection(far,point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_81/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:44.798375350 -0500\n@@ -268,7 +268,10 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (cut == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -301,7 +304,7 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n+                    return recurseFirstIntersection(far, point, line);\n                 }\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 322, 
          "faulty": "final Vector2D point2D=((Plane)node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_306/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:57.846782576 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -319,7 +316,16 @@\n      */\n     private SubHyperplane<Euclidean3D> boundaryFacet(final Vector3D point,\n                                                      final BSPTree<Euclidean3D> node) {\n-        final Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n+        if (getSize() < 0) {\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSize(getSize() / 3.0);\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1.0 / (4 * getSize()),\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Vector3D) getBarycenter()));\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n+\t\tfinal Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (facet != null) {\n  return facet;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 361, 
          "faulty": "final Vector3D direction=line.getDirection();", 
          "type": "InsertBefore", 
          "seed": "setFrame();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1077/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:20.219935368 -0500\n@@ -292,7 +292,6 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n         }\n \n         if (!in) {\n@@ -301,7 +300,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1077/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:22:20.219935368 -0500\n@@ -358,7 +358,8 @@\n      * instance (null if the line is parallel to the instance)\n      */\n     public Vector3D intersection(final Line line) {\n-        final Vector3D direction = line.getDirection();\n+        setFrame();\n+\t\tfinal Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_590/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:33.931249153 -0500\n@@ -264,7 +264,8 @@\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        setSize(0);\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_130/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:59.106459454 -0500\n@@ -264,7 +264,9 @@\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n@@ -292,18 +294,14 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n         }\n \n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            if (cut == null) {\n+\t\t\t\treturn null;\n+\t\t\t}\n         }\n \n         // search in the far branch\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_11/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:21.094230745 -0500\n@@ -323,10 +323,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(far,point,line);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_932/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:31.107744659 -0500\n@@ -270,7 +270,10 @@\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        if (cut == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -301,7 +304,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "InsertBefore", 
          "seed": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1522/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:59.436576605 -0500\n@@ -325,9 +325,13 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n+        if ((attribute.getPlusInside() != null)\n+\t\t\t\t&& (((SubPlane) attribute.getPlusInside()).getRemainingRegion()\n+\t\t\t\t\t\t.checkPoint(point2D) == Location.INSIDE)) {\n+\t\t\treturn attribute.getPlusInside();\n+\t\t}\n+\t\tif ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_421/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:36.250977154 -0500\n@@ -296,13 +296,12 @@\n         }\n \n         if (!in) {\n-            // search in the cut hyperplane\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t// search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +324,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (facet != null) {\n  return facet;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 361, 
          "faulty": "final Vector3D direction=line.getDirection();", 
          "type": "InsertBefore", 
          "seed": "setFrame();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_666/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:59.907364883 -0500\n@@ -301,7 +301,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_666/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:19:59.907364883 -0500\n@@ -358,7 +358,8 @@\n      * instance (null if the line is parallel to the instance)\n      */\n     public Vector3D intersection(final Line line) {\n-        final Vector3D direction = line.getDirection();\n+        setFrame();\n+\t\tfinal Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_114/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:54.046429973 -0500\n@@ -325,7 +325,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1369/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:05.316319873 -0500\n@@ -264,7 +264,10 @@\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        if (cut == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n@@ -300,9 +303,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_954/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:38.463773760 -0500\n@@ -291,18 +291,21 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n \n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_727/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:18.875447073 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -327,10 +324,6 @@\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n-        }\n         return null;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "InsertBefore", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1761/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:27.721078389 -0500\n@@ -295,18 +295,29 @@\n             return crossed;\n         }\n \n-        if (!in) {\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tif (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n-        // search in the far branch\n+        if (in) {\n+\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n+\t\t\tif (facet != null) {\n+\t\t\t\treturn facet;\n+\t\t\t}\n+\t\t}\n+\t\t// search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "InsertBefore", 
          "seed": "if (facet != null) {\n  return facet;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_698/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:09.983408776 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 367, 
          "faulty": "final double k=-(originOffset + w.dotProduct(point)) / dot;", 
          "type": "InsertBefore", 
          "seed": "if (direction.getNorm() < 1.0e-10) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1327/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:23:49.520263789 -0500\n@@ -364,7 +364,10 @@\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n-        final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n+        if (direction.getNorm() < 1.0e-10) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tfinal double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1327/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:49.520263789 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 278, 
          "faulty": "far=plus;", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_473/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:54.507065680 -0500\n@@ -275,7 +275,15 @@\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n             near = minus;\n-            far  = plus;\n+            if (getSize() < 0) {\n+\t\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t\t} else {\n+\t\t\t\tsetSize(getSize() / 3.0);\n+\t\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t}\n+\t\t\tfar  = plus;\n         } else {\n             near = plus;\n             far  = minus;\n@@ -300,9 +308,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (facet != null) {\n  return facet;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1792/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:39.161138636 -0500\n@@ -270,7 +270,8 @@\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -301,7 +302,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1519/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:58.608571546 -0500\n@@ -301,7 +301,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n@@ -327,7 +326,8 @@\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n+        setSize(getSize() / 3.0);\n+\t\tif ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_136/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:00.710468741 -0500\n@@ -268,7 +268,9 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -300,9 +302,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 293, 
          "faulty": "final SubHyperplane<Euclidean3D> crossed=recurseFirstIntersection(near,point,line);", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_956/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:38.879775401 -0500\n@@ -289,7 +289,8 @@\n             }\n         }\n \n-        // search in the near branch\n+        setSize(getSize() / 3.0);\n+\t\t// search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n@@ -323,10 +324,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 361, 
          "faulty": "final Vector3D direction=line.getDirection();", 
          "type": "InsertBefore", 
          "seed": "setFrame();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1846/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:58.093236283 -0500\n@@ -268,7 +268,15 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -291,18 +299,20 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n \n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1846/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:26:58.097236303 -0500\n@@ -358,7 +358,8 @@\n      * instance (null if the line is parallel to the instance)\n      */\n     public Vector3D intersection(final Line line) {\n-        final Vector3D direction = line.getDirection();\n+        setFrame();\n+\t\tfinal Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 278, 
          "faulty": "far=plus;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1817/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:48.033184707 -0500\n@@ -275,7 +275,8 @@\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n             near = minus;\n-            far  = plus;\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\t\tfar  = plus;\n         } else {\n             near = plus;\n             far  = minus;\n@@ -295,17 +296,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_443/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:43.919014631 -0500\n@@ -298,12 +298,13 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            if (in) {\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point,\n+\t\t\t\t\t\tnode);\n+\t\t\t\tif (facet != null) {\n+\t\t\t\t\treturn facet;\n+\t\t\t\t}\n+\t\t\t}\n         }\n \n         // search in the far branch\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 81, 
          "faulty": "for (int i=0; i < dimension; i++) {\n  for (int j=0; j < dimension; j++) {\n    setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < dimension; i++) {\n  for (int j=0; j < dimension; j++) {\n    setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1401/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:16.784360266 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +322,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 05:56:19.636072000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1401/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 06:24:16.784360266 -0500\n@@ -78,7 +78,13 @@\n      * @param biasCorrected if the covariance estimate shall be corrected for bias\n      */\n     private void initializeMatrix(final boolean biasCorrected) {\n-        for(int i = 0; i < dimension; i++){\n+        for (int i = 0; i < dimension; i++) {\n+\t\t\tfor (int j = 0; j < dimension; j++) {\n+\t\t\t\tsetElement(i, j,\n+\t\t\t\t\t\tnew StorelessBivariateCovariance(biasCorrected));\n+\t\t\t}\n+\t\t}\n+\t\tfor(int i = 0; i < dimension; i++){\n             for(int j = 0; j < dimension; j++){\n                 setElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_33/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:28.794278467 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -327,7 +316,8 @@\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n+        setSize(0);\n+\t\tif ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_648/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:53.343335997 -0500\n@@ -295,14 +295,12 @@\n             return crossed;\n         }\n \n-        if (!in) {\n+        setSize(getSize() / 3.0);\n+\t\tif (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return facet;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_18/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:23.742247240 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +322,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 361, 
          "faulty": "final Vector3D direction=line.getDirection();", 
          "type": "InsertBefore", 
          "seed": "setFrame();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_775/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:20:36.139520312 -0500\n@@ -358,7 +358,8 @@\n      * instance (null if the line is parallel to the instance)\n      */\n     public Vector3D intersection(final Line line) {\n-        final Vector3D direction = line.getDirection();\n+        setFrame();\n+\t\tfinal Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_775/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:36.139520312 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 363, 
          "faulty": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1378/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:24:08.124329788 -0500\n@@ -361,6 +361,9 @@\n         final Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tif (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1378/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:08.128329802 -0500\n@@ -301,7 +301,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 264, 
          "faulty": "if (cut == null) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_403/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:30.454948535 -0500\n@@ -261,7 +261,15 @@\n                                                                 final Line line) {\n \n         final SubHyperplane<Euclidean3D> cut = node.getCut();\n-        if (cut == null) {\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tif (cut == null) {\n             return null;\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n@@ -291,18 +299,22 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n \n         if (!in) {\n-            // search in the cut hyperplane\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t// search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1098/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:27.211961874 -0500\n@@ -296,14 +296,17 @@\n         }\n \n         if (!in) {\n-            // search in the cut hyperplane\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t// search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            if (in) {\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point,\n+\t\t\t\t\t\tnode);\n+\t\t\t\tif (facet != null) {\n+\t\t\t\t\treturn facet;\n+\t\t\t\t}\n+\t\t\t}\n         }\n \n         // search in the far branch\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 98, 
          "faulty": "return j < i ? i * (i + 1) / 2 + j : j * (j + 1) / 2 + i;", 
          "type": "Replace", 
          "seed": "return j < i ? i * (i + 1) / 2 + j : j * (j + 1) / 2 + i;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1049/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:10.827899524 -0500\n@@ -264,7 +264,8 @@\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 277, 
          "faulty": "near=minus;", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_969/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:43.487793522 -0500\n@@ -274,7 +274,8 @@\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n-            near = minus;\n+            getTree(true).visit(new FacetsContributionVisitor());\n+\t\t\tnear = minus;\n             far  = plus;\n         } else {\n             near = plus;\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_24/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:25.838260234 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 361, 
          "faulty": "final Vector3D direction=line.getDirection();", 
          "type": "InsertBefore", 
          "seed": "setFrame();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1405/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:24:17.968364421 -0500\n@@ -358,7 +358,8 @@\n      * instance (null if the line is parallel to the instance)\n      */\n     public Vector3D intersection(final Line line) {\n-        final Vector3D direction = line.getDirection();\n+        setFrame();\n+\t\tfinal Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1405/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:17.968364421 -0500\n@@ -300,9 +300,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "return attribute.getPlusOutside();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "InsertBefore", 
          "seed": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_832/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:55.887602388 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,9 +322,13 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n+        if ((attribute.getPlusInside() != null)\n+\t\t\t\t&& (((SubPlane) attribute.getPlusInside()).getRemainingRegion()\n+\t\t\t\t\t\t.checkPoint(point2D) == Location.INSIDE)) {\n+\t\t\treturn attribute.getPlusInside();\n+\t\t}\n+\t\tif ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 81, 
          "faulty": "for (int i=0; i < dimension; i++) {\n  for (int j=0; j < dimension; j++) {\n    setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < dimension; i++) {\n  for (int j=0; j < dimension; j++) {\n    setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_901/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:19.535698461 -0500\n@@ -300,9 +300,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 05:56:19.636072000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_901/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 06:21:19.535698461 -0500\n@@ -78,7 +78,13 @@\n      * @param biasCorrected if the covariance estimate shall be corrected for bias\n      */\n     private void initializeMatrix(final boolean biasCorrected) {\n-        for(int i = 0; i < dimension; i++){\n+        for (int i = 0; i < dimension; i++) {\n+\t\t\tfor (int j = 0; j < dimension; j++) {\n+\t\t\t\tsetElement(i, j,\n+\t\t\t\t\t\tnew StorelessBivariateCovariance(biasCorrected));\n+\t\t\t}\n+\t\t}\n+\t\tfor(int i = 0; i < dimension; i++){\n             for(int j = 0; j < dimension; j++){\n                 setElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1832/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:52.857209524 -0500\n@@ -300,13 +300,18 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n-        // search in the far branch\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n@@ -323,10 +328,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Delete", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_176/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:14.418546984 -0500\n@@ -292,18 +292,12 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n         }\n \n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            getTree(true).visit(new FacetsContributionVisitor());\n         }\n \n         // search in the far branch\n@@ -327,10 +321,6 @@\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n-        }\n         return null;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Delete", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_4/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:18.638215364 -0500\n@@ -292,18 +292,14 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n         }\n \n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            if (cut == null) {\n+\t\t\t\treturn null;\n+\t\t\t}\n         }\n \n         // search in the far branch\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 248, 
          "faulty": "return recurseFirstIntersection(getTree(true),point,line);", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return facet;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_461/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:50.315045563 -0500\n@@ -245,7 +245,7 @@\n      * sub-hyperplaned\n      */\n     public SubHyperplane<Euclidean3D> firstIntersection(final Vector3D point, final Line line) {\n-        return recurseFirstIntersection(getTree(true), point, line);\n+        return null;\n     }\n \n     /** Get the first sub-hyperplane crossed by a semi-infinite line.\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +322,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 366, 
          "faulty": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);", 
          "type": "InsertBefore", 
          "seed": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_638/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:19:49.863320587 -0500\n@@ -363,7 +363,10 @@\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n-        final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n+        if (FastMath.abs(dot) < 1.0e-10) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tfinal Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n         final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_638/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:49.867320604 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1712/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:11.332990352 -0500\n@@ -291,9 +291,14 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n \n         if (!in) {\n             // search in the cut hyperplane\n@@ -301,7 +306,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "if (offset < 0) {\n  near=minus;\n  far=plus;\n}\n else {\n  near=plus;\n  far=minus;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1121/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:35.927994709 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_581/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:31.435237827 -0500\n@@ -264,7 +264,8 @@\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n@@ -298,12 +299,13 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            if (in) {\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point,\n+\t\t\t\t\t\tnode);\n+\t\t\t\tif (facet != null) {\n+\t\t\t\t\treturn facet;\n+\t\t\t\t}\n+\t\t\t}\n         }\n \n         // search in the far branch\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 269, 
          "faulty": "final Plane plane=(Plane)cut.getHyperplane();", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_202/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:23.058595301 -0500\n@@ -266,7 +266,8 @@\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n-        final Plane               plane = (Plane) cut.getHyperplane();\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tfinal Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1588/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:25:23.208718799 -0500\n@@ -325,11 +325,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n         }\n         return null;\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 98, 
          "faulty": "return j < i ? i * (i + 1) / 2 + j : j * (j + 1) / 2 + i;", 
          "type": "Replace", 
          "seed": "return j < i ? i * (i + 1) / 2 + j : j * (j + 1) / 2 + i;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1586/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:25:22.792716358 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,10 +320,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "if (offset < 0) {\n  near=minus;\n  far=plus;\n}\n else {\n  near=plus;\n  far=minus;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_194/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:20.162579190 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "far=plus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_281/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:48.966735830 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1769/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:30.637093837 -0500\n@@ -301,12 +301,12 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n \n-        // search in the far branch\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\t// search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 334, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1740/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:20.669040762 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -331,7 +320,8 @@\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n-        return null;\n+        setSize(0);\n+\t\treturn null;\n     }\n \n     /** Rotate the region around the specified point.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 268, 
          "faulty": "final BSPTree<Euclidean3D> plus=node.getPlus();", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Replace", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_816/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:51.183582995 -0500\n@@ -265,12 +265,14 @@\n             return null;\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n-        final BSPTree<Euclidean3D> plus  = node.getPlus();\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tfinal BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -292,7 +294,7 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n+            throw new CardanEulerSingularityException(false);\n         }\n \n         if (!in) {\n@@ -300,9 +302,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 82, 
          "faulty": "for (int j=0; j < dimension; j++) {\n  setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n}", 
          "type": "InsertBefore", 
          "seed": "for (int j=0; j < dimension; j++) {\n  setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1680/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:25:58.988922622 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 05:56:19.636072000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1680/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 06:25:58.988922622 -0500\n@@ -79,7 +79,11 @@\n      */\n     private void initializeMatrix(final boolean biasCorrected) {\n         for(int i = 0; i < dimension; i++){\n-            for(int j = 0; j < dimension; j++){\n+            for (int j = 0; j < dimension; j++) {\n+\t\t\t\tsetElement(i, j,\n+\t\t\t\t\t\tnew StorelessBivariateCovariance(biasCorrected));\n+\t\t\t}\n+\t\t\tfor(int j = 0; j < dimension; j++){\n                 setElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "far=plus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 322, 
          "faulty": "final Vector2D point2D=((Plane)node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1495/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:50.728523038 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -319,7 +308,9 @@\n      */\n     private SubHyperplane<Euclidean3D> boundaryFacet(final Vector3D point,\n                                                      final BSPTree<Euclidean3D> node) {\n-        final Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0, 0, 0));\n+\t\tfinal Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 81, 
          "faulty": "for (int i=0; i < dimension; i++) {\n  for (int j=0; j < dimension; j++) {\n    setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < dimension; i++) {\n  for (int j=0; j < dimension; j++) {\n    setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1490/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:49.024512461 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 05:56:19.636072000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1490/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 06:24:49.024512461 -0500\n@@ -78,7 +78,13 @@\n      * @param biasCorrected if the covariance estimate shall be corrected for bias\n      */\n     private void initializeMatrix(final boolean biasCorrected) {\n-        for(int i = 0; i < dimension; i++){\n+        for (int i = 0; i < dimension; i++) {\n+\t\t\tfor (int j = 0; j < dimension; j++) {\n+\t\t\t\tsetElement(i, j,\n+\t\t\t\t\t\tnew StorelessBivariateCovariance(biasCorrected));\n+\t\t\t}\n+\t\t}\n+\t\tfor(int i = 0; i < dimension; i++){\n             for(int j = 0; j < dimension; j++){\n                 setElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 83, 
          "faulty": "setElement(i,j,new StorelessBivariateCovariance(biasCorrected));", 
          "type": "InsertBefore", 
          "seed": "setElement(i,j,new StorelessBivariateCovariance(biasCorrected));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1252/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:22.648167106 -0500\n@@ -300,9 +300,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 05:56:19.636072000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1252/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 06:23:22.652167120 -0500\n@@ -80,7 +80,9 @@\n     private void initializeMatrix(final boolean biasCorrected) {\n         for(int i = 0; i < dimension; i++){\n             for(int j = 0; j < dimension; j++){\n-                setElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n+                setElement(i, j,\n+\t\t\t\t\t\tnew StorelessBivariateCovariance(biasCorrected));\n+\t\t\t\tsetElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n             }\n         }\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 265, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1299/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:38.828225520 -0500\n@@ -262,7 +262,9 @@\n \n         final SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n-            return null;\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\treturn null;\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n@@ -300,9 +302,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (facet != null) {\n  return facet;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return facet;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_995/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:52.747829711 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,9 +320,9 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tif ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 83, 
          "faulty": "setElement(i,j,new StorelessBivariateCovariance(biasCorrected));", 
          "type": "InsertBefore", 
          "seed": "setElement(i,j,new StorelessBivariateCovariance(biasCorrected));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_687/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:06.431393363 -0500\n@@ -270,7 +270,9 @@\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -300,9 +302,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 05:56:19.636072000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_687/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 06:20:06.431393363 -0500\n@@ -80,7 +80,9 @@\n     private void initializeMatrix(final boolean biasCorrected) {\n         for(int i = 0; i < dimension; i++){\n             for(int j = 0; j < dimension; j++){\n-                setElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n+                setElement(i, j,\n+\t\t\t\t\t\tnew StorelessBivariateCovariance(biasCorrected));\n+\t\t\t\tsetElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n             }\n         }\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 81, 
          "faulty": "for (int i=0; i < dimension; i++) {\n  for (int j=0; j < dimension; j++) {\n    setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < dimension; i++) {\n  for (int j=0; j < dimension; j++) {\n    setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1372/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:06.092322615 -0500\n@@ -325,7 +325,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 05:56:19.636072000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1372/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 06:24:06.092322615 -0500\n@@ -78,7 +78,13 @@\n      * @param biasCorrected if the covariance estimate shall be corrected for bias\n      */\n     private void initializeMatrix(final boolean biasCorrected) {\n-        for(int i = 0; i < dimension; i++){\n+        for (int i = 0; i < dimension; i++) {\n+\t\t\tfor (int j = 0; j < dimension; j++) {\n+\t\t\t\tsetElement(i, j,\n+\t\t\t\t\t\tnew StorelessBivariateCovariance(biasCorrected));\n+\t\t\t}\n+\t\t}\n+\t\tfor(int i = 0; i < dimension; i++){\n             for(int j = 0; j < dimension; j++){\n                 setElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 269, 
          "faulty": "final Plane plane=(Plane)cut.getHyperplane();", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_145/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:03.586485321 -0500\n@@ -266,7 +266,8 @@\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n-        final Plane               plane = (Plane) cut.getHyperplane();\n+        setSize(getSize() / 3.0);\n+\t\tfinal Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n@@ -323,10 +324,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1231/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:14.884138853 -0500\n@@ -268,7 +268,8 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        setSize(0);\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -325,7 +326,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 108, 
          "faulty": "return covMatrix[indexOf(i,j)];", 
          "type": "Replace", 
          "seed": "return covMatrix[indexOf(i,j)];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_485/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:58.415084324 -0500\n@@ -260,7 +260,11 @@\n                                                                 final Vector3D point,\n                                                                 final Line line) {\n \n-        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0));\n+\t\tfinal SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n             return null;\n         }\n@@ -300,9 +304,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 277, 
          "faulty": "near=minus;", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_733/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:20.971456043 -0500\n@@ -264,7 +264,8 @@\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n@@ -274,7 +275,8 @@\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n-            near = minus;\n+            setSize(getSize() / 3.0);\n+\t\t\tnear = minus;\n             far  = plus;\n         } else {\n             near = plus;\n@@ -300,9 +302,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 81, 
          "faulty": "for (int i=0; i < dimension; i++) {\n  for (int j=0; j < dimension; j++) {\n    setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < dimension; i++) {\n  for (int j=0; j < dimension; j++) {\n    setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_863/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:06.467645655 -0500\n@@ -301,7 +301,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 05:56:19.636072000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_863/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 06:21:06.467645655 -0500\n@@ -78,7 +78,13 @@\n      * @param biasCorrected if the covariance estimate shall be corrected for bias\n      */\n     private void initializeMatrix(final boolean biasCorrected) {\n-        for(int i = 0; i < dimension; i++){\n+        for (int i = 0; i < dimension; i++) {\n+\t\t\tfor (int j = 0; j < dimension; j++) {\n+\t\t\t\tsetElement(i, j,\n+\t\t\t\t\t\tnew StorelessBivariateCovariance(biasCorrected));\n+\t\t\t}\n+\t\t}\n+\t\tfor(int i = 0; i < dimension; i++){\n             for(int j = 0; j < dimension; j++){\n                 setElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "return attribute.getPlusOutside();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 322, 
          "faulty": "final Vector2D point2D=((Plane)node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_42/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:31.678296153 -0500\n@@ -319,13 +319,13 @@\n      */\n     private SubHyperplane<Euclidean3D> boundaryFacet(final Vector3D point,\n                                                      final BSPTree<Euclidean3D> node) {\n-        final Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n+        setSize(getSize() / 3.0);\n+\t\tfinal Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 363, 
          "faulty": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "originOffset=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1448/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:24:33.816419780 -0500\n@@ -360,7 +360,8 @@\n     public Vector3D intersection(final Line line) {\n         final Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n-        if (FastMath.abs(dot) < 1.0e-10) {\n+        originOffset = 0;\n+\t\tif (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1448/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:33.820419794 -0500\n@@ -325,7 +325,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 264, 
          "faulty": "if (cut == null) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "return attribute.getPlusOutside();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_740/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:23.079465042 -0500\n@@ -261,7 +261,8 @@\n                                                                 final Line line) {\n \n         final SubHyperplane<Euclidean3D> cut = node.getCut();\n-        if (cut == null) {\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tif (cut == null) {\n             return null;\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n@@ -325,7 +326,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 269, 
          "faulty": "final Plane plane=(Plane)cut.getHyperplane();", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_267/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:45.510717446 -0500\n@@ -266,7 +266,9 @@\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n-        final Plane               plane = (Plane) cut.getHyperplane();\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\tfinal Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n@@ -323,10 +325,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 83, 
          "faulty": "setElement(i,j,new StorelessBivariateCovariance(biasCorrected));", 
          "type": "InsertBefore", 
          "seed": "setElement(i,j,new StorelessBivariateCovariance(biasCorrected));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_458/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:49.543041845 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,10 +320,7 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n+        getTree(true).visit(new FacetsContributionVisitor());\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 05:56:19.636072000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_458/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 06:18:49.543041845 -0500\n@@ -80,7 +80,9 @@\n     private void initializeMatrix(final boolean biasCorrected) {\n         for(int i = 0; i < dimension; i++){\n             for(int j = 0; j < dimension; j++){\n-                setElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n+                setElement(i, j,\n+\t\t\t\t\t\tnew StorelessBivariateCovariance(biasCorrected));\n+\t\t\t\tsetElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n             }\n         }\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 362, 
          "faulty": "final double dot=w.dotProduct(direction);", 
          "type": "InsertBefore", 
          "seed": "setFrame();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1747/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:23.245054551 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,7 +320,8 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tif ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1747/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:26:23.249054572 -0500\n@@ -359,7 +359,8 @@\n      */\n     public Vector3D intersection(final Line line) {\n         final Vector3D direction = line.getDirection();\n-        final double   dot       = w.dotProduct(direction);\n+        setFrame();\n+\t\tfinal double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 276, 
          "faulty": "if (offset < 0) {\n  near=minus;\n  far=plus;\n}\n else {\n  near=plus;\n  far=minus;\n}", 
          "type": "InsertBefore", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_892/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:16.459686093 -0500\n@@ -273,7 +273,13 @@\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n-        if (offset < 0) {\n+        if (in) {\n+\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n+\t\t\tif (facet != null) {\n+\t\t\t\treturn facet;\n+\t\t\t}\n+\t\t}\n+\t\tif (offset < 0) {\n             near = minus;\n             far  = plus;\n         } else {\n@@ -300,9 +306,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1074/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:19.427932356 -0500\n@@ -323,10 +323,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 264, 
          "faulty": "if (cut == null) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 367, 
          "faulty": "final double k=-(originOffset + w.dotProduct(point)) / dot;", 
          "type": "InsertBefore", 
          "seed": "origin=new Vector3D(-originOffset,w);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_618/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:43.063290277 -0500\n@@ -261,7 +261,8 @@\n                                                                 final Line line) {\n \n         final SubHyperplane<Euclidean3D> cut = node.getCut();\n-        if (cut == null) {\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\tif (cut == null) {\n             return null;\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_618/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:19:43.067290295 -0500\n@@ -364,7 +364,8 @@\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n-        final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n+        origin = new Vector3D(-originOffset, w);\n+\t\tfinal double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "InsertBefore", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_555/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:23.103199748 -0500\n@@ -291,7 +291,13 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n+        if (in) {\n+\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n+\t\t\tif (facet != null) {\n+\t\t\t\treturn facet;\n+\t\t\t}\n+\t\t}\n+\t\tif (crossed != null) {\n             return crossed;\n         }\n \n@@ -300,9 +306,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 83, 
          "faulty": "setElement(i,j,new StorelessBivariateCovariance(biasCorrected));", 
          "type": "InsertBefore", 
          "seed": "setElement(i,j,new StorelessBivariateCovariance(biasCorrected));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "if (crossed != null) {\n  return crossed;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_118/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:54.962435331 -0500\n@@ -300,9 +300,9 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                if (crossed != null) {\n+\t\t\t\t\treturn crossed;\n+\t\t\t\t}\n             }\n         }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 05:56:19.636072000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_118/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 06:16:54.962435331 -0500\n@@ -80,7 +80,9 @@\n     private void initializeMatrix(final boolean biasCorrected) {\n         for(int i = 0; i < dimension; i++){\n             for(int j = 0; j < dimension; j++){\n-                setElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n+                setElement(i, j,\n+\t\t\t\t\t\tnew StorelessBivariateCovariance(biasCorrected));\n+\t\t\t\tsetElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n             }\n         }\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_66/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:39.762345191 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,7 +320,8 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tif ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 264, 
          "faulty": "if (cut == null) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_670/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:00.863369070 -0500\n@@ -261,7 +261,8 @@\n                                                                 final Line line) {\n \n         final SubHyperplane<Euclidean3D> cut = node.getCut();\n-        if (cut == null) {\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tif (cut == null) {\n             return null;\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "return attribute.getPlusOutside();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 322, 
          "faulty": "final Vector2D point2D=((Plane)node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_68/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:40.298348415 -0500\n@@ -270,7 +270,8 @@\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -281,13 +282,8 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n@@ -319,13 +315,13 @@\n      */\n     private SubHyperplane<Euclidean3D> boundaryFacet(final Vector3D point,\n                                                      final BSPTree<Euclidean3D> node) {\n-        final Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n+        setSize(getSize() / 3.0);\n+\t\tfinal Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 366, 
          "faulty": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);", 
          "type": "InsertBefore", 
          "seed": "v=Vector3D.crossProduct(w,u);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_894/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:21:16.963688123 -0500\n@@ -363,7 +363,8 @@\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n-        final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n+        v = Vector3D.crossProduct(w, u);\n+\t\tfinal Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n         final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_894/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:16.967688140 -0500\n@@ -300,9 +300,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 368, 
          "faulty": "return new Vector3D(1.0,point,k,direction);", 
          "type": "InsertBefore", 
          "seed": "if (direction.getNorm() < 1.0e-10) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_721/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:17.163439731 -0500\n@@ -300,9 +300,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_721/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:20:17.163439731 -0500\n@@ -365,7 +365,10 @@\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n         final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n-        return new Vector3D(1.0, point, k, direction);\n+        if (direction.getNorm() < 1.0e-10) {\n+\t\t\treturn null;\n+\t\t}\n+\t\treturn new Vector3D(1.0, point, k, direction);\n     }\n \n     /** Build the line shared by the instance and another plane.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "return attribute.getPlusOutside();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_557/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:23.523201677 -0500\n@@ -300,7 +300,10 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n+                if (cut == null) {\n+\t\t\t\t\treturn null;\n+\t\t\t\t}\n+\t\t\t\tif (facet != null) {\n                     return facet;\n                 }\n             }\n@@ -325,7 +328,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1243/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:19.388155260 -0500\n@@ -270,7 +270,10 @@\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        if (cut == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -300,9 +303,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,7 +323,15 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tif ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 278, 
          "faulty": "far=plus;", 
          "type": "InsertBefore", 
          "seed": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1026/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:03.323870681 -0500\n@@ -264,18 +264,32 @@\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        if (cut == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n             near = minus;\n-            far  = plus;\n+            if (!in) {\n+\t\t\t\tfinal Vector3D hit3D = plane.intersection(line);\n+\t\t\t\tif (hit3D != null) {\n+\t\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(\n+\t\t\t\t\t\t\thit3D, node);\n+\t\t\t\t\tif (facet != null) {\n+\t\t\t\t\t\treturn facet;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tfar  = plus;\n         } else {\n             near = plus;\n             far  = minus;\n@@ -300,9 +314,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,10 +334,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 108, 
          "faulty": "return covMatrix[indexOf(i,j)];", 
          "type": "Replace", 
          "seed": "return covMatrix[indexOf(i,j)];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (offset < 0) {\n  near=minus;\n  far=plus;\n}\n else {\n  near=plus;\n  far=minus;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_279/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:48.542733580 -0500\n@@ -300,8 +300,10 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n+                if (cut == null) {\n+\t\t\t\t\treturn null;\n+\t\t\t\t}\n+\t\t\t\tif (facet != null) {\n                 }\n             }\n         }\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "if (offset < 0) {\n  near=minus;\n  far=plus;\n}\n else {\n  near=plus;\n  far=minus;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1752/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:24.521061361 -0500\n@@ -295,19 +295,7 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n-        // search in the far branch\n-        return recurseFirstIntersection(far, point, line);\n+        return null;\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 269, 
          "faulty": "final Plane plane=(Plane)cut.getHyperplane();", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_50/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:34.642314224 -0500\n@@ -266,7 +266,9 @@\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n-        final Plane               plane = (Plane) cut.getHyperplane();\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\tfinal Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n@@ -300,9 +302,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_116/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:54.474432477 -0500\n@@ -291,18 +291,11 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n-\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1139/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:42.008017481 -0500\n@@ -295,14 +295,19 @@\n             return crossed;\n         }\n \n-        if (!in) {\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tif (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,7 +328,8 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tif ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_475/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:54.975067919 -0500\n@@ -264,7 +264,8 @@\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_61/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:38.158335524 -0500\n@@ -301,7 +301,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1456/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:36.340432687 -0500\n@@ -264,7 +264,8 @@\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n@@ -291,18 +292,13 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n \n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1729/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:17.317022742 -0500\n@@ -298,12 +298,13 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            if (in) {\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point,\n+\t\t\t\t\t\tnode);\n+\t\t\t\tif (facet != null) {\n+\t\t\t\t\treturn facet;\n+\t\t\t\t}\n+\t\t\t}\n         }\n \n         // search in the far branch\n@@ -323,10 +324,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_413/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:33.786965019 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Delete", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1515/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:57.748566285 -0500\n@@ -268,7 +268,15 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -300,9 +308,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -327,10 +332,6 @@\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n-        }\n         return null;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 81, 
          "faulty": "for (int i=0; i < dimension; i++) {\n  for (int j=0; j < dimension; j++) {\n    setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < dimension; i++) {\n  for (int j=0; j < dimension; j++) {\n    setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_371/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:20.970901153 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 05:56:19.636072000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_371/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 06:18:20.970901153 -0500\n@@ -78,7 +78,13 @@\n      * @param biasCorrected if the covariance estimate shall be corrected for bias\n      */\n     private void initializeMatrix(final boolean biasCorrected) {\n-        for(int i = 0; i < dimension; i++){\n+        for (int i = 0; i < dimension; i++) {\n+\t\t\tfor (int j = 0; j < dimension; j++) {\n+\t\t\t\tsetElement(i, j,\n+\t\t\t\t\t\tnew StorelessBivariateCovariance(biasCorrected));\n+\t\t\t}\n+\t\t}\n+\t\tfor(int i = 0; i < dimension; i++){\n             for(int j = 0; j < dimension; j++){\n                 setElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1718/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:13.429001730 -0500\n@@ -300,9 +300,14 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                if (getSize() < 0) {\n+\t\t\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t\t\t} else {\n+\t\t\t\t\tsetSize(getSize() / 3.0);\n+\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t\t}\n             }\n         }\n \n@@ -323,7 +328,8 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tif ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_934/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:31.651746818 -0500\n@@ -323,9 +323,9 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tif ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return facet;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_243/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:37.502674428 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,11 +322,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n         }\n         return null;\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 277, 
          "faulty": "near=minus;", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_110/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:53.194424980 -0500\n@@ -274,7 +274,10 @@\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n-            near = minus;\n+            if (cut == null) {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\t\t\tnear = minus;\n             far  = plus;\n         } else {\n             near = plus;\n@@ -301,7 +304,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 361, 
          "faulty": "final Vector3D direction=line.getDirection();", 
          "type": "InsertBefore", 
          "seed": "v=Vector3D.crossProduct(w,u);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_224/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:31.034639246 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,7 +320,8 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tif ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_224/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:17:31.038639268 -0500\n@@ -358,7 +358,8 @@\n      * instance (null if the line is parallel to the instance)\n      */\n     public Vector3D intersection(final Line line) {\n-        final Vector3D direction = line.getDirection();\n+        v = Vector3D.crossProduct(w, u);\n+\t\tfinal Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 361, 
          "faulty": "final Vector3D direction=line.getDirection();", 
          "type": "InsertBefore", 
          "seed": "v=Vector3D.crossProduct(w,u);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "if (offset < 0) {\n  near=minus;\n  far=plus;\n}\n else {\n  near=plus;\n  far=minus;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_753/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:28.575488400 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -327,7 +316,8 @@\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n+        setSize(getSize() / 3.0);\n+\t\tif ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_753/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:20:28.575488400 -0500\n@@ -358,7 +358,8 @@\n      * instance (null if the line is parallel to the instance)\n      */\n     public Vector3D intersection(final Line line) {\n-        final Vector3D direction = line.getDirection();\n+        v = Vector3D.crossProduct(w, u);\n+\t\tfinal Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 264, 
          "faulty": "if (cut == null) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_777/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:36.575522143 -0500\n@@ -261,7 +261,15 @@\n                                                                 final Line line) {\n \n         final SubHyperplane<Euclidean3D> cut = node.getCut();\n-        if (cut == null) {\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tif (cut == null) {\n             return null;\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n@@ -300,9 +308,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 81, 
          "faulty": "for (int i=0; i < dimension; i++) {\n  for (int j=0; j < dimension; j++) {\n    setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "covMatrix=new StorelessBivariateCovariance[dimension * (dimension + 1) / 2];"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_212/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:26.918616646 -0500\n@@ -301,7 +301,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 05:56:19.636072000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_212/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 06:17:26.922616669 -0500\n@@ -78,7 +78,9 @@\n      * @param biasCorrected if the covariance estimate shall be corrected for bias\n      */\n     private void initializeMatrix(final boolean biasCorrected) {\n-        for(int i = 0; i < dimension; i++){\n+        covMatrix = new StorelessBivariateCovariance[dimension\n+\t\t\t\t* (dimension + 1) / 2];\n+\t\tfor(int i = 0; i < dimension; i++){\n             for(int j = 0; j < dimension; j++){\n                 setElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "return facet;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_364/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:18.274887553 -0500\n@@ -260,7 +260,10 @@\n                                                                 final Vector3D point,\n                                                                 final Line line) {\n \n-        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1.0 / (4 * getSize()),\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Vector3D) getBarycenter()));\n+\t\tfinal SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n             return null;\n         }\n@@ -300,9 +303,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                return facet;\n             }\n         }\n \n@@ -325,7 +326,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 98, 
          "faulty": "return j < i ? i * (i + 1) / 2 + j : j * (j + 1) / 2 + i;", 
          "type": "Replace", 
          "seed": "return j < i ? i * (i + 1) / 2 + j : j * (j + 1) / 2 + i;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1191/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:00.160084852 -0500\n@@ -268,7 +268,15 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -300,9 +308,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(far,point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 322, 
          "faulty": "final Vector2D point2D=((Plane)node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "near=minus;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1820/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:48.817188751 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -319,7 +316,9 @@\n      */\n     private SubHyperplane<Euclidean3D> boundaryFacet(final Vector3D point,\n                                                      final BSPTree<Euclidean3D> node) {\n-        final Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0, 0, 0));\n+\t\tfinal Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_384/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:25.358923162 -0500\n@@ -260,7 +260,8 @@\n                                                                 final Vector3D point,\n                                                                 final Line line) {\n \n-        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+        setSize(0);\n+\t\tfinal SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n             return null;\n         }\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 366, 
          "faulty": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);", 
          "type": "InsertBefore", 
          "seed": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 278, 
          "faulty": "far=plus;", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_636/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:19:49.439318704 -0500\n@@ -363,7 +363,10 @@\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n-        final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n+        if (FastMath.abs(dot) < 1.0e-10) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tfinal Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n         final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_636/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:49.439318704 -0500\n@@ -275,7 +275,8 @@\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n             near = minus;\n-            far  = plus;\n+            setSize(getSize() / 3.0);\n+\t\t\tfar  = plus;\n         } else {\n             near = plus;\n             far  = minus;\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 248, 
          "faulty": "return recurseFirstIntersection(getTree(true),point,line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_401/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:30.006946314 -0500\n@@ -245,7 +245,9 @@\n      * sub-hyperplaned\n      */\n     public SubHyperplane<Euclidean3D> firstIntersection(final Vector3D point, final Line line) {\n-        return recurseFirstIntersection(getTree(true), point, line);\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\treturn recurseFirstIntersection(getTree(true), point, line);\n     }\n \n     /** Get the first sub-hyperplane crossed by a semi-infinite line.\n@@ -300,9 +302,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_927/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:29.415737935 -0500\n@@ -299,10 +299,14 @@\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D,\n+\t\t\t\t\t\tnode);\n+\t\t\t\tif (facet != null) {\n+\t\t\t\t\treturn facet;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +329,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "far=plus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_714/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:14.939430171 -0500\n@@ -300,8 +300,15 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n+                if (getSize() < 0) {\n+\t\t\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t\t\t} else {\n+\t\t\t\t\tsetSize(getSize() / 3.0);\n+\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t\t}\n+\t\t\t\tif (facet != null) {\n                 }\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 363, 
          "faulty": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "v=Vector3D.crossProduct(w,u);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_613/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:19:41.423282927 -0500\n@@ -360,7 +360,8 @@\n     public Vector3D intersection(final Line line) {\n         final Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n-        if (FastMath.abs(dot) < 1.0e-10) {\n+        v = Vector3D.crossProduct(w, u);\n+\t\tif (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_613/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:41.423282927 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_890/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:16.035684387 -0500\n@@ -270,7 +270,8 @@\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        setSize(0);\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -325,7 +326,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 367, 
          "faulty": "final double k=-(originOffset + w.dotProduct(point)) / dot;", 
          "type": "InsertBefore", 
          "seed": "v=Vector3D.crossProduct(w,u);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_251/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:17:39.970687750 -0500\n@@ -364,7 +364,8 @@\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n-        final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n+        v = Vector3D.crossProduct(w, u);\n+\t\tfinal double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_251/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:39.974687772 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_228/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:32.334646349 -0500\n@@ -260,7 +260,10 @@\n                                                                 final Vector3D point,\n                                                                 final Line line) {\n \n-        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+        getTree(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.visit(new FacetsContributionVisitor());\n+\t\tfinal SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n             return null;\n         }\n@@ -300,9 +303,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 366, 
          "faulty": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);", 
          "type": "InsertBefore", 
          "seed": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 334, 
          "faulty": "return null;", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1108/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:22:30.939975946 -0500\n@@ -363,7 +363,10 @@\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n-        final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n+        if (FastMath.abs(dot) < 1.0e-10) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tfinal Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n         final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1108/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:30.939975946 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Replace", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1135/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:40.676012502 -0500\n@@ -292,7 +292,7 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n+            throw new CardanEulerSingularityException(false);\n         }\n \n         if (!in) {\n@@ -300,9 +300,14 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                if (getSize() < 0) {\n+\t\t\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t\t\t} else {\n+\t\t\t\t\tsetSize(getSize() / 3.0);\n+\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t\t}\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1605/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:25:29.188753684 -0500\n@@ -268,7 +268,10 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (cut == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -300,9 +303,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,10 +323,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 269, 
          "faulty": "final Plane plane=(Plane)cut.getHyperplane();", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_84/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:45.602380137 -0500\n@@ -266,7 +266,8 @@\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n-        final Plane               plane = (Plane) cut.getHyperplane();\n+        setSize(0);\n+\t\tfinal Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n@@ -306,7 +307,9 @@\n             }\n         }\n \n-        // search in the far branch\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\t// search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n@@ -323,10 +326,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 98, 
          "faulty": "return j < i ? i * (i + 1) / 2 + j : j * (j + 1) / 2 + i;", 
          "type": "Replace", 
          "seed": "return j < i ? i * (i + 1) / 2 + j : j * (j + 1) / 2 + i;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 278, 
          "faulty": "far=plus;", 
          "type": "InsertBefore", 
          "seed": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_406/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:31.334952897 -0500\n@@ -275,13 +275,29 @@\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n             near = minus;\n-            far  = plus;\n+            if (!in) {\n+\t\t\t\tfinal Vector3D hit3D = plane.intersection(line);\n+\t\t\t\tif (hit3D != null) {\n+\t\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(\n+\t\t\t\t\t\t\thit3D, node);\n+\t\t\t\t\tif (facet != null) {\n+\t\t\t\t\t\treturn facet;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tfar  = plus;\n         } else {\n             near = plus;\n             far  = minus;\n         }\n \n         if (in) {\n+\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n+\t\t\tif (facet != null) {\n+\t\t\t\treturn facet;\n+\t\t\t}\n+\t\t}\n+\t\tif (in) {\n             // search in the cut hyperplane\n             final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n             if (facet != null) {\n@@ -325,7 +341,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 268, 
          "faulty": "final BSPTree<Euclidean3D> plus=node.getPlus();", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return facet;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_571/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:28.723225480 -0500\n@@ -265,7 +265,15 @@\n             return null;\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n-        final BSPTree<Euclidean3D> plus  = node.getPlus();\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tfinal BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n@@ -300,9 +308,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +330,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1092/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:25.147954064 -0500\n@@ -281,28 +281,19 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n+        if (cut == null) {\n+\t\t\treturn null;\n+\t\t}\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n \n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_941/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:33.791755300 -0500\n@@ -268,7 +268,15 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -296,13 +304,12 @@\n         }\n \n         if (!in) {\n-            // search in the cut hyperplane\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t// search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 108, 
          "faulty": "return covMatrix[indexOf(i,j)];", 
          "type": "Replace", 
          "seed": "return covMatrix[indexOf(i,j)];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(far,point,line);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_705/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:12.439419394 -0500\n@@ -301,7 +301,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 366, 
          "faulty": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);", 
          "type": "InsertBefore", 
          "seed": "v=Vector3D.crossProduct(w,u);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_206/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:17:24.366602550 -0500\n@@ -363,7 +363,8 @@\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n-        final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n+        v = Vector3D.crossProduct(w, u);\n+\t\tfinal Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n         final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_206/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:24.370602572 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1156/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:47.716038764 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 362, 
          "faulty": "final double dot=w.dotProduct(direction);", 
          "type": "InsertBefore", 
          "seed": "originOffset=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_333/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:07.314831664 -0500\n@@ -268,7 +268,10 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (cut == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -323,10 +326,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_333/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:18:07.314831664 -0500\n@@ -359,7 +359,8 @@\n      */\n     public Vector3D intersection(final Line line) {\n         final Vector3D direction = line.getDirection();\n-        final double   dot       = w.dotProduct(direction);\n+        originOffset = 0;\n+\t\tfinal double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_724/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:18.047443524 -0500\n@@ -291,18 +291,13 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n+        getTree(true).visit(new FacetsContributionVisitor());\n \n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Replace", 
          "seed": "return recurseFirstIntersection(far,point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 293, 
          "faulty": "final SubHyperplane<Euclidean3D> crossed=recurseFirstIntersection(near,point,line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_29/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:27.570270930 -0500\n@@ -289,11 +289,18 @@\n             }\n         }\n \n-        // search in the near branch\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\t// search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n \n         if (!in) {\n             // search in the cut hyperplane\n@@ -301,7 +308,7 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n+                    return recurseFirstIntersection(far, point, line);\n                 }\n             }\n         }\n@@ -323,10 +330,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1089/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:24.355951065 -0500\n@@ -295,14 +295,20 @@\n             return crossed;\n         }\n \n-        if (!in) {\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tif (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(far,point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "if (crossed != null) {\n  return crossed;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 293, 
          "faulty": "final SubHyperplane<Euclidean3D> crossed=recurseFirstIntersection(near,point,line);", 
          "type": "InsertBefore", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1506/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:54.480546218 -0500\n@@ -289,7 +289,13 @@\n             }\n         }\n \n-        // search in the near branch\n+        if (in) {\n+\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n+\t\t\tif (facet != null) {\n+\t\t\t\treturn facet;\n+\t\t\t}\n+\t\t}\n+\t\t// search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n             return crossed;\n@@ -299,9 +305,11 @@\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n+                if (crossed != null) {\n+\t\t\t\t\treturn crossed;\n+\t\t\t\t}\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (facet != null) {\n  return facet;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_240/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:36.662669881 -0500\n@@ -270,7 +270,8 @@\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        setSize(getSize() / 3.0);\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -301,7 +302,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 248, 
          "faulty": "return recurseFirstIntersection(getTree(true),point,line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "if (crossed != null) {\n  return crossed;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_542/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:18.271177466 -0500\n@@ -245,7 +245,9 @@\n      * sub-hyperplaned\n      */\n     public SubHyperplane<Euclidean3D> firstIntersection(final Vector3D point, final Line line) {\n-        return recurseFirstIntersection(getTree(true), point, line);\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\treturn recurseFirstIntersection(getTree(true), point, line);\n     }\n \n     /** Get the first sub-hyperplane crossed by a semi-infinite line.\n@@ -299,10 +301,10 @@\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                if (crossed != null) {\n+\t\t\t\t\treturn crossed;\n+\t\t\t\t}\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (offset < 0) {\n  near=minus;\n  far=plus;\n}\n else {\n  near=plus;\n  far=minus;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 322, 
          "faulty": "final Vector2D point2D=((Plane)node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_692/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:07.999400175 -0500\n@@ -300,8 +300,10 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n+                if (cut == null) {\n+\t\t\t\t\treturn null;\n+\t\t\t\t}\n+\t\t\t\tif (facet != null) {\n                 }\n             }\n         }\n@@ -319,7 +321,8 @@\n      */\n     private SubHyperplane<Euclidean3D> boundaryFacet(final Vector3D point,\n                                                      final BSPTree<Euclidean3D> node) {\n-        final Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n+        setSize(0);\n+\t\tfinal Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "near=minus;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1660/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:25:51.520881024 -0500\n@@ -264,7 +264,8 @@\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n@@ -295,17 +296,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 265, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 269, 
          "faulty": "final Plane plane=(Plane)cut.getHyperplane();", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_57/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:36.950328223 -0500\n@@ -260,13 +260,23 @@\n                                                                 final Vector3D point,\n                                                                 final Line line) {\n \n-        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+        setSize(0);\n+\t\tfinal SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n-            return null;\n+            setSize(0);\n+\t\t\treturn null;\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n-        final Plane               plane = (Plane) cut.getHyperplane();\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tfinal Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n@@ -323,10 +333,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 248, 
          "faulty": "return recurseFirstIntersection(getTree(true),point,line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 367, 
          "faulty": "final double k=-(originOffset + w.dotProduct(point)) / dot;", 
          "type": "InsertBefore", 
          "seed": "v=Vector3D.crossProduct(w,u);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_579/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:30.951235628 -0500\n@@ -245,7 +245,9 @@\n      * sub-hyperplaned\n      */\n     public SubHyperplane<Euclidean3D> firstIntersection(final Vector3D point, final Line line) {\n-        return recurseFirstIntersection(getTree(true), point, line);\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\treturn recurseFirstIntersection(getTree(true), point, line);\n     }\n \n     /** Get the first sub-hyperplane crossed by a semi-infinite line.\n@@ -300,9 +302,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_579/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:19:30.951235628 -0500\n@@ -364,7 +364,8 @@\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n-        final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n+        v = Vector3D.crossProduct(w, u);\n+\t\tfinal double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 277, 
          "faulty": "near=minus;", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1290/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:35.900214995 -0500\n@@ -274,7 +274,10 @@\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n-            near = minus;\n+            if (cut == null) {\n+\t\t\t\treturn null;\n+\t\t\t}\n+\t\t\tnear = minus;\n             far  = plus;\n         } else {\n             near = plus;\n@@ -291,9 +294,16 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n+        if (!in) {\n+\t\t\tfinal Vector3D hit3D = plane.intersection(line);\n+\t\t\tif (hit3D != null) {\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D,\n+\t\t\t\t\t\tnode);\n+\t\t\t\tif (facet != null) {\n+\t\t\t\t\treturn facet;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n \n         if (!in) {\n             // search in the cut hyperplane\n@@ -323,10 +333,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_663/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:59.027361024 -0500\n@@ -281,13 +281,14 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_824/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:53.783593725 -0500\n@@ -295,14 +295,19 @@\n             return crossed;\n         }\n \n-        if (!in) {\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\tif (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 98, 
          "faulty": "return j < i ? i * (i + 1) / 2 + j : j * (j + 1) / 2 + i;", 
          "type": "Replace", 
          "seed": "return j < i ? i * (i + 1) / 2 + j : j * (j + 1) / 2 + i;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_277/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:48.110731287 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_841/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:58.871614639 -0500\n@@ -300,9 +300,9 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                if (cut == null) {\n+\t\t\t\t\treturn null;\n+\t\t\t\t}\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 334, 
          "faulty": "return null;", 
          "type": "Replace", 
          "seed": "return attribute.getPlusOutside();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1038/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:07.083885156 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -331,7 +328,7 @@\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n-        return null;\n+        return attribute.getPlusOutside();\n     }\n \n     /** Rotate the region around the specified point.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 248, 
          "faulty": "return recurseFirstIntersection(getTree(true),point,line);", 
          "type": "Replace", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1526/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:25:00.700584312 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 322, 
          "faulty": "final Vector2D point2D=((Plane)node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_431/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:39.862994861 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -319,7 +316,16 @@\n      */\n     private SubHyperplane<Euclidean3D> boundaryFacet(final Vector3D point,\n                                                      final BSPTree<Euclidean3D> node) {\n-        final Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n+        if (getSize() < 0) {\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSize(getSize() / 3.0);\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1.0 / (4 * getSize()),\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Vector3D) getBarycenter()));\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n+\t\tfinal Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 98, 
          "faulty": "return j < i ? i * (i + 1) / 2 + j : j * (j + 1) / 2 + i;", 
          "type": "Replace", 
          "seed": "return j < i ? i * (i + 1) / 2 + j : j * (j + 1) / 2 + i;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1133/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:40.228010825 -0500\n@@ -300,9 +300,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "setSize(0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_585/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:32.655243368 -0500\n@@ -270,7 +270,9 @@\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -301,7 +303,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 366, 
          "faulty": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);", 
          "type": "InsertBefore", 
          "seed": "setFrame();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 269, 
          "faulty": "final Plane plane=(Plane)cut.getHyperplane();", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1750/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:26:24.145059357 -0500\n@@ -363,7 +363,8 @@\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n-        final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n+        setFrame();\n+\t\tfinal Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n         final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1750/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:24.149059378 -0500\n@@ -266,7 +266,8 @@\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n-        final Plane               plane = (Plane) cut.getHyperplane();\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tfinal Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(far,point,line);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1393/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:13.828349879 -0500\n@@ -301,7 +301,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n@@ -323,10 +322,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1559/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:25:12.780657129 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,9 +320,9 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n+        setSize(getSize() / 3.0);\n+\t\tif ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Replace", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1141/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:42.424019036 -0500\n@@ -292,7 +292,13 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n+            if (in) {\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point,\n+\t\t\t\t\t\tnode);\n+\t\t\t\tif (facet != null) {\n+\t\t\t\t\treturn facet;\n+\t\t\t\t}\n+\t\t\t}\n         }\n \n         if (!in) {\n@@ -300,9 +306,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 322, 
          "faulty": "final Vector2D point2D=((Plane)node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1803/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:43.413160785 -0500\n@@ -264,7 +264,8 @@\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n@@ -300,9 +301,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n@@ -319,7 +318,16 @@\n      */\n     private SubHyperplane<Euclidean3D> boundaryFacet(final Vector3D point,\n                                                      final BSPTree<Euclidean3D> node) {\n-        final Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n+        if (getSize() < 0) {\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetSize(getSize() / 3.0);\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1.0 / (4 * getSize()),\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Vector3D) getBarycenter()));\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n+\t\tfinal Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1069/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:17.779926083 -0500\n@@ -282,6 +282,12 @@\n         }\n \n         if (in) {\n+\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n+\t\t\tif (facet != null) {\n+\t\t\t\treturn facet;\n+\t\t\t}\n+\t\t}\n+\t\tif (in) {\n             // search in the cut hyperplane\n             final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n             if (facet != null) {\n@@ -300,9 +306,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1598/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:25:26.708739258 -0500\n@@ -291,18 +291,22 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n+        if (!in) {\n+\t\t\tfinal Vector3D hit3D = plane.intersection(line);\n+\t\t\tif (hit3D != null) {\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D,\n+\t\t\t\t\t\tnode);\n+\t\t\t\tif (facet != null) {\n+\t\t\t\t\treturn facet;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n \n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,10 +327,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_300/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:56.122773554 -0500\n@@ -268,7 +268,15 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -295,14 +303,12 @@\n             return crossed;\n         }\n \n-        if (!in) {\n+        setSize(0);\n+\t\tif (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 363, 
          "faulty": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_399/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:18:29.566944128 -0500\n@@ -361,6 +361,9 @@\n         final Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tif (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_399/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:29.570944148 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "Replace", 
          "seed": "return recurseFirstIntersection(far,point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1439/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:31.024410062 -0500\n@@ -300,13 +300,10 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n-        // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Delete", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1568/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:25:16.212677545 -0500\n@@ -300,9 +300,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n@@ -327,10 +325,6 @@\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n-        }\n         return null;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 363, 
          "faulty": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "u=w.orthogonal();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 366, 
          "faulty": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);", 
          "type": "InsertBefore", 
          "seed": "u=w.orthogonal();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_392/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:18:27.122931968 -0500\n@@ -360,10 +360,12 @@\n     public Vector3D intersection(final Line line) {\n         final Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n-        if (FastMath.abs(dot) < 1.0e-10) {\n+        u = w.orthogonal();\n+\t\tif (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n-        final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n+        u = w.orthogonal();\n+\t\tfinal Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n         final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_392/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:27.126931988 -0500\n@@ -300,13 +300,18 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n-        // search in the far branch\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n@@ -325,7 +330,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1047/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:10.399897883 -0500\n@@ -298,11 +298,15 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n+            if (in) {\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point,\n+\t\t\t\t\t\tnode);\n+\t\t\t\tif (facet != null) {\n+\t\t\t\t\treturn facet;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_540/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:17.839175467 -0500\n@@ -260,11 +260,16 @@\n                                                                 final Vector3D point,\n                                                                 final Line line) {\n \n-        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0));\n+\t\tfinal SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n@@ -298,11 +303,16 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n+            if (getSize() < 0) {\n+\t\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t\t} else {\n+\t\t\t\tsetSize(getSize() / 3.0);\n+\t\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t}\n+\t\t\tif (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,10 +333,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 310, 
          "faulty": "return recurseFirstIntersection(far,point,line);", 
          "type": "InsertBefore", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1258/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:24.412173504 -0500\n@@ -300,13 +300,17 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n-        // search in the far branch\n+        if (in) {\n+\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n+\t\t\tif (facet != null) {\n+\t\t\t\treturn facet;\n+\t\t\t}\n+\t\t}\n+\t\t// search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_631/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:47.747311183 -0500\n@@ -296,7 +296,9 @@\n         }\n \n         if (!in) {\n-            // search in the cut hyperplane\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t// search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n@@ -325,7 +327,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 108, 
          "faulty": "return covMatrix[indexOf(i,j)];", 
          "type": "Replace", 
          "seed": "return covMatrix[indexOf(i,j)];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 322, 
          "faulty": "final Vector2D point2D=((Plane)node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 81, 
          "faulty": "for (int i=0; i < dimension; i++) {\n  for (int j=0; j < dimension; j++) {\n    setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "for (int i=0; i < dimension; i++) {\n  for (int j=0; j < dimension; j++) {\n    setElement(i,j,new StorelessBivariateCovariance(biasCorrected));\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_499/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:03.279107382 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -319,7 +316,9 @@\n      */\n     private SubHyperplane<Euclidean3D> boundaryFacet(final Vector3D point,\n                                                      final BSPTree<Euclidean3D> node) {\n-        final Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0, 0, 0));\n+\t\tfinal Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 05:56:19.636072000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_499/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java\t2018-12-29 06:19:03.279107382 -0500\n@@ -78,7 +78,13 @@\n      * @param biasCorrected if the covariance estimate shall be corrected for bias\n      */\n     private void initializeMatrix(final boolean biasCorrected) {\n-        for(int i = 0; i < dimension; i++){\n+        for (int i = 0; i < dimension; i++) {\n+\t\t\tfor (int j = 0; j < dimension; j++) {\n+\t\t\t\tsetElement(i, j,\n+\t\t\t\t\t\tnew StorelessBivariateCovariance(biasCorrected));\n+\t\t\t}\n+\t\t}\n+\t\tfor(int i = 0; i < dimension; i++){\n             for(int j = 0; j < dimension; j++){\n                 setElement(i, j, new StorelessBivariateCovariance(biasCorrected));\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1639/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:25:43.356834995 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -325,7 +314,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (facet != null) {\n  return facet;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_963/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:41.323785021 -0500\n@@ -296,12 +296,13 @@\n         }\n \n         if (!in) {\n-            // search in the cut hyperplane\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t// search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 363, 
          "faulty": "if (FastMath.abs(dot) < 1.0e-10) {\n  return null;\n}", 
          "type": "InsertBefore", 
          "seed": "u=w.orthogonal();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1772/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:26:31.505098424 -0500\n@@ -360,7 +360,8 @@\n     public Vector3D intersection(final Line line) {\n         final Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n-        if (FastMath.abs(dot) < 1.0e-10) {\n+        u = w.orthogonal();\n+\t\tif (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1772/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:31.505098424 -0500\n@@ -268,7 +268,15 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -300,9 +308,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "far=plus;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1625/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:25:37.044798999 -0500\n@@ -268,7 +268,15 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -298,12 +306,6 @@\n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n         }\n \n         // search in the far branch\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 334, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1571/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:25:17.080682690 -0500\n@@ -323,15 +323,12 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n-        return null;\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\treturn null;\n     }\n \n     /** Rotate the region around the specified point.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Replace", 
          "seed": "return recurseFirstIntersection(far,point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 334, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_101/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:50.090406726 -0500\n@@ -260,7 +260,8 @@\n                                                                 final Vector3D point,\n                                                                 final Line line) {\n \n-        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+        setSize(0);\n+\t\tfinal SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n             return null;\n         }\n@@ -268,7 +269,10 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (cut == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -301,7 +305,7 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n+                    return recurseFirstIntersection(far, point, line);\n                 }\n             }\n         }\n@@ -331,7 +335,8 @@\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n-        return null;\n+        setSize(0);\n+\t\treturn null;\n     }\n \n     /** Rotate the region around the specified point.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 366, 
          "faulty": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);", 
          "type": "InsertBefore", 
          "seed": "setFrame();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_350/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:18:13.270862158 -0500\n@@ -363,7 +363,8 @@\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n-        final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n+        setFrame();\n+\t\tfinal Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n         final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_350/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:13.274862178 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Replace", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1202/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:04.096099343 -0500\n@@ -292,17 +292,15 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n+            throw new CardanEulerSingularityException(false);\n         }\n \n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                setSize(0);\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_388/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:26.242927578 -0500\n@@ -296,7 +296,17 @@\n         }\n \n         if (!in) {\n-            // search in the cut hyperplane\n+            if (!in) {\n+\t\t\t\tfinal Vector3D hit3D = plane.intersection(line);\n+\t\t\t\tif (hit3D != null) {\n+\t\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(\n+\t\t\t\t\t\t\thit3D, node);\n+\t\t\t\t\tif (facet != null) {\n+\t\t\t\t\t\treturn facet;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t// search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n@@ -325,7 +335,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (crossed != null) {\n  return crossed;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_97/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:48.858399450 -0500\n@@ -295,15 +295,15 @@\n             return crossed;\n         }\n \n-        if (!in) {\n+        if (crossed != null) {\n+\t\t\treturn crossed;\n+\t\t}\n+\t\tif (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n+            if (cut == null) {\n+\t\t\t\treturn null;\n+\t\t\t}\n         }\n \n         // search in the far branch\n@@ -323,10 +323,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 265, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_149/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:17:04.906492903 -0500\n@@ -262,13 +262,16 @@\n \n         final SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n-            return null;\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\treturn null;\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -301,7 +304,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n@@ -323,11 +325,17 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n+        if ((attribute.getPlusOutside() != null)\n+\t\t\t\t&& (((SubPlane) attribute.getPlusOutside())\n+\t\t\t\t\t\t.getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n+\t\t\treturn attribute.getPlusOutside();\n+\t\t}\n+\t\tif ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n+        setSize(0);\n+\t\tif ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (facet != null) {\n  return facet;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 367, 
          "faulty": "final double k=-(originOffset + w.dotProduct(point)) / dot;", 
          "type": "InsertBefore", 
          "seed": "origin=new Vector3D(-originOffset,w);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Replace", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_390/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:26.630929514 -0500\n@@ -295,16 +295,12 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n+        if (in) {\n+\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n+\t\t\tif (facet != null) {\n+\t\t\t\treturn facet;\n+\t\t\t}\n+\t\t}\n \n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_390/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:18:26.634929534 -0500\n@@ -364,7 +364,8 @@\n             return null;\n         }\n         final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n-        final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n+        origin = new Vector3D(-originOffset, w);\n+\t\tfinal double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 322, 
          "faulty": "final Vector2D point2D=((Plane)node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1547/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:25:08.472631333 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -319,7 +316,8 @@\n      */\n     private SubHyperplane<Euclidean3D> boundaryFacet(final Vector3D point,\n                                                      final BSPTree<Euclidean3D> node) {\n-        final Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n+        setSize(0);\n+\t\tfinal Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 108, 
          "faulty": "return covMatrix[indexOf(i,j)];", 
          "type": "Replace", 
          "seed": "return covMatrix[indexOf(i,j)];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_478/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:55.863072161 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_839/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:58.451612917 -0500\n@@ -291,18 +291,23 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n+        if (getSize() < 0) {\n+\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t} else {\n+\t\t\tsetSize(getSize() / 3.0);\n+\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t}\n \n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                if (cut == null) {\n+\t\t\t\t\treturn null;\n+\t\t\t\t}\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1852/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:27:00.109246536 -0500\n@@ -299,10 +299,8 @@\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 272, 
          "faulty": "final double offset=plane.getOffset((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_37/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:30.102286501 -0500\n@@ -268,7 +268,10 @@\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n-        // establish search order\n+        if (cut == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\t// establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n         final boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n@@ -300,7 +303,8 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n+                setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\t\t\tif (facet != null) {\n                     return facet;\n                 }\n             }\n@@ -323,10 +327,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1227/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:13.668134414 -0500\n@@ -270,7 +270,8 @@\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 361, 
          "faulty": "final Vector3D direction=line.getDirection();", 
          "type": "InsertBefore", 
          "seed": "u=w.orthogonal();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "if (offset < 0) {\n  near=minus;\n  far=plus;\n}\n else {\n  near=plus;\n  far=minus;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_797/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:20:44.163553873 -0500\n@@ -358,7 +358,8 @@\n      * instance (null if the line is parallel to the instance)\n      */\n     public Vector3D intersection(final Line line) {\n-        final Vector3D direction = line.getDirection();\n+        u = w.orthogonal();\n+\t\tfinal Vector3D direction = line.getDirection();\n         final double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_797/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:44.163553873 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (facet != null) {\n  return facet;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 334, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_711/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:14.099426554 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -331,7 +328,8 @@\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n-        return null;\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\treturn null;\n     }\n \n     /** Rotate the region around the specified point.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_719/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:16.655437550 -0500\n@@ -300,9 +300,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n@@ -323,10 +321,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (facet != null) {\n  return facet;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_761/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:31.091499045 -0500\n@@ -300,9 +300,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 284, 
          "faulty": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Replace", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (facet != null) {\n  return facet;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1181/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:56.740072228 -0500\n@@ -281,13 +281,8 @@\n             far  = minus;\n         }\n \n-        if (in) {\n-            // search in the cut hyperplane\n-            final SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n-            if (facet != null) {\n-                return facet;\n-            }\n-        }\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n@@ -301,7 +296,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n@@ -323,7 +317,8 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tif ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 248, 
          "faulty": "return recurseFirstIntersection(getTree(true),point,line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Replace", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1079/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:20.651937009 -0500\n@@ -245,7 +245,9 @@\n      * sub-hyperplaned\n      */\n     public SubHyperplane<Euclidean3D> firstIntersection(final Vector3D point, final Line line) {\n-        return recurseFirstIntersection(getTree(true), point, line);\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\treturn recurseFirstIntersection(getTree(true), point, line);\n     }\n \n     /** Get the first sub-hyperplane crossed by a semi-infinite line.\n@@ -292,17 +294,22 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n+            if (in) {\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point,\n+\t\t\t\t\t\tnode);\n+\t\t\t\tif (facet != null) {\n+\t\t\t\t\treturn facet;\n+\t\t\t\t}\n+\t\t\t}\n         }\n \n         if (!in) {\n-            // search in the cut hyperplane\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t// search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 98, 
          "faulty": "return j < i ? i * (i + 1) / 2 + j : j * (j + 1) / 2 + i;", 
          "type": "Replace", 
          "seed": "return j < i ? i * (i + 1) / 2 + j : j * (j + 1) / 2 + i;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(far,point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1059/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:13.987911615 -0500\n@@ -301,7 +301,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n@@ -325,7 +324,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 273, 
          "faulty": "final boolean in=FastMath.abs(offset) < 1.0e-10;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "Delete", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_577/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:19:30.515233644 -0500\n@@ -270,7 +270,8 @@\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n-        final boolean in    = FastMath.abs(offset) < 1.0e-10;\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\tfinal boolean in    = FastMath.abs(offset) < 1.0e-10;\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n@@ -300,9 +301,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n@@ -327,10 +326,6 @@\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n-            (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusInside();\n-        }\n         return null;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 302, 
          "faulty": "final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);", 
          "type": "InsertBefore", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (cut == null) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_673/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:01.695372711 -0500\n@@ -299,10 +299,14 @@\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                if (in) {\n+\t\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(\n+\t\t\t\t\t\t\tpoint, node);\n+\t\t\t\t\tif (facet != null) {\n+\t\t\t\t\t\treturn facet;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 300, 
          "faulty": "final Vector3D hit3D=plane.intersection(line);", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1463/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:38.448446071 -0500\n@@ -296,7 +296,8 @@\n         }\n \n         if (!in) {\n-            // search in the cut hyperplane\n+            getTree(true).visit(new FacetsContributionVisitor());\n+\t\t\t// search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n@@ -325,7 +326,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 269, 
          "faulty": "final Plane plane=(Plane)cut.getHyperplane();", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1782/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:26:35.297118394 -0500\n@@ -266,7 +266,8 @@\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n-        final Plane               plane = (Plane) cut.getHyperplane();\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tfinal Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,7 +323,6 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 294, 
          "faulty": "if (crossed != null) {\n  return crossed;\n}", 
          "type": "Replace", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_870/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:08.963655796 -0500\n@@ -291,18 +291,18 @@\n \n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n-        if (crossed != null) {\n-            return crossed;\n-        }\n+        if (in) {\n+\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n+\t\t\tif (facet != null) {\n+\t\t\t\treturn facet;\n+\t\t\t}\n+\t\t}\n \n         if (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 263, 
          "faulty": "final SubHyperplane<Euclidean3D> cut=node.getCut();", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "InsertBefore", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1363/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:24:03.220312461 -0500\n@@ -260,7 +260,8 @@\n                                                                 final Vector3D point,\n                                                                 final Line line) {\n \n-        final SubHyperplane<Euclidean3D> cut = node.getCut();\n+        setSize(getSize() / 3.0);\n+\t\tfinal SubHyperplane<Euclidean3D> cut = node.getCut();\n         if (cut == null) {\n             return null;\n         }\n@@ -295,14 +296,17 @@\n             return crossed;\n         }\n \n-        if (!in) {\n+        if (in) {\n+\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point, node);\n+\t\t\tif (facet != null) {\n+\t\t\t\treturn facet;\n+\t\t\t}\n+\t\t}\n+\t\tif (!in) {\n             // search in the cut hyperplane\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 268, 
          "faulty": "final BSPTree<Euclidean3D> plus=node.getPlus();", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_376/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:22.834910521 -0500\n@@ -265,7 +265,8 @@\n             return null;\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n-        final BSPTree<Euclidean3D> plus  = node.getPlus();\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tfinal BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1036/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:06.663883542 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -323,10 +320,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "if (offset < 0) {\n  near=minus;\n  far=plus;\n}\n else {\n  near=plus;\n  far=minus;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1000/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:54.255835577 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n@@ -323,7 +312,8 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tif ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusOutside();\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 267, 
          "faulty": "final BSPTree<Euclidean3D> minus=node.getMinus();", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 362, 
          "faulty": "final double dot=w.dotProduct(direction);", 
          "type": "InsertBefore", 
          "seed": "setFrame();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1022/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:02.015865635 -0500\n@@ -264,7 +264,8 @@\n         if (cut == null) {\n             return null;\n         }\n-        final BSPTree<Euclidean3D> minus = node.getMinus();\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tfinal BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n@@ -300,9 +301,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1022/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:22:02.015865635 -0500\n@@ -359,7 +359,8 @@\n      */\n     public Vector3D intersection(final Line line) {\n         final Vector3D direction = line.getDirection();\n-        final double   dot       = w.dotProduct(direction);\n+        setFrame();\n+\t\tfinal double   dot       = w.dotProduct(direction);\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 366, 
          "faulty": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);", 
          "type": "InsertBefore", 
          "seed": "setFrame();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 269, 
          "faulty": "final Plane plane=(Plane)cut.getHyperplane();", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "if (offset < 0) {\n  near=minus;\n  far=plus;\n}\n else {\n  near=plus;\n  far=minus;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_936/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:21:32.091748563 -0500\n@@ -363,7 +363,8 @@\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n-        final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n+        setFrame();\n+\t\tfinal Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n         final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_936/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:21:32.091748563 -0500\n@@ -266,7 +266,8 @@\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n         final BSPTree<Euclidean3D> plus  = node.getPlus();\n-        final Plane               plane = (Plane) cut.getHyperplane();\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(0, 0, 0));\n+\t\tfinal Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n         final double offset = plane.getOffset((Point<Euclidean3D>) point);\n@@ -295,17 +296,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "return facet;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 334, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1018/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:22:00.595860149 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,13 +322,14 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n-        return null;\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(1.0 / (4 * getSize()),\n+\t\t\t\t(Vector3D) getBarycenter()));\n+\t\treturn null;\n     }\n \n     /** Rotate the region around the specified point.\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/stat/correlation/StorelessCovariance.java", 
          "line": 108, 
          "faulty": "return covMatrix[indexOf(i,j)];", 
          "type": "Replace", 
          "seed": "return covMatrix[indexOf(i,j)];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "throw new CardanEulerSingularityException(false);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 322, 
          "faulty": "final Vector2D point2D=((Plane)node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>)point);", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_675/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:02.147374687 -0500\n@@ -300,9 +300,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -319,14 +316,12 @@\n      */\n     private SubHyperplane<Euclidean3D> boundaryFacet(final Vector3D point,\n                                                      final BSPTree<Euclidean3D> node) {\n-        final Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n+        setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0, 0, 0));\n+\t\tfinal Vector2D point2D = ((Plane) node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>) point);\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 298, 
          "faulty": "if (!in) {\n  final Vector3D hit3D=plane.intersection(line);\n  if (hit3D != null) {\n    final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n    if (facet != null) {\n      return facet;\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "if (offset < 0) {\n  near=minus;\n  far=plus;\n}\n else {\n  near=plus;\n  far=minus;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 301, 
          "faulty": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}", 
          "type": "Delete", 
          "seed": "far=plus;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_668/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:20:00.347366811 -0500\n@@ -295,17 +295,6 @@\n             return crossed;\n         }\n \n-        if (!in) {\n-            // search in the cut hyperplane\n-            final Vector3D hit3D = plane.intersection(line);\n-            if (hit3D != null) {\n-                final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n-            }\n-        }\n-\n         // search in the far branch\n         return recurseFirstIntersection(far, point, line);\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 328, 
          "faulty": "return attribute.getPlusOutside();", 
          "type": "Delete", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(0,0,0));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 330, 
          "faulty": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}", 
          "type": "InsertBefore", 
          "seed": "if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusInside();\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 278, 
          "faulty": "far=plus;", 
          "type": "InsertBefore", 
          "seed": "setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_386/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:25.798925361 -0500\n@@ -275,7 +275,9 @@\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n             near = minus;\n-            far  = plus;\n+            setBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\tfar  = plus;\n         } else {\n             near = plus;\n             far  = minus;\n@@ -300,9 +302,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n@@ -325,9 +324,13 @@\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n         if ((attribute.getPlusOutside() != null) &&\n             (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n         }\n-        if ((attribute.getPlusInside() != null) &&\n+        if ((attribute.getPlusInside() != null)\n+\t\t\t\t&& (((SubPlane) attribute.getPlusInside()).getRemainingRegion()\n+\t\t\t\t\t\t.checkPoint(point2D) == Location.INSIDE)) {\n+\t\t\treturn attribute.getPlusInside();\n+\t\t}\n+\t\tif ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 326, 
          "faulty": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}", 
          "type": "Delete", 
          "seed": "if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n  return attribute.getPlusOutside();\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 366, 
          "faulty": "final Vector3D point=line.toSpace((Point<Euclidean1D>)Vector1D.ZERO);", 
          "type": "InsertBefore", 
          "seed": "u=w.orthogonal();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java", 
          "line": 367, 
          "faulty": "final double k=-(originOffset + w.dotProduct(point)) / dot;", 
          "type": "InsertBefore", 
          "seed": "originOffset=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_112/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:53.614427442 -0500\n@@ -300,7 +300,8 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n+                setSize(getSize() / 3.0);\n+\t\t\t\tif (facet != null) {\n                     return facet;\n                 }\n             }\n@@ -323,10 +324,6 @@\n         @SuppressWarnings(\"unchecked\")\n         final BoundaryAttribute<Euclidean3D> attribute =\n             (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n-        if ((attribute.getPlusOutside() != null) &&\n-            (((SubPlane) attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n-            return attribute.getPlusOutside();\n-        }\n         if ((attribute.getPlusInside() != null) &&\n             (((SubPlane) attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {\n             return attribute.getPlusInside();\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 05:56:21.408109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_112/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Plane.java\t2018-12-29 06:16:53.618427465 -0500\n@@ -363,8 +363,10 @@\n         if (FastMath.abs(dot) < 1.0e-10) {\n             return null;\n         }\n-        final Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n-        final double   k     = -(originOffset + w.dotProduct(point)) / dot;\n+        u = w.orthogonal();\n+\t\tfinal Vector3D point = line.toSpace((Point<Euclidean1D>) Vector1D.ZERO);\n+        originOffset = 0;\n+\t\tfinal double   k     = -(originOffset + w.dotProduct(point)) / dot;\n         return new Vector3D(1.0, point, k, direction);\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 277, 
          "faulty": "near=minus;", 
          "type": "InsertBefore", 
          "seed": "setSize(getSize() / 3.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_434/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:40.742999161 -0500\n@@ -274,7 +274,8 @@\n         final BSPTree<Euclidean3D> near;\n         final BSPTree<Euclidean3D> far;\n         if (offset < 0) {\n-            near = minus;\n+            setSize(getSize() / 3.0);\n+\t\t\tnear = minus;\n             far  = plus;\n         } else {\n             near = plus;\n@@ -301,7 +302,6 @@\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n                 if (facet != null) {\n-                    return facet;\n                 }\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Replace", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_124/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:16:57.038447440 -0500\n@@ -300,9 +300,7 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n+                getTree(true).visit(new FacetsContributionVisitor());\n             }\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 268, 
          "faulty": "final BSPTree<Euclidean3D> plus=node.getPlus();", 
          "type": "InsertBefore", 
          "seed": "getTree(true).visit(new FacetsContributionVisitor());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "if (hit3D != null) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(hit3D,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "InsertBefore", 
          "seed": "if (getSize() < 0) {\n  setSize(Double.POSITIVE_INFINITY);\n  setBarycenter((Point<Euclidean3D>)Vector3D.NaN);\n}\n else {\n  setSize(getSize() / 3.0);\n  setBarycenter((Point<Euclidean3D>)new Vector3D(1.0 / (4 * getSize()),(Vector3D)getBarycenter()));\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_1296/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:23:37.988222503 -0500\n@@ -265,7 +265,8 @@\n             return null;\n         }\n         final BSPTree<Euclidean3D> minus = node.getMinus();\n-        final BSPTree<Euclidean3D> plus  = node.getPlus();\n+        getTree(true).visit(new FacetsContributionVisitor());\n+\t\tfinal BSPTree<Euclidean3D> plus  = node.getPlus();\n         final Plane               plane = (Plane) cut.getHyperplane();\n \n         // establish search order\n@@ -300,8 +301,15 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n+                if (getSize() < 0) {\n+\t\t\t\t\tsetSize(Double.POSITIVE_INFINITY);\n+\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) Vector3D.NaN);\n+\t\t\t\t} else {\n+\t\t\t\t\tsetSize(getSize() / 3.0);\n+\t\t\t\t\tsetBarycenter((Point<Euclidean3D>) new Vector3D(\n+\t\t\t\t\t\t\t1.0 / (4 * getSize()), (Vector3D) getBarycenter()));\n+\t\t\t\t}\n+\t\t\t\tif (facet != null) {\n                 }\n             }\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 304, 
          "faulty": "return facet;", 
          "type": "Delete", 
          "seed": "return recurseFirstIntersection(getTree(true),point,line);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 303, 
          "faulty": "if (facet != null) {\n  return facet;\n}", 
          "type": "Delete", 
          "seed": "near=minus;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 295, 
          "faulty": "return crossed;", 
          "type": "Replace", 
          "seed": "if (in) {\n  final SubHyperplane<Euclidean3D> facet=boundaryFacet(point,node);\n  if (facet != null) {\n    return facet;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:56:21.412109000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/patches_g2lc/Patch_452/patched/tmp/Arja_Bug_dot_jar_Commons-Math_a06a1584/src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 06:18:47.355031284 -0500\n@@ -292,7 +292,13 @@\n         // search in the near branch\n         final SubHyperplane<Euclidean3D> crossed = recurseFirstIntersection(near, point, line);\n         if (crossed != null) {\n-            return crossed;\n+            if (in) {\n+\t\t\t\tfinal SubHyperplane<Euclidean3D> facet = boundaryFacet(point,\n+\t\t\t\t\t\tnode);\n+\t\t\t\tif (facet != null) {\n+\t\t\t\t\treturn facet;\n+\t\t\t\t}\n+\t\t\t}\n         }\n \n         if (!in) {\n@@ -300,9 +306,6 @@\n             final Vector3D hit3D = plane.intersection(line);\n             if (hit3D != null) {\n                 final SubHyperplane<Euclidean3D> facet = boundaryFacet(hit3D, node);\n-                if (facet != null) {\n-                    return facet;\n-                }\n             }\n         }\n \n\n\n"
    }
  ]
}