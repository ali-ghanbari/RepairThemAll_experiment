{
  "repair_end": "2018-12-30 23:05:19.011808", 
  "repair_begin": "2018-12-30 21:36:40.738203", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/util/FastMath.java", 
          "line": 3293, 
          "faulty": "final long sign=bits & 0x8000000000000000L;", 
          "type": "InsertBefore", 
          "seed": "long result=1l;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/util/FastMath.java", 
          "line": 3294, 
          "faulty": "if ((direction < d) ^ (sign == 0L)) {\n  return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) + 1));\n}\n else {\n  return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) - 1));\n}", 
          "type": "Replace", 
          "seed": "if ((direction < d) ^ (sign == 0L)) {\n  return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) + 1));\n}\n else {\n  return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) - 1));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java", 
          "line": 126, 
          "faulty": "isLastStep=false;", 
          "type": "InsertBefore", 
          "seed": "if (forward) {\n  if (stepStart + stepSize >= t) {\n    stepSize=t - stepStart;\n  }\n}\n else {\n  if (stepStart + stepSize <= t) {\n    stepSize=t - stepStart;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_69273dca/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java\t2018-12-30 15:35:56.038638000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_69273dca/patches_ys4q/Patch_1524/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_69273dca/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java\t2018-12-30 17:03:40.164876038 -0500\n@@ -122,7 +122,16 @@\n     stepSize  = forward ? step : -step;\n     initIntegration(equations.getTime(), y0, t);\n \n-    // main integration loop\n+    if (forward) {\n+\t\tif (stepStart + stepSize >= t) {\n+\t\t\tstepSize = t - stepStart;\n+\t\t}\n+\t} else {\n+\t\tif (stepStart + stepSize <= t) {\n+\t\t\tstepSize = t - stepStart;\n+\t\t}\n+\t}\n+\t// main integration loop\n     isLastStep = false;\n     do {\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_69273dca/src/main/java/org/apache/commons/math3/util/FastMath.java\t2018-12-30 15:35:56.326638000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_69273dca/patches_ys4q/Patch_1524/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_69273dca/src/main/java/org/apache/commons/math3/util/FastMath.java\t2018-12-30 17:03:40.188876377 -0500\n@@ -3290,12 +3290,15 @@\n         // are handled just as normal numbers\n         // can use raw bits since already dealt with infinity and NaN\n         final long bits = Double.doubleToRawLongBits(d);\n-        final long sign = bits & 0x8000000000000000L;\n+        long result = 1l;\n+\t\tfinal long sign = bits & 0x8000000000000000L;\n         if ((direction < d) ^ (sign == 0L)) {\n-            return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) + 1));\n-        } else {\n-            return Double.longBitsToDouble(sign | ((bits & 0x7fffffffffffffffL) - 1));\n-        }\n+\t\t\treturn Double.longBitsToDouble(sign\n+\t\t\t\t\t| ((bits & 0x7fffffffffffffffL) + 1));\n+\t\t} else {\n+\t\t\treturn Double.longBitsToDouble(sign\n+\t\t\t\t\t| ((bits & 0x7fffffffffffffffL) - 1));\n+\t\t}\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java", 
          "line": 126, 
          "faulty": "isLastStep=false;", 
          "type": "InsertBefore", 
          "seed": "if (forward) {\n  if (stepStart + stepSize >= t) {\n    stepSize=t - stepStart;\n  }\n}\n else {\n  if (stepStart + stepSize <= t) {\n    stepSize=t - stepStart;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_69273dca/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java\t2018-12-30 15:35:56.038638000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_69273dca/patches_ys4q/Patch_1557/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_69273dca/src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java\t2018-12-30 17:04:55.513936578 -0500\n@@ -122,7 +122,16 @@\n     stepSize  = forward ? step : -step;\n     initIntegration(equations.getTime(), y0, t);\n \n-    // main integration loop\n+    if (forward) {\n+\t\tif (stepStart + stepSize >= t) {\n+\t\t\tstepSize = t - stepStart;\n+\t\t}\n+\t} else {\n+\t\tif (stepStart + stepSize <= t) {\n+\t\t\tstepSize = t - stepStart;\n+\t\t}\n+\t}\n+\t// main integration loop\n     isLastStep = false;\n     do {\n \n\n\n"
    }
  ]
}