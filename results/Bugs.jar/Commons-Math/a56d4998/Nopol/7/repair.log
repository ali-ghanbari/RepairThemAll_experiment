cd /tmp/Nopol_Bug_dot_jar_Commons-Math_a56d4998;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/";
time java -Xmx4g -Xms1g -cp /home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin//../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis smt \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /home/tdurieux/defects4j4repair/script/../libs/z3/build/z3 \
	--complianceLevel 7 \
	--source src/main/java \
	--classpath "target/classes:target/test-classes:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
09:27:53.720 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
09:27:53.735 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/tmp/Nopol_Bug_dot_jar_Commons-Math_a56d4998/target/classes/, file:/tmp/Nopol_Bug_dot_jar_Commons-Math_a56d4998/target/test-classes/, file:/home/tdurieux/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/home/tdurieux/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/home/tdurieux/defects4j4repair/script/../repair_tools/nopol.jar]
09:27:53.735 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
09:27:53.736 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.commons.math4.RetryRunnerTest, org.apache.commons.math4.analysis.FunctionUtilsTest, org.apache.commons.math4.analysis.differentiation.DSCompilerTest, org.apache.commons.math4.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math4.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math4.analysis.differentiation.GradientFunctionTest, org.apache.commons.math4.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math4.analysis.differentiation.SparseGradientTest, org.apache.commons.math4.analysis.function.GaussianTest, org.apache.commons.math4.analysis.function.HarmonicOscillatorTest, org.apache.commons.math4.analysis.function.LogisticTest, org.apache.commons.math4.analysis.function.LogitTest, org.apache.commons.math4.analysis.function.SigmoidTest, org.apache.commons.math4.analysis.function.SincTest, org.apache.commons.math4.analysis.function.SqrtTest, org.apache.commons.math4.analysis.function.StepFunctionTest, org.apache.commons.math4.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math4.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math4.analysis.integration.MidPointIntegratorTest, org.apache.commons.math4.analysis.integration.RombergIntegratorTest, org.apache.commons.math4.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math4.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math4.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math4.analysis.integration.gauss.GaussIntegratorTest, org.apache.commons.math4.analysis.integration.gauss.HermiteParametricTest, org.apache.commons.math4.analysis.integration.gauss.HermiteTest, org.apache.commons.math4.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math4.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math4.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math4.analysis.integration.gauss.LegendreTest, org.apache.commons.math4.analysis.interpolation.AkimaSplineInterpolatorTest, org.apache.commons.math4.analysis.interpolation.BicubicInterpolatingFunctionTest, org.apache.commons.math4.analysis.interpolation.BicubicInterpolatorTest, org.apache.commons.math4.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math4.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math4.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math4.analysis.interpolation.FieldHermiteInterpolatorTest, org.apache.commons.math4.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math4.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math4.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math4.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math4.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunctionTest, org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatorTest, org.apache.commons.math4.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math4.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math4.analysis.interpolation.TricubicInterpolatingFunctionTest, org.apache.commons.math4.analysis.interpolation.TricubicInterpolatorTest, org.apache.commons.math4.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math4.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math4.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math4.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math4.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math4.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math4.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math4.analysis.solvers.BisectionSolverTest, org.apache.commons.math4.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math4.analysis.solvers.BrentSolverTest, org.apache.commons.math4.analysis.solvers.IllinoisSolverTest, org.apache.commons.math4.analysis.solvers.LaguerreSolverTest, org.apache.commons.math4.analysis.solvers.MullerSolver2Test, org.apache.commons.math4.analysis.solvers.MullerSolverTest, org.apache.commons.math4.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math4.analysis.solvers.NewtonSolverTest, org.apache.commons.math4.analysis.solvers.PegasusSolverTest, org.apache.commons.math4.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math4.analysis.solvers.RiddersSolverTest, org.apache.commons.math4.analysis.solvers.SecantSolverTest, org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math4.complex.ComplexFieldTest, org.apache.commons.math4.complex.ComplexFormatTest, org.apache.commons.math4.complex.ComplexTest, org.apache.commons.math4.complex.ComplexUtilsTest, org.apache.commons.math4.complex.FrenchComplexFormatTest, org.apache.commons.math4.complex.QuaternionTest, org.apache.commons.math4.complex.RootsOfUnityTest, org.apache.commons.math4.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math4.dfp.DfpDecTest, org.apache.commons.math4.dfp.DfpMathTest, org.apache.commons.math4.dfp.DfpTest, org.apache.commons.math4.distribution.AbstractIntegerDistributionTest, org.apache.commons.math4.distribution.AbstractRealDistributionTest, org.apache.commons.math4.distribution.BetaDistributionTest, org.apache.commons.math4.distribution.BinomialDistributionTest, org.apache.commons.math4.distribution.CauchyDistributionTest, org.apache.commons.math4.distribution.ChiSquaredDistributionTest, org.apache.commons.math4.distribution.ConstantRealDistributionTest, org.apache.commons.math4.distribution.EnumeratedIntegerDistributionTest, org.apache.commons.math4.distribution.EnumeratedRealDistributionTest, org.apache.commons.math4.distribution.ExponentialDistributionTest, org.apache.commons.math4.distribution.FDistributionTest, org.apache.commons.math4.distribution.GammaDistributionTest, org.apache.commons.math4.distribution.GeometricDistributionTest, org.apache.commons.math4.distribution.GumbelDistributionTest, org.apache.commons.math4.distribution.HypergeometricDistributionTest, org.apache.commons.math4.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math4.distribution.LaplaceDistributionTest, org.apache.commons.math4.distribution.LevyDistributionTest, org.apache.commons.math4.distribution.LogNormalDistributionTest, org.apache.commons.math4.distribution.LogisticsDistributionTest, org.apache.commons.math4.distribution.MultivariateNormalDistributionTest, org.apache.commons.math4.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math4.distribution.NakagamiDistributionTest, org.apache.commons.math4.distribution.NormalDistributionTest, org.apache.commons.math4.distribution.ParetoDistributionTest, org.apache.commons.math4.distribution.PascalDistributionTest, org.apache.commons.math4.distribution.PoissonDistributionTest, org.apache.commons.math4.distribution.TDistributionTest, org.apache.commons.math4.distribution.TriangularDistributionTest, org.apache.commons.math4.distribution.UniformIntegerDistributionTest, org.apache.commons.math4.distribution.UniformRealDistributionTest, org.apache.commons.math4.distribution.WeibullDistributionTest, org.apache.commons.math4.distribution.ZipfDistributionTest, org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest, org.apache.commons.math4.exception.DimensionMismatchExceptionTest, org.apache.commons.math4.exception.MaxCountExceededExceptionTest, org.apache.commons.math4.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math4.exception.NotPositiveExceptionTest, org.apache.commons.math4.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math4.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math4.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math4.exception.OutOfRangeExceptionTest, org.apache.commons.math4.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math4.exception.util.ArgUtilsTest, org.apache.commons.math4.exception.util.ExceptionContextTest, org.apache.commons.math4.exception.util.LocalizedFormatsTest, org.apache.commons.math4.filter.KalmanFilterTest, org.apache.commons.math4.fitting.CurveFitterTest, org.apache.commons.math4.fitting.GaussianCurveFitterTest, org.apache.commons.math4.fitting.GaussianFitterTest, org.apache.commons.math4.fitting.HarmonicCurveFitterTest, org.apache.commons.math4.fitting.HarmonicFitterTest, org.apache.commons.math4.fitting.PolynomialCurveFitterTest, org.apache.commons.math4.fitting.PolynomialFitterTest, org.apache.commons.math4.fitting.SimpleCurveFitterTest, org.apache.commons.math4.fitting.WeightedObservedPointsTest, org.apache.commons.math4.fitting.leastsquares.EvaluationRmsCheckerTest, org.apache.commons.math4.fitting.leastsquares.EvaluationTest, org.apache.commons.math4.fitting.leastsquares.EvaluationTestValidation, org.apache.commons.math4.fitting.leastsquares.GaussNewtonOptimizerWithCholeskyTest, org.apache.commons.math4.fitting.leastsquares.GaussNewtonOptimizerWithLUTest, org.apache.commons.math4.fitting.leastsquares.GaussNewtonOptimizerWithQRTest, org.apache.commons.math4.fitting.leastsquares.GaussNewtonOptimizerWithSVDTest, org.apache.commons.math4.fitting.leastsquares.LevenbergMarquardtOptimizerTest, org.apache.commons.math4.fitting.leastsquares.MinpackTest, org.apache.commons.math4.fraction.BigFractionFieldTest, org.apache.commons.math4.fraction.BigFractionFormatTest, org.apache.commons.math4.fraction.BigFractionTest, org.apache.commons.math4.fraction.FractionFieldTest, org.apache.commons.math4.fraction.FractionFormatTest, org.apache.commons.math4.fraction.FractionTest, org.apache.commons.math4.genetics.BinaryChromosomeTest, org.apache.commons.math4.genetics.BinaryMutationTest, org.apache.commons.math4.genetics.ChromosomeTest, org.apache.commons.math4.genetics.CycleCrossoverTest, org.apache.commons.math4.genetics.ElitisticListPopulationTest, org.apache.commons.math4.genetics.FitnessCachingTest, org.apache.commons.math4.genetics.FixedElapsedTimeTest, org.apache.commons.math4.genetics.FixedGenerationCountTest, org.apache.commons.math4.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math4.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math4.genetics.ListPopulationTest, org.apache.commons.math4.genetics.NPointCrossoverTest, org.apache.commons.math4.genetics.OnePointCrossoverTest, org.apache.commons.math4.genetics.OrderedCrossoverTest, org.apache.commons.math4.genetics.RandomKeyMutationTest, org.apache.commons.math4.genetics.RandomKeyTest, org.apache.commons.math4.genetics.TournamentSelectionTest, org.apache.commons.math4.genetics.UniformCrossoverTest, org.apache.commons.math4.geometry.enclosing.WelzlEncloser2DTest, org.apache.commons.math4.geometry.enclosing.WelzlEncloser3DTest, org.apache.commons.math4.geometry.euclidean.oned.Euclidean1DTest, org.apache.commons.math4.geometry.euclidean.oned.FrenchVector1DFormatTest, org.apache.commons.math4.geometry.euclidean.oned.IntervalTest, org.apache.commons.math4.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math4.geometry.euclidean.oned.Vector1DFormatTest, org.apache.commons.math4.geometry.euclidean.oned.Vector1DTest, org.apache.commons.math4.geometry.euclidean.threed.Euclidean3DTest, org.apache.commons.math4.geometry.euclidean.threed.FieldRotationDSTest, org.apache.commons.math4.geometry.euclidean.threed.FieldRotationDfpTest, org.apache.commons.math4.geometry.euclidean.threed.FieldVector3DTest, org.apache.commons.math4.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math4.geometry.euclidean.threed.LineTest, org.apache.commons.math4.geometry.euclidean.threed.PlaneTest, org.apache.commons.math4.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math4.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math4.geometry.euclidean.threed.RotationTest, org.apache.commons.math4.geometry.euclidean.threed.SphereGeneratorTest, org.apache.commons.math4.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math4.geometry.euclidean.threed.SubLineTest, org.apache.commons.math4.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math4.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math4.geometry.euclidean.twod.DiskGeneratorTest, org.apache.commons.math4.geometry.euclidean.twod.Euclidean2DTest, org.apache.commons.math4.geometry.euclidean.twod.FrenchVector2DFormatTest, org.apache.commons.math4.geometry.euclidean.twod.LineTest, org.apache.commons.math4.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math4.geometry.euclidean.twod.SegmentTest, org.apache.commons.math4.geometry.euclidean.twod.SubLineTest, org.apache.commons.math4.geometry.euclidean.twod.Vector2DFormatTest, org.apache.commons.math4.geometry.euclidean.twod.Vector2DTest, org.apache.commons.math4.geometry.euclidean.twod.hull.AklToussaintHeuristicTest, org.apache.commons.math4.geometry.euclidean.twod.hull.MonotoneChainTest, org.apache.commons.math4.geometry.spherical.oned.ArcTest, org.apache.commons.math4.geometry.spherical.oned.ArcsSetTest, org.apache.commons.math4.geometry.spherical.oned.LimitAngleTest, org.apache.commons.math4.geometry.spherical.oned.S1PointTest, org.apache.commons.math4.geometry.spherical.oned.Sphere1Test, org.apache.commons.math4.geometry.spherical.twod.CircleTest, org.apache.commons.math4.geometry.spherical.twod.S2PointTest, org.apache.commons.math4.geometry.spherical.twod.SphericalPolygonsSetTest, org.apache.commons.math4.geometry.spherical.twod.SubCircleTest, org.apache.commons.math4.linear.Array2DRowRealMatrixTest, org.apache.commons.math4.linear.ArrayFieldVectorTest, org.apache.commons.math4.linear.ArrayRealVectorTest, org.apache.commons.math4.linear.BiDiagonalTransformerTest, org.apache.commons.math4.linear.BlockFieldMatrixTest, org.apache.commons.math4.linear.BlockRealMatrixTest, org.apache.commons.math4.linear.CholeskyDecompositionTest, org.apache.commons.math4.linear.CholeskySolverTest, org.apache.commons.math4.linear.ConjugateGradientTest, org.apache.commons.math4.linear.DiagonalMatrixTest, org.apache.commons.math4.linear.EigenDecompositionTest, org.apache.commons.math4.linear.EigenSolverTest, org.apache.commons.math4.linear.FieldLUDecompositionTest, org.apache.commons.math4.linear.FieldLUSolverTest, org.apache.commons.math4.linear.FieldMatrixImplTest, org.apache.commons.math4.linear.FrenchRealVectorFormatTest, org.apache.commons.math4.linear.HessenbergTransformerTest, org.apache.commons.math4.linear.LUDecompositionTest, org.apache.commons.math4.linear.LUSolverTest, org.apache.commons.math4.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math4.linear.MatrixUtilsTest, org.apache.commons.math4.linear.OpenMapRealMatrixTest, org.apache.commons.math4.linear.QRDecompositionTest, org.apache.commons.math4.linear.QRSolverTest, org.apache.commons.math4.linear.RRQRDecompositionTest, org.apache.commons.math4.linear.RRQRSolverTest, org.apache.commons.math4.linear.RealMatrixFormatTest, org.apache.commons.math4.linear.RealVectorFormatTest, org.apache.commons.math4.linear.RealVectorTest, org.apache.commons.math4.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math4.linear.SchurTransformerTest, org.apache.commons.math4.linear.SingularValueDecompositionTest, org.apache.commons.math4.linear.SingularValueSolverTest, org.apache.commons.math4.linear.SparseFieldMatrixTest, org.apache.commons.math4.linear.SparseFieldVectorTest, org.apache.commons.math4.linear.SparseRealMatrixTest, org.apache.commons.math4.linear.SparseRealVectorTest, org.apache.commons.math4.linear.SymmLQTest, org.apache.commons.math4.linear.TriDiagonalTransformerTest, org.apache.commons.math4.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math4.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math4.ml.clustering.DBSCANClustererTest, org.apache.commons.math4.ml.clustering.FuzzyKMeansClustererTest, org.apache.commons.math4.ml.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math4.ml.clustering.MultiKMeansPlusPlusClustererTest, org.apache.commons.math4.ml.clustering.evaluation.SumOfClusterVariancesTest, org.apache.commons.math4.ml.distance.CanberraDistanceTest, org.apache.commons.math4.ml.distance.ChebyshevDistanceTest, org.apache.commons.math4.ml.distance.EarthMoversDistanceTest, org.apache.commons.math4.ml.distance.EuclideanDistanceTest, org.apache.commons.math4.ml.distance.ManhattanDistanceTest, org.apache.commons.math4.ml.neuralnet.MapUtilsTest, org.apache.commons.math4.ml.neuralnet.NetworkTest, org.apache.commons.math4.ml.neuralnet.NeuronTest, org.apache.commons.math4.ml.neuralnet.oned.NeuronStringTest, org.apache.commons.math4.ml.neuralnet.sofm.KohonenTrainingTaskTest, org.apache.commons.math4.ml.neuralnet.sofm.KohonenUpdateActionTest, org.apache.commons.math4.ml.neuralnet.sofm.LearningFactorFunctionFactoryTest, org.apache.commons.math4.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactoryTest, org.apache.commons.math4.ml.neuralnet.sofm.util.ExponentialDecayFunctionTest, org.apache.commons.math4.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunctionTest, org.apache.commons.math4.ml.neuralnet.twod.NeuronSquareMesh2DTest, org.apache.commons.math4.ode.ContinuousOutputModelTest, org.apache.commons.math4.ode.FirstOrderConverterTest, org.apache.commons.math4.ode.JacobianMatricesTest, org.apache.commons.math4.ode.events.EventFilterTest, org.apache.commons.math4.ode.events.EventStateTest, org.apache.commons.math4.ode.events.OverlappingEventsTest, org.apache.commons.math4.ode.events.ReappearingEventTest, org.apache.commons.math4.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math4.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math4.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math4.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math4.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math4.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math4.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math4.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math4.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math4.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math4.ode.nonstiff.GillIntegratorTest, org.apache.commons.math4.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math4.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math4.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math4.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math4.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math4.ode.nonstiff.LutherIntegratorTest, org.apache.commons.math4.ode.nonstiff.LutherStepInterpolatorTest, org.apache.commons.math4.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math4.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math4.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math4.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math4.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math4.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math4.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math4.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math4.ode.sampling.StepNormalizerTest, org.apache.commons.math4.optim.PointValuePairTest, org.apache.commons.math4.optim.PointVectorValuePairTest, org.apache.commons.math4.optim.SimplePointCheckerTest, org.apache.commons.math4.optim.SimpleValueCheckerTest, org.apache.commons.math4.optim.SimpleVectorValueCheckerTest, org.apache.commons.math4.optim.linear.SimplexSolverTest, org.apache.commons.math4.optim.linear.SimplexTableauTest, org.apache.commons.math4.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math4.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math4.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math4.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math4.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math4.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math4.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math4.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math4.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math4.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math4.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math4.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math4.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math4.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math4.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math4.optim.univariate.BracketFinderTest, org.apache.commons.math4.optim.univariate.BrentOptimizerTest, org.apache.commons.math4.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math4.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math4.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math4.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math4.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math4.optimization.PointValuePairTest, org.apache.commons.math4.optimization.PointVectorValuePairTest, org.apache.commons.math4.optimization.SimplePointCheckerTest, org.apache.commons.math4.optimization.SimpleValueCheckerTest, org.apache.commons.math4.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math4.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math4.optimization.direct.CMAESOptimizerTest, org.apache.commons.math4.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math4.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math4.optimization.direct.PowellOptimizerTest, org.apache.commons.math4.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math4.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math4.optimization.fitting.CurveFitterTest, org.apache.commons.math4.optimization.fitting.GaussianFitterTest, org.apache.commons.math4.optimization.fitting.HarmonicFitterTest, org.apache.commons.math4.optimization.fitting.PolynomialFitterTest, org.apache.commons.math4.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math4.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math4.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math4.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math4.optimization.general.MinpackTest, org.apache.commons.math4.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math4.optimization.linear.SimplexSolverTest, org.apache.commons.math4.optimization.linear.SimplexTableauTest, org.apache.commons.math4.optimization.univariate.BracketFinderTest, org.apache.commons.math4.optimization.univariate.BrentOptimizerTest, org.apache.commons.math4.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math4.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math4.primes.PrimesTest, org.apache.commons.math4.random.AbstractRandomGeneratorTest, org.apache.commons.math4.random.BitsStreamGeneratorTest, org.apache.commons.math4.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math4.random.EmpiricalDistributionTest, org.apache.commons.math4.random.GaussianRandomGeneratorTest, org.apache.commons.math4.random.HaltonSequenceGeneratorTest, org.apache.commons.math4.random.ISAACTest, org.apache.commons.math4.random.MersenneTwisterTest, org.apache.commons.math4.random.RandomAdaptorTest, org.apache.commons.math4.random.RandomDataGeneratorTest, org.apache.commons.math4.random.RandomGeneratorAbstractTest, org.apache.commons.math4.random.RandomGeneratorFactoryTest, org.apache.commons.math4.random.SobolSequenceGeneratorTest, org.apache.commons.math4.random.StableRandomGeneratorTest, org.apache.commons.math4.random.SynchronizedRandomGeneratorTest, org.apache.commons.math4.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math4.random.UniformRandomGeneratorTest, org.apache.commons.math4.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math4.random.ValueServerTest, org.apache.commons.math4.random.Well1024aTest, org.apache.commons.math4.random.Well19937aTest, org.apache.commons.math4.random.Well19937cTest, org.apache.commons.math4.random.Well44497aTest, org.apache.commons.math4.random.Well44497bTest, org.apache.commons.math4.random.Well512aTest, org.apache.commons.math4.special.BesselJTest, org.apache.commons.math4.special.BetaTest, org.apache.commons.math4.special.ErfTest, org.apache.commons.math4.special.GammaTest, org.apache.commons.math4.stat.CertifiedDataTest, org.apache.commons.math4.stat.FrequencyTest, org.apache.commons.math4.stat.StatUtilsTest, org.apache.commons.math4.stat.correlation.CovarianceTest, org.apache.commons.math4.stat.correlation.KendallsCorrelationTest, org.apache.commons.math4.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math4.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math4.stat.correlation.StorelessCovarianceTest, org.apache.commons.math4.stat.data.LewTest, org.apache.commons.math4.stat.data.LotteryTest, org.apache.commons.math4.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math4.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math4.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math4.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math4.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math4.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math4.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math4.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math4.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math4.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math4.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math4.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math4.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math4.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math4.stat.descriptive.moment.InteractionTest, org.apache.commons.math4.stat.descriptive.moment.KurtosisTest, org.apache.commons.math4.stat.descriptive.moment.MeanTest, org.apache.commons.math4.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math4.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math4.stat.descriptive.moment.SkewnessTest, org.apache.commons.math4.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math4.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math4.stat.descriptive.moment.VarianceTest, org.apache.commons.math4.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math4.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math4.stat.descriptive.rank.MaxTest, org.apache.commons.math4.stat.descriptive.rank.MedianTest, org.apache.commons.math4.stat.descriptive.rank.MinTest, org.apache.commons.math4.stat.descriptive.rank.PSquarePercentileTest, org.apache.commons.math4.stat.descriptive.rank.PercentileTest, org.apache.commons.math4.stat.descriptive.summary.ProductTest, org.apache.commons.math4.stat.descriptive.summary.SumLogTest, org.apache.commons.math4.stat.descriptive.summary.SumSqTest, org.apache.commons.math4.stat.descriptive.summary.SumTest, org.apache.commons.math4.stat.inference.BinomialTestTest, org.apache.commons.math4.stat.inference.ChiSquareTestTest, org.apache.commons.math4.stat.inference.GTestTest, org.apache.commons.math4.stat.inference.KolmogorovSmirnovTestTest, org.apache.commons.math4.stat.inference.MannWhitneyUTestTest, org.apache.commons.math4.stat.inference.OneWayAnovaTest, org.apache.commons.math4.stat.inference.TTestTest, org.apache.commons.math4.stat.inference.TestUtilsTest, org.apache.commons.math4.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math4.stat.interval.AgrestiCoullIntervalTest, org.apache.commons.math4.stat.interval.ClopperPearsonIntervalTest, org.apache.commons.math4.stat.interval.IntervalUtilsTest, org.apache.commons.math4.stat.interval.NormalApproximationIntervalTest, org.apache.commons.math4.stat.interval.WilsonScoreIntervalTest, org.apache.commons.math4.stat.ranking.NaturalRankingTest, org.apache.commons.math4.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math4.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math4.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math4.stat.regression.SimpleRegressionTest, org.apache.commons.math4.transform.FastCosineTransformerTest, org.apache.commons.math4.transform.FastFourierTransformerTest, org.apache.commons.math4.transform.FastHadamardTransformerTest, org.apache.commons.math4.transform.FastSineTransformerTest, org.apache.commons.math4.util.ArithmeticUtilsTest, org.apache.commons.math4.util.BigRealFieldTest, org.apache.commons.math4.util.BigRealTest, org.apache.commons.math4.util.CombinationsTest, org.apache.commons.math4.util.CombinatoricsUtilsTest, org.apache.commons.math4.util.ContinuedFractionTest, org.apache.commons.math4.util.Decimal64Test, org.apache.commons.math4.util.DefaultTransformerTest, org.apache.commons.math4.util.FastMathStrictComparisonTest, org.apache.commons.math4.util.FastMathTest, org.apache.commons.math4.util.FastMathTestPerformance, org.apache.commons.math4.util.IncrementorTest, org.apache.commons.math4.util.MathArraysTest, org.apache.commons.math4.util.MathUtilsTest, org.apache.commons.math4.util.MultidimensionalCounterTest, org.apache.commons.math4.util.OpenIntToDoubleHashMapTest, org.apache.commons.math4.util.OpenIntToFieldTest, org.apache.commons.math4.util.PairTest, org.apache.commons.math4.util.PrecisionTest, org.apache.commons.math4.util.ResizableDoubleArrayTest, org.apache.commons.math4.util.TransformerMapTest]
09:27:53.739 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/home/tdurieux/defects4j4repair/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@66d33a', projectTests=[org.apache.commons.math4.RetryRunnerTest, org.apache.commons.math4.analysis.FunctionUtilsTest, org.apache.commons.math4.analysis.differentiation.DSCompilerTest, org.apache.commons.math4.analysis.differentiation.DerivativeStructureTest, org.apache.commons.math4.analysis.differentiation.FiniteDifferencesDifferentiatorTest, org.apache.commons.math4.analysis.differentiation.GradientFunctionTest, org.apache.commons.math4.analysis.differentiation.JacobianFunctionTest, org.apache.commons.math4.analysis.differentiation.SparseGradientTest, org.apache.commons.math4.analysis.function.GaussianTest, org.apache.commons.math4.analysis.function.HarmonicOscillatorTest, org.apache.commons.math4.analysis.function.LogisticTest, org.apache.commons.math4.analysis.function.LogitTest, org.apache.commons.math4.analysis.function.SigmoidTest, org.apache.commons.math4.analysis.function.SincTest, org.apache.commons.math4.analysis.function.SqrtTest, org.apache.commons.math4.analysis.function.StepFunctionTest, org.apache.commons.math4.analysis.integration.IterativeLegendreGaussIntegratorTest, org.apache.commons.math4.analysis.integration.LegendreGaussIntegratorTest, org.apache.commons.math4.analysis.integration.MidPointIntegratorTest, org.apache.commons.math4.analysis.integration.RombergIntegratorTest, org.apache.commons.math4.analysis.integration.SimpsonIntegratorTest, org.apache.commons.math4.analysis.integration.TrapezoidIntegratorTest, org.apache.commons.math4.analysis.integration.gauss.BaseRuleFactoryTest, org.apache.commons.math4.analysis.integration.gauss.GaussIntegratorTest, org.apache.commons.math4.analysis.integration.gauss.HermiteParametricTest, org.apache.commons.math4.analysis.integration.gauss.HermiteTest, org.apache.commons.math4.analysis.integration.gauss.LegendreHighPrecisionParametricTest, org.apache.commons.math4.analysis.integration.gauss.LegendreHighPrecisionTest, org.apache.commons.math4.analysis.integration.gauss.LegendreParametricTest, org.apache.commons.math4.analysis.integration.gauss.LegendreTest, org.apache.commons.math4.analysis.interpolation.AkimaSplineInterpolatorTest, org.apache.commons.math4.analysis.interpolation.BicubicInterpolatingFunctionTest, org.apache.commons.math4.analysis.interpolation.BicubicInterpolatorTest, org.apache.commons.math4.analysis.interpolation.BicubicSplineInterpolatingFunctionTest, org.apache.commons.math4.analysis.interpolation.BicubicSplineInterpolatorTest, org.apache.commons.math4.analysis.interpolation.DividedDifferenceInterpolatorTest, org.apache.commons.math4.analysis.interpolation.FieldHermiteInterpolatorTest, org.apache.commons.math4.analysis.interpolation.HermiteInterpolatorTest, org.apache.commons.math4.analysis.interpolation.LinearInterpolatorTest, org.apache.commons.math4.analysis.interpolation.LoessInterpolatorTest, org.apache.commons.math4.analysis.interpolation.MicrosphereInterpolatorTest, org.apache.commons.math4.analysis.interpolation.NevilleInterpolatorTest, org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunctionTest, org.apache.commons.math4.analysis.interpolation.PiecewiseBicubicSplineInterpolatorTest, org.apache.commons.math4.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest, org.apache.commons.math4.analysis.interpolation.SplineInterpolatorTest, org.apache.commons.math4.analysis.interpolation.TricubicInterpolatingFunctionTest, org.apache.commons.math4.analysis.interpolation.TricubicInterpolatorTest, org.apache.commons.math4.analysis.interpolation.TricubicSplineInterpolatingFunctionTest, org.apache.commons.math4.analysis.interpolation.TricubicSplineInterpolatorTest, org.apache.commons.math4.analysis.interpolation.UnivariatePeriodicInterpolatorTest, org.apache.commons.math4.analysis.polynomials.PolynomialFunctionLagrangeFormTest, org.apache.commons.math4.analysis.polynomials.PolynomialFunctionNewtonFormTest, org.apache.commons.math4.analysis.polynomials.PolynomialFunctionTest, org.apache.commons.math4.analysis.polynomials.PolynomialSplineFunctionTest, org.apache.commons.math4.analysis.polynomials.PolynomialsUtilsTest, org.apache.commons.math4.analysis.solvers.BisectionSolverTest, org.apache.commons.math4.analysis.solvers.BracketingNthOrderBrentSolverTest, org.apache.commons.math4.analysis.solvers.BrentSolverTest, org.apache.commons.math4.analysis.solvers.IllinoisSolverTest, org.apache.commons.math4.analysis.solvers.LaguerreSolverTest, org.apache.commons.math4.analysis.solvers.MullerSolver2Test, org.apache.commons.math4.analysis.solvers.MullerSolverTest, org.apache.commons.math4.analysis.solvers.NewtonRaphsonSolverTest, org.apache.commons.math4.analysis.solvers.NewtonSolverTest, org.apache.commons.math4.analysis.solvers.PegasusSolverTest, org.apache.commons.math4.analysis.solvers.RegulaFalsiSolverTest, org.apache.commons.math4.analysis.solvers.RiddersSolverTest, org.apache.commons.math4.analysis.solvers.SecantSolverTest, org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest, org.apache.commons.math4.complex.ComplexFieldTest, org.apache.commons.math4.complex.ComplexFormatTest, org.apache.commons.math4.complex.ComplexTest, org.apache.commons.math4.complex.ComplexUtilsTest, org.apache.commons.math4.complex.FrenchComplexFormatTest, org.apache.commons.math4.complex.QuaternionTest, org.apache.commons.math4.complex.RootsOfUnityTest, org.apache.commons.math4.dfp.BracketingNthOrderBrentSolverDFPTest, org.apache.commons.math4.dfp.DfpDecTest, org.apache.commons.math4.dfp.DfpMathTest, org.apache.commons.math4.dfp.DfpTest, org.apache.commons.math4.distribution.AbstractIntegerDistributionTest, org.apache.commons.math4.distribution.AbstractRealDistributionTest, org.apache.commons.math4.distribution.BetaDistributionTest, org.apache.commons.math4.distribution.BinomialDistributionTest, org.apache.commons.math4.distribution.CauchyDistributionTest, org.apache.commons.math4.distribution.ChiSquaredDistributionTest, org.apache.commons.math4.distribution.ConstantRealDistributionTest, org.apache.commons.math4.distribution.EnumeratedIntegerDistributionTest, org.apache.commons.math4.distribution.EnumeratedRealDistributionTest, org.apache.commons.math4.distribution.ExponentialDistributionTest, org.apache.commons.math4.distribution.FDistributionTest, org.apache.commons.math4.distribution.GammaDistributionTest, org.apache.commons.math4.distribution.GeometricDistributionTest, org.apache.commons.math4.distribution.GumbelDistributionTest, org.apache.commons.math4.distribution.HypergeometricDistributionTest, org.apache.commons.math4.distribution.KolmogorovSmirnovDistributionTest, org.apache.commons.math4.distribution.LaplaceDistributionTest, org.apache.commons.math4.distribution.LevyDistributionTest, org.apache.commons.math4.distribution.LogNormalDistributionTest, org.apache.commons.math4.distribution.LogisticsDistributionTest, org.apache.commons.math4.distribution.MultivariateNormalDistributionTest, org.apache.commons.math4.distribution.MultivariateNormalMixtureModelDistributionTest, org.apache.commons.math4.distribution.NakagamiDistributionTest, org.apache.commons.math4.distribution.NormalDistributionTest, org.apache.commons.math4.distribution.ParetoDistributionTest, org.apache.commons.math4.distribution.PascalDistributionTest, org.apache.commons.math4.distribution.PoissonDistributionTest, org.apache.commons.math4.distribution.TDistributionTest, org.apache.commons.math4.distribution.TriangularDistributionTest, org.apache.commons.math4.distribution.UniformIntegerDistributionTest, org.apache.commons.math4.distribution.UniformRealDistributionTest, org.apache.commons.math4.distribution.WeibullDistributionTest, org.apache.commons.math4.distribution.ZipfDistributionTest, org.apache.commons.math4.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest, org.apache.commons.math4.exception.DimensionMismatchExceptionTest, org.apache.commons.math4.exception.MaxCountExceededExceptionTest, org.apache.commons.math4.exception.NonMonotonicSequenceExceptionTest, org.apache.commons.math4.exception.NotPositiveExceptionTest, org.apache.commons.math4.exception.NotStrictlyPositiveExceptionTest, org.apache.commons.math4.exception.NumberIsTooLargeExceptionTest, org.apache.commons.math4.exception.NumberIsTooSmallExceptionTest, org.apache.commons.math4.exception.OutOfRangeExceptionTest, org.apache.commons.math4.exception.TooManyEvaluationsExceptionTest, org.apache.commons.math4.exception.util.ArgUtilsTest, org.apache.commons.math4.exception.util.ExceptionContextTest, org.apache.commons.math4.exception.util.LocalizedFormatsTest, org.apache.commons.math4.filter.KalmanFilterTest, org.apache.commons.math4.fitting.CurveFitterTest, org.apache.commons.math4.fitting.GaussianCurveFitterTest, org.apache.commons.math4.fitting.GaussianFitterTest, org.apache.commons.math4.fitting.HarmonicCurveFitterTest, org.apache.commons.math4.fitting.HarmonicFitterTest, org.apache.commons.math4.fitting.PolynomialCurveFitterTest, org.apache.commons.math4.fitting.PolynomialFitterTest, org.apache.commons.math4.fitting.SimpleCurveFitterTest, org.apache.commons.math4.fitting.WeightedObservedPointsTest, org.apache.commons.math4.fitting.leastsquares.EvaluationRmsCheckerTest, org.apache.commons.math4.fitting.leastsquares.EvaluationTest, org.apache.commons.math4.fitting.leastsquares.EvaluationTestValidation, org.apache.commons.math4.fitting.leastsquares.GaussNewtonOptimizerWithCholeskyTest, org.apache.commons.math4.fitting.leastsquares.GaussNewtonOptimizerWithLUTest, org.apache.commons.math4.fitting.leastsquares.GaussNewtonOptimizerWithQRTest, org.apache.commons.math4.fitting.leastsquares.GaussNewtonOptimizerWithSVDTest, org.apache.commons.math4.fitting.leastsquares.LevenbergMarquardtOptimizerTest, org.apache.commons.math4.fitting.leastsquares.MinpackTest, org.apache.commons.math4.fraction.BigFractionFieldTest, org.apache.commons.math4.fraction.BigFractionFormatTest, org.apache.commons.math4.fraction.BigFractionTest, org.apache.commons.math4.fraction.FractionFieldTest, org.apache.commons.math4.fraction.FractionFormatTest, org.apache.commons.math4.fraction.FractionTest, org.apache.commons.math4.genetics.BinaryChromosomeTest, org.apache.commons.math4.genetics.BinaryMutationTest, org.apache.commons.math4.genetics.ChromosomeTest, org.apache.commons.math4.genetics.CycleCrossoverTest, org.apache.commons.math4.genetics.ElitisticListPopulationTest, org.apache.commons.math4.genetics.FitnessCachingTest, org.apache.commons.math4.genetics.FixedElapsedTimeTest, org.apache.commons.math4.genetics.FixedGenerationCountTest, org.apache.commons.math4.genetics.GeneticAlgorithmTestBinary, org.apache.commons.math4.genetics.GeneticAlgorithmTestPermutations, org.apache.commons.math4.genetics.ListPopulationTest, org.apache.commons.math4.genetics.NPointCrossoverTest, org.apache.commons.math4.genetics.OnePointCrossoverTest, org.apache.commons.math4.genetics.OrderedCrossoverTest, org.apache.commons.math4.genetics.RandomKeyMutationTest, org.apache.commons.math4.genetics.RandomKeyTest, org.apache.commons.math4.genetics.TournamentSelectionTest, org.apache.commons.math4.genetics.UniformCrossoverTest, org.apache.commons.math4.geometry.enclosing.WelzlEncloser2DTest, org.apache.commons.math4.geometry.enclosing.WelzlEncloser3DTest, org.apache.commons.math4.geometry.euclidean.oned.Euclidean1DTest, org.apache.commons.math4.geometry.euclidean.oned.FrenchVector1DFormatTest, org.apache.commons.math4.geometry.euclidean.oned.IntervalTest, org.apache.commons.math4.geometry.euclidean.oned.IntervalsSetTest, org.apache.commons.math4.geometry.euclidean.oned.Vector1DFormatTest, org.apache.commons.math4.geometry.euclidean.oned.Vector1DTest, org.apache.commons.math4.geometry.euclidean.threed.Euclidean3DTest, org.apache.commons.math4.geometry.euclidean.threed.FieldRotationDSTest, org.apache.commons.math4.geometry.euclidean.threed.FieldRotationDfpTest, org.apache.commons.math4.geometry.euclidean.threed.FieldVector3DTest, org.apache.commons.math4.geometry.euclidean.threed.FrenchVector3DFormatTest, org.apache.commons.math4.geometry.euclidean.threed.LineTest, org.apache.commons.math4.geometry.euclidean.threed.PlaneTest, org.apache.commons.math4.geometry.euclidean.threed.PolyhedronsSetTest, org.apache.commons.math4.geometry.euclidean.threed.RotationOrderTest, org.apache.commons.math4.geometry.euclidean.threed.RotationTest, org.apache.commons.math4.geometry.euclidean.threed.SphereGeneratorTest, org.apache.commons.math4.geometry.euclidean.threed.SphericalCoordinatesTest, org.apache.commons.math4.geometry.euclidean.threed.SubLineTest, org.apache.commons.math4.geometry.euclidean.threed.Vector3DFormatTest, org.apache.commons.math4.geometry.euclidean.threed.Vector3DTest, org.apache.commons.math4.geometry.euclidean.twod.DiskGeneratorTest, org.apache.commons.math4.geometry.euclidean.twod.Euclidean2DTest, org.apache.commons.math4.geometry.euclidean.twod.FrenchVector2DFormatTest, org.apache.commons.math4.geometry.euclidean.twod.LineTest, org.apache.commons.math4.geometry.euclidean.twod.PolygonsSetTest, org.apache.commons.math4.geometry.euclidean.twod.SegmentTest, org.apache.commons.math4.geometry.euclidean.twod.SubLineTest, org.apache.commons.math4.geometry.euclidean.twod.Vector2DFormatTest, org.apache.commons.math4.geometry.euclidean.twod.Vector2DTest, org.apache.commons.math4.geometry.euclidean.twod.hull.AklToussaintHeuristicTest, org.apache.commons.math4.geometry.euclidean.twod.hull.MonotoneChainTest, org.apache.commons.math4.geometry.spherical.oned.ArcTest, org.apache.commons.math4.geometry.spherical.oned.ArcsSetTest, org.apache.commons.math4.geometry.spherical.oned.LimitAngleTest, org.apache.commons.math4.geometry.spherical.oned.S1PointTest, org.apache.commons.math4.geometry.spherical.oned.Sphere1Test, org.apache.commons.math4.geometry.spherical.twod.CircleTest, org.apache.commons.math4.geometry.spherical.twod.S2PointTest, org.apache.commons.math4.geometry.spherical.twod.SphericalPolygonsSetTest, org.apache.commons.math4.geometry.spherical.twod.SubCircleTest, org.apache.commons.math4.linear.Array2DRowRealMatrixTest, org.apache.commons.math4.linear.ArrayFieldVectorTest, org.apache.commons.math4.linear.ArrayRealVectorTest, org.apache.commons.math4.linear.BiDiagonalTransformerTest, org.apache.commons.math4.linear.BlockFieldMatrixTest, org.apache.commons.math4.linear.BlockRealMatrixTest, org.apache.commons.math4.linear.CholeskyDecompositionTest, org.apache.commons.math4.linear.CholeskySolverTest, org.apache.commons.math4.linear.ConjugateGradientTest, org.apache.commons.math4.linear.DiagonalMatrixTest, org.apache.commons.math4.linear.EigenDecompositionTest, org.apache.commons.math4.linear.EigenSolverTest, org.apache.commons.math4.linear.FieldLUDecompositionTest, org.apache.commons.math4.linear.FieldLUSolverTest, org.apache.commons.math4.linear.FieldMatrixImplTest, org.apache.commons.math4.linear.FrenchRealVectorFormatTest, org.apache.commons.math4.linear.HessenbergTransformerTest, org.apache.commons.math4.linear.LUDecompositionTest, org.apache.commons.math4.linear.LUSolverTest, org.apache.commons.math4.linear.MatrixDimensionMismatchExceptionTest, org.apache.commons.math4.linear.MatrixUtilsTest, org.apache.commons.math4.linear.OpenMapRealMatrixTest, org.apache.commons.math4.linear.QRDecompositionTest, org.apache.commons.math4.linear.QRSolverTest, org.apache.commons.math4.linear.RRQRDecompositionTest, org.apache.commons.math4.linear.RRQRSolverTest, org.apache.commons.math4.linear.RealMatrixFormatTest, org.apache.commons.math4.linear.RealVectorFormatTest, org.apache.commons.math4.linear.RealVectorTest, org.apache.commons.math4.linear.RectangularCholeskyDecompositionTest, org.apache.commons.math4.linear.SchurTransformerTest, org.apache.commons.math4.linear.SingularValueDecompositionTest, org.apache.commons.math4.linear.SingularValueSolverTest, org.apache.commons.math4.linear.SparseFieldMatrixTest, org.apache.commons.math4.linear.SparseFieldVectorTest, org.apache.commons.math4.linear.SparseRealMatrixTest, org.apache.commons.math4.linear.SparseRealVectorTest, org.apache.commons.math4.linear.SymmLQTest, org.apache.commons.math4.linear.TriDiagonalTransformerTest, org.apache.commons.math4.linear.UnmodifiableArrayRealVectorTest, org.apache.commons.math4.linear.UnmodifiableOpenMapRealVectorTest, org.apache.commons.math4.ml.clustering.DBSCANClustererTest, org.apache.commons.math4.ml.clustering.FuzzyKMeansClustererTest, org.apache.commons.math4.ml.clustering.KMeansPlusPlusClustererTest, org.apache.commons.math4.ml.clustering.MultiKMeansPlusPlusClustererTest, org.apache.commons.math4.ml.clustering.evaluation.SumOfClusterVariancesTest, org.apache.commons.math4.ml.distance.CanberraDistanceTest, org.apache.commons.math4.ml.distance.ChebyshevDistanceTest, org.apache.commons.math4.ml.distance.EarthMoversDistanceTest, org.apache.commons.math4.ml.distance.EuclideanDistanceTest, org.apache.commons.math4.ml.distance.ManhattanDistanceTest, org.apache.commons.math4.ml.neuralnet.MapUtilsTest, org.apache.commons.math4.ml.neuralnet.NetworkTest, org.apache.commons.math4.ml.neuralnet.NeuronTest, org.apache.commons.math4.ml.neuralnet.oned.NeuronStringTest, org.apache.commons.math4.ml.neuralnet.sofm.KohonenTrainingTaskTest, org.apache.commons.math4.ml.neuralnet.sofm.KohonenUpdateActionTest, org.apache.commons.math4.ml.neuralnet.sofm.LearningFactorFunctionFactoryTest, org.apache.commons.math4.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactoryTest, org.apache.commons.math4.ml.neuralnet.sofm.util.ExponentialDecayFunctionTest, org.apache.commons.math4.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunctionTest, org.apache.commons.math4.ml.neuralnet.twod.NeuronSquareMesh2DTest, org.apache.commons.math4.ode.ContinuousOutputModelTest, org.apache.commons.math4.ode.FirstOrderConverterTest, org.apache.commons.math4.ode.JacobianMatricesTest, org.apache.commons.math4.ode.events.EventFilterTest, org.apache.commons.math4.ode.events.EventStateTest, org.apache.commons.math4.ode.events.OverlappingEventsTest, org.apache.commons.math4.ode.events.ReappearingEventTest, org.apache.commons.math4.ode.nonstiff.AdamsBashforthIntegratorTest, org.apache.commons.math4.ode.nonstiff.AdamsMoultonIntegratorTest, org.apache.commons.math4.ode.nonstiff.ClassicalRungeKuttaIntegratorTest, org.apache.commons.math4.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest, org.apache.commons.math4.ode.nonstiff.DormandPrince54IntegratorTest, org.apache.commons.math4.ode.nonstiff.DormandPrince54StepInterpolatorTest, org.apache.commons.math4.ode.nonstiff.DormandPrince853IntegratorTest, org.apache.commons.math4.ode.nonstiff.DormandPrince853StepInterpolatorTest, org.apache.commons.math4.ode.nonstiff.EulerIntegratorTest, org.apache.commons.math4.ode.nonstiff.EulerStepInterpolatorTest, org.apache.commons.math4.ode.nonstiff.GillIntegratorTest, org.apache.commons.math4.ode.nonstiff.GillStepInterpolatorTest, org.apache.commons.math4.ode.nonstiff.GraggBulirschStoerIntegratorTest, org.apache.commons.math4.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest, org.apache.commons.math4.ode.nonstiff.HighamHall54IntegratorTest, org.apache.commons.math4.ode.nonstiff.HighamHall54StepInterpolatorTest, org.apache.commons.math4.ode.nonstiff.LutherIntegratorTest, org.apache.commons.math4.ode.nonstiff.LutherStepInterpolatorTest, org.apache.commons.math4.ode.nonstiff.MidpointIntegratorTest, org.apache.commons.math4.ode.nonstiff.MidpointStepInterpolatorTest, org.apache.commons.math4.ode.nonstiff.ThreeEighthesIntegratorTest, org.apache.commons.math4.ode.nonstiff.ThreeEighthesStepInterpolatorTest, org.apache.commons.math4.ode.sampling.DummyStepInterpolatorTest, org.apache.commons.math4.ode.sampling.NordsieckStepInterpolatorTest, org.apache.commons.math4.ode.sampling.StepNormalizerOutputOverlapTest, org.apache.commons.math4.ode.sampling.StepNormalizerOutputTest, org.apache.commons.math4.ode.sampling.StepNormalizerTest, org.apache.commons.math4.optim.PointValuePairTest, org.apache.commons.math4.optim.PointVectorValuePairTest, org.apache.commons.math4.optim.SimplePointCheckerTest, org.apache.commons.math4.optim.SimpleValueCheckerTest, org.apache.commons.math4.optim.SimpleVectorValueCheckerTest, org.apache.commons.math4.optim.linear.SimplexSolverTest, org.apache.commons.math4.optim.linear.SimplexTableauTest, org.apache.commons.math4.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest, org.apache.commons.math4.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest, org.apache.commons.math4.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math4.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math4.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest, org.apache.commons.math4.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest, org.apache.commons.math4.optim.nonlinear.scalar.noderiv.PowellOptimizerTest, org.apache.commons.math4.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math4.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest, org.apache.commons.math4.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest, org.apache.commons.math4.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest, org.apache.commons.math4.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math4.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest, org.apache.commons.math4.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest, org.apache.commons.math4.optim.nonlinear.vector.jacobian.MinpackTest, org.apache.commons.math4.optim.univariate.BracketFinderTest, org.apache.commons.math4.optim.univariate.BrentOptimizerTest, org.apache.commons.math4.optim.univariate.MultiStartUnivariateOptimizerTest, org.apache.commons.math4.optim.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math4.optimization.MultivariateDifferentiableMultiStartOptimizerTest, org.apache.commons.math4.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest, org.apache.commons.math4.optimization.MultivariateMultiStartOptimizerTest, org.apache.commons.math4.optimization.PointValuePairTest, org.apache.commons.math4.optimization.PointVectorValuePairTest, org.apache.commons.math4.optimization.SimplePointCheckerTest, org.apache.commons.math4.optimization.SimpleValueCheckerTest, org.apache.commons.math4.optimization.SimpleVectorValueCheckerTest, org.apache.commons.math4.optimization.direct.BOBYQAOptimizerTest, org.apache.commons.math4.optimization.direct.CMAESOptimizerTest, org.apache.commons.math4.optimization.direct.MultivariateFunctionMappingAdapterTest, org.apache.commons.math4.optimization.direct.MultivariateFunctionPenaltyAdapterTest, org.apache.commons.math4.optimization.direct.PowellOptimizerTest, org.apache.commons.math4.optimization.direct.SimplexOptimizerMultiDirectionalTest, org.apache.commons.math4.optimization.direct.SimplexOptimizerNelderMeadTest, org.apache.commons.math4.optimization.fitting.CurveFitterTest, org.apache.commons.math4.optimization.fitting.GaussianFitterTest, org.apache.commons.math4.optimization.fitting.HarmonicFitterTest, org.apache.commons.math4.optimization.fitting.PolynomialFitterTest, org.apache.commons.math4.optimization.general.AbstractLeastSquaresOptimizerTest, org.apache.commons.math4.optimization.general.AbstractLeastSquaresOptimizerTestValidation, org.apache.commons.math4.optimization.general.GaussNewtonOptimizerTest, org.apache.commons.math4.optimization.general.LevenbergMarquardtOptimizerTest, org.apache.commons.math4.optimization.general.MinpackTest, org.apache.commons.math4.optimization.general.NonLinearConjugateGradientOptimizerTest, org.apache.commons.math4.optimization.linear.SimplexSolverTest, org.apache.commons.math4.optimization.linear.SimplexTableauTest, org.apache.commons.math4.optimization.univariate.BracketFinderTest, org.apache.commons.math4.optimization.univariate.BrentOptimizerTest, org.apache.commons.math4.optimization.univariate.SimpleUnivariateValueCheckerTest, org.apache.commons.math4.optimization.univariate.UnivariateMultiStartOptimizerTest, org.apache.commons.math4.primes.PrimesTest, org.apache.commons.math4.random.AbstractRandomGeneratorTest, org.apache.commons.math4.random.BitsStreamGeneratorTest, org.apache.commons.math4.random.CorrelatedRandomVectorGeneratorTest, org.apache.commons.math4.random.EmpiricalDistributionTest, org.apache.commons.math4.random.GaussianRandomGeneratorTest, org.apache.commons.math4.random.HaltonSequenceGeneratorTest, org.apache.commons.math4.random.ISAACTest, org.apache.commons.math4.random.MersenneTwisterTest, org.apache.commons.math4.random.RandomAdaptorTest, org.apache.commons.math4.random.RandomDataGeneratorTest, org.apache.commons.math4.random.RandomGeneratorAbstractTest, org.apache.commons.math4.random.RandomGeneratorFactoryTest, org.apache.commons.math4.random.SobolSequenceGeneratorTest, org.apache.commons.math4.random.StableRandomGeneratorTest, org.apache.commons.math4.random.SynchronizedRandomGeneratorTest, org.apache.commons.math4.random.UncorrelatedRandomVectorGeneratorTest, org.apache.commons.math4.random.UniformRandomGeneratorTest, org.apache.commons.math4.random.UnitSphereRandomVectorGeneratorTest, org.apache.commons.math4.random.ValueServerTest, org.apache.commons.math4.random.Well1024aTest, org.apache.commons.math4.random.Well19937aTest, org.apache.commons.math4.random.Well19937cTest, org.apache.commons.math4.random.Well44497aTest, org.apache.commons.math4.random.Well44497bTest, org.apache.commons.math4.random.Well512aTest, org.apache.commons.math4.special.BesselJTest, org.apache.commons.math4.special.BetaTest, org.apache.commons.math4.special.ErfTest, org.apache.commons.math4.special.GammaTest, org.apache.commons.math4.stat.CertifiedDataTest, org.apache.commons.math4.stat.FrequencyTest, org.apache.commons.math4.stat.StatUtilsTest, org.apache.commons.math4.stat.correlation.CovarianceTest, org.apache.commons.math4.stat.correlation.KendallsCorrelationTest, org.apache.commons.math4.stat.correlation.PearsonsCorrelationTest, org.apache.commons.math4.stat.correlation.SpearmansRankCorrelationTest, org.apache.commons.math4.stat.correlation.StorelessCovarianceTest, org.apache.commons.math4.stat.data.LewTest, org.apache.commons.math4.stat.data.LotteryTest, org.apache.commons.math4.stat.descriptive.AbstractUnivariateStatisticTest, org.apache.commons.math4.stat.descriptive.AggregateSummaryStatisticsTest, org.apache.commons.math4.stat.descriptive.DescriptiveStatisticsTest, org.apache.commons.math4.stat.descriptive.ListUnivariateImplTest, org.apache.commons.math4.stat.descriptive.MixedListUnivariateImplTest, org.apache.commons.math4.stat.descriptive.MultivariateSummaryStatisticsTest, org.apache.commons.math4.stat.descriptive.StatisticalSummaryValuesTest, org.apache.commons.math4.stat.descriptive.SummaryStatisticsTest, org.apache.commons.math4.stat.descriptive.SynchronizedDescriptiveStatisticsTest, org.apache.commons.math4.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest, org.apache.commons.math4.stat.descriptive.SynchronizedSummaryStatisticsTest, org.apache.commons.math4.stat.descriptive.moment.FirstMomentTest, org.apache.commons.math4.stat.descriptive.moment.FourthMomentTest, org.apache.commons.math4.stat.descriptive.moment.GeometricMeanTest, org.apache.commons.math4.stat.descriptive.moment.InteractionTest, org.apache.commons.math4.stat.descriptive.moment.KurtosisTest, org.apache.commons.math4.stat.descriptive.moment.MeanTest, org.apache.commons.math4.stat.descriptive.moment.SecondMomentTest, org.apache.commons.math4.stat.descriptive.moment.SemiVarianceTest, org.apache.commons.math4.stat.descriptive.moment.SkewnessTest, org.apache.commons.math4.stat.descriptive.moment.StandardDeviationTest, org.apache.commons.math4.stat.descriptive.moment.ThirdMomentTest, org.apache.commons.math4.stat.descriptive.moment.VarianceTest, org.apache.commons.math4.stat.descriptive.moment.VectorialCovarianceTest, org.apache.commons.math4.stat.descriptive.moment.VectorialMeanTest, org.apache.commons.math4.stat.descriptive.rank.MaxTest, org.apache.commons.math4.stat.descriptive.rank.MedianTest, org.apache.commons.math4.stat.descriptive.rank.MinTest, org.apache.commons.math4.stat.descriptive.rank.PSquarePercentileTest, org.apache.commons.math4.stat.descriptive.rank.PercentileTest, org.apache.commons.math4.stat.descriptive.summary.ProductTest, org.apache.commons.math4.stat.descriptive.summary.SumLogTest, org.apache.commons.math4.stat.descriptive.summary.SumSqTest, org.apache.commons.math4.stat.descriptive.summary.SumTest, org.apache.commons.math4.stat.inference.BinomialTestTest, org.apache.commons.math4.stat.inference.ChiSquareTestTest, org.apache.commons.math4.stat.inference.GTestTest, org.apache.commons.math4.stat.inference.KolmogorovSmirnovTestTest, org.apache.commons.math4.stat.inference.MannWhitneyUTestTest, org.apache.commons.math4.stat.inference.OneWayAnovaTest, org.apache.commons.math4.stat.inference.TTestTest, org.apache.commons.math4.stat.inference.TestUtilsTest, org.apache.commons.math4.stat.inference.WilcoxonSignedRankTestTest, org.apache.commons.math4.stat.interval.AgrestiCoullIntervalTest, org.apache.commons.math4.stat.interval.ClopperPearsonIntervalTest, org.apache.commons.math4.stat.interval.IntervalUtilsTest, org.apache.commons.math4.stat.interval.NormalApproximationIntervalTest, org.apache.commons.math4.stat.interval.WilsonScoreIntervalTest, org.apache.commons.math4.stat.ranking.NaturalRankingTest, org.apache.commons.math4.stat.regression.GLSMultipleLinearRegressionTest, org.apache.commons.math4.stat.regression.MillerUpdatingRegressionTest, org.apache.commons.math4.stat.regression.OLSMultipleLinearRegressionTest, org.apache.commons.math4.stat.regression.SimpleRegressionTest, org.apache.commons.math4.transform.FastCosineTransformerTest, org.apache.commons.math4.transform.FastFourierTransformerTest, org.apache.commons.math4.transform.FastHadamardTransformerTest, org.apache.commons.math4.transform.FastSineTransformerTest, org.apache.commons.math4.util.ArithmeticUtilsTest, org.apache.commons.math4.util.BigRealFieldTest, org.apache.commons.math4.util.BigRealTest, org.apache.commons.math4.util.CombinationsTest, org.apache.commons.math4.util.CombinatoricsUtilsTest, org.apache.commons.math4.util.ContinuedFractionTest, org.apache.commons.math4.util.Decimal64Test, org.apache.commons.math4.util.DefaultTransformerTest, org.apache.commons.math4.util.FastMathStrictComparisonTest, org.apache.commons.math4.util.FastMathTest, org.apache.commons.math4.util.FastMathTestPerformance, org.apache.commons.math4.util.IncrementorTest, org.apache.commons.math4.util.MathArraysTest, org.apache.commons.math4.util.MathUtilsTest, org.apache.commons.math4.util.MultidimensionalCounterTest, org.apache.commons.math4.util.OpenIntToDoubleHashMapTest, org.apache.commons.math4.util.OpenIntToFieldTest, org.apache.commons.math4.util.PairTest, org.apache.commons.math4.util.PrecisionTest, org.apache.commons.math4.util.ResizableDoubleArrayTest, org.apache.commons.math4.util.TransformerMapTest], complianceLevel=7, outputFolder=., json=true}
09:27:53.739 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 4
09:27:53.746 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 889 MB
09:27:53.746 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
09:27:53.746 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 981 MB
09:27:53.746 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_181
09:27:53.747 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/
09:27:53.747 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/bin:/usr/bin:/bin:/usr/games
09:33:55.326 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
09:33:55.327 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.MathIllegalArgumentException:62 which is executed by 1 tests
32654469
09:33:57.101 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
09:33:57.102 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:136 which is executed by 2 tests
-310961535
09:33:57.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
09:33:57.270 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:353 which is executed by 3 tests
-2094234145
09:33:57.422 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
09:33:57.423 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.MathIllegalArgumentException:56 which is executed by 3 tests
32654469
09:33:57.560 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
09:33:57.560 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:127 which is executed by 6 tests
-310961535
09:33:57.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
09:33:57.710 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:146 which is executed by 7 tests
-310961535
09:33:57.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
09:33:57.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:185 which is executed by 8 tests
-310961535
09:33:58.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
09:33:58.016 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:179 which is executed by 8 tests
-310961535
09:33:58.170 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:33:58.224 [pool-4-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (32 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:33:59.059 [pool-5-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (21 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:33:59.063 [pool-6-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:33:59.064 [pool-3-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:33:59.065 [pool-3-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:33:59.065 [pool-3-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:179.
09:33:59.065 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:33:59.094 [pool-8-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:33:59.411 [pool-9-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (17 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]: 
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:33:59.425 [pool-10-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]: ]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]:     at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:33:59.426 [pool-7-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:33:59.426 [pool-7-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:33:59.426 [pool-7-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:179.
09:33:59.427 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
09:33:59.427 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:178 which is executed by 8 tests
-310961535
09:33:59.573 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:33:59.602 [pool-12-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: 
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:33:59.896 [pool-13-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[]
org.apache.commons.math4.exception.NoBracketingException:     at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:33:59.899 [pool-14-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:33:59.900 [pool-11-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:33:59.900 [pool-11-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:33:59.901 [pool-11-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:178.
09:33:59.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
09:33:59.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:176 which is executed by 8 tests
-310961535
09:34:00.069 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
09:34:00.069 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:175 which is executed by 8 tests
-310961535
09:34:00.241 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
09:34:00.241 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:174 which is executed by 8 tests
-310961535
09:34:00.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
09:34:00.413 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:173 which is executed by 8 tests
-310961535
09:34:00.590 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:00.630 [pool-16-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: 
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:00.925 [pool-17-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[]
org.apache.commons.math4.exception.NoBracketingException:     at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:00.931 [pool-18-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:34:00.932 [pool-15-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:34:00.932 [pool-15-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:34:00.932 [pool-15-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:173.
09:34:00.932 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
09:34:00.933 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:172 which is executed by 8 tests
-310961535
09:34:01.074 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
09:34:01.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:171 which is executed by 8 tests
-310961535
09:34:01.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
09:34:01.216 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:170 which is executed by 8 tests
-310961535
09:34:01.357 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
09:34:01.358 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:334 which is executed by 9 tests
-2094234145
09:34:01.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:01.529 [pool-20-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:148)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:01.785 [pool-21-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:148)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:148)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:01.792 [pool-22-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:148)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:34:01.793 [pool-19-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:34:01.794 [pool-19-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:34:01.794 [pool-19-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:334.
09:34:01.794 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:01.826 [pool-24-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (25 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:148)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:02.058 [pool-25-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:148)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:184)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
09:34:02.060 [pool-26-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:184)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

09:34:02.061 [pool-23-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:34:02.061 [pool-23-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): null]
09:34:02.061 [pool-23-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:334.
09:34:02.061 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
09:34:02.061 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:331 which is executed by 9 tests
-2094234145
09:34:02.201 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:02.230 [pool-28-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:148)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:02.457 [pool-29-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:148)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:148)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:02.459 [pool-30-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:148)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:34:02.463 [pool-27-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:34:02.463 [pool-27-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:34:02.464 [pool-27-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:331.
09:34:02.464 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:02.492 [pool-32-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:148)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:02.716 [pool-33-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:148)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:148)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:02.719 [pool-34-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:148)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:34:02.720 [pool-31-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:34:02.720 [pool-31-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:34:02.720 [pool-31-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:331.
09:34:02.720 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
09:34:02.720 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:329 which is executed by 9 tests
-2094234145
09:34:02.864 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:02.891 [pool-36-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, �]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:03.108 [pool-37-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, �]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, �]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:03.116 [pool-38-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:34:03.117 [pool-35-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, �]]
09:34:03.117 [pool-35-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:34:03.117 [pool-35-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:329.
09:34:03.118 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
09:34:03.118 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:328 which is executed by 9 tests
-2094234145
09:34:03.261 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:03.289 [pool-40-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [�, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:03.526 [pool-41-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [�, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [�, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:03.528 [pool-42-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:34:03.532 [pool-39-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [�, -0.717]]
09:34:03.532 [pool-39-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:34:03.532 [pool-39-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:328.
09:34:03.532 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
09:34:03.533 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:327 which is executed by 9 tests
-2094234145
09:34:03.674 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:03.701 [pool-44-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.9], values: [-0.841, -0.783]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:03.913 [pool-45-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.9], values: [-0.841, -0.783]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.9], values: [-0.841, -0.783]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:03.918 [pool-46-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:34:03.921 [pool-43-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.9], values: [-0.841, -0.783]]
09:34:03.922 [pool-43-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:34:03.922 [pool-43-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:327.
09:34:03.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
09:34:03.922 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:326 which is executed by 9 tests
-2094234145
09:34:04.061 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:04.087 [pool-48-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:34:04.286 [pool-49-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:04.298 [pool-50-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:34:04.300 [pool-51-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

09:34:04.301 [pool-52-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

09:34:04.303 [pool-53-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [0.1, 2], values: [0.1, 0.909]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketCentered(UnivariateSolverUtilsTest.java:93)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:04.305 [pool-54-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketCentered(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [0.1, 2], values: [0.1, 0.909]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [0.1, 2], values: [0.1, 0.909]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketCentered(UnivariateSolverUtilsTest.java:93)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [0.5, 2], values: [0.479, 0.909]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLow(UnivariateSolverUtilsTest.java:103)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:04.307 [pool-55-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLow(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [0.5, 2], values: [0.479, 0.909]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [0.5, 2], values: [0.479, 0.909]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLow(UnivariateSolverUtilsTest.java:103)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketSin(UnivariateSolverUtilsTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
09:34:04.309 [pool-56-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketSin(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketSin(UnivariateSolverUtilsTest.java:86)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [1,000, 2,023], values: [-999, -2,022]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketExponential(UnivariateSolverUtilsTest.java:131)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:34:04.311 [pool-57-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketExponential(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [1,000, 2,023], values: [-999, -2,022]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [1,000, 2,023], values: [-999, -2,022]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketExponential(UnivariateSolverUtilsTest.java:131)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.OutOfMemoryError: Java heap space
    at java.util.Arrays.copyOf(Arrays.java:3181)
    at java.util.ArrayList.grow(ArrayList.java:265)
    at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239)
    at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231)
    at java.util.ArrayList.add(ArrayList.java:462)
    at fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(AngelicExecution.java:16)
09:35:22.292 [pool-58-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (77981 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketEndpointRoot(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[Java heap space]
java.lang.OutOfMemoryError: Java heap space    at java.util.Arrays.copyOf(Arrays.java:3181)
    at java.util.ArrayList.grow(ArrayList.java:265)
    at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239)
    at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231)
    at java.util.ArrayList.add(ArrayList.java:462)
    at fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(AngelicExecution.java:16)

java.lang.OutOfMemoryError: Java heap space
    at java.util.Arrays.copyOf(Arrays.java:3181)
    at java.util.ArrayList.grow(ArrayList.java:265)
    at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239)
    at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231)
    at java.util.ArrayList.add(ArrayList.java:462)
    at fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(AngelicExecution.java:16)
09:36:08.888 [pool-59-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (46593 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[Java heap space]
java.lang.OutOfMemoryError: Java heap space    at java.util.Arrays.copyOf(Arrays.java:3181)
    at java.util.ArrayList.grow(ArrayList.java:265)
    at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239)
    at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231)
    at java.util.ArrayList.add(ArrayList.java:462)
    at fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(AngelicExecution.java:16)

java.lang.Exception: Unexpected exception, expected<org.apache.commons.math4.exception.NoBracketingException> but was<java.lang.OutOfMemoryError>
    at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:28)
    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
09:36:18.034 [pool-60-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (9143 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLinear(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[Unexpected exception, expected<org.apache.commons.math4.exception.NoBracketingException> but was<java.lang.OutOfMemoryError>]
java.lang.Exception: Unexpected exception, expected<org.apache.commons.math4.exception.NoBracketingException> but was<java.lang.OutOfMemoryError>    at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:28)
    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)

java.lang.OutOfMemoryError: Java heap space
    at java.util.Arrays.copyOf(Arrays.java:3181)
    at java.util.ArrayList.grow(ArrayList.java:265)
    at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239)
    at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231)
    at java.util.ArrayList.add(ArrayList.java:462)
    at fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(AngelicExecution.java:16)
09:36:26.068 [pool-61-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (8032 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketHigh(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[Java heap space]
java.lang.OutOfMemoryError: Java heap space    at java.util.Arrays.copyOf(Arrays.java:3181)
    at java.util.ArrayList.grow(ArrayList.java:265)
    at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239)
    at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231)
    at java.util.ArrayList.add(ArrayList.java:462)
    at fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(AngelicExecution.java:16)

java.lang.Exception: Unexpected exception, expected<org.apache.commons.math4.exception.NoBracketingException> but was<java.lang.OutOfMemoryError>
    at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:28)
    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
09:36:33.494 [pool-62-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (7423 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testIterationExceeded(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[Unexpected exception, expected<org.apache.commons.math4.exception.NoBracketingException> but was<java.lang.OutOfMemoryError>]
java.lang.Exception: Unexpected exception, expected<org.apache.commons.math4.exception.NoBracketingException> but was<java.lang.OutOfMemoryError>    at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:28)
    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)

java.lang.OutOfMemoryError: Java heap space
java.lang.OutOfMemoryError: Java heap space
java.lang.OutOfMemoryError: Java heap space
java.lang.OutOfMemoryError: Java heap space
java.lang.OutOfMemoryError: Java heap space
java.lang.OutOfMemoryError: Java heap space
09:37:18.063 [pool-69-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (7 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

09:37:18.065 [pool-70-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

09:37:18.070 [pool-71-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (5 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

09:37:18.071 [pool-72-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

09:37:18.072 [pool-73-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

09:37:18.073 [pool-74-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

09:37:18.074 [pool-75-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

09:37:18.075 [pool-76-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

09:37:18.375 [pool-47-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
09:37:18.594 [pool-47-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
09:37:18.693 [pool-47-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
09:37:18.781 [pool-47-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
09:37:18.875 [pool-47-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
09:37:18.991 [pool-47-thread-1] DEBUG f.i.l.c.s.ConstraintBasedSynthesis - Failed code synthesis, returning NullCodeGenesis
09:37:18.992 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
09:37:18.992 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:325 which is executed by 9 tests
-2094234145
09:37:19.136 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:19.163 [pool-78-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (24 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-0.9, -0.9], values: [-0.783, -0.783]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:19.379 [pool-79-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (18 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-0.9, -0.9], values: [-0.783, -0.783]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-0.9, -0.9], values: [-0.783, -0.783]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:19.380 [pool-80-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:147)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:19.381 [pool-77-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-0.9, -0.9], values: [-0.783, -0.783]]
09:37:19.381 [pool-77-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:19.381 [pool-77-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:325.
09:37:19.382 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
09:37:19.382 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:323 which is executed by 9 tests
-2094234145
09:37:19.523 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
09:37:19.523 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:322 which is executed by 9 tests
-2094234145
09:37:19.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
09:37:19.664 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:321 which is executed by 9 tests
-2094234145
09:37:19.806 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
09:37:19.806 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:320 which is executed by 9 tests
-2094234145
09:37:19.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
09:37:19.946 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:317 which is executed by 9 tests
-2094234145
09:37:20.086 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
09:37:20.086 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:316 which is executed by 9 tests
-2094234145
09:37:20.227 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:20.252 [pool-82-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-0.9, -0.9], values: [�, �]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:143)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:20.455 [pool-83-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (12 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-0.9, -0.9], values: [�, �]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-0.9, -0.9], values: [�, �]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:143)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:143)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:20.491 [pool-84-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (34 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:143)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:20.491 [pool-81-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-0.9, -0.9], values: [�, �]]
09:37:20.491 [pool-81-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:20.492 [pool-81-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:316.
09:37:20.492 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
09:37:20.492 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:314 which is executed by 9 tests
-2094234145
09:37:20.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
09:37:20.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:313 which is executed by 9 tests
-2094234145
09:37:20.779 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
09:37:20.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:312 which is executed by 9 tests
-2094234145
09:37:20.919 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
09:37:20.919 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:311 which is executed by 9 tests
-2094234145
09:37:21.059 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
09:37:21.059 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:310 which is executed by 9 tests
-2094234145
09:37:21.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
09:37:21.199 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.LocalizedFormats:402 which is executed by 9 tests
-1352183934
09:37:21.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
09:37:21.420 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:307 which is executed by 11 tests
-2094234145
09:37:21.561 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:21.587 [pool-86-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:21.788 [pool-87-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:21.789 [pool-88-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:21.792 [pool-85-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:21.792 [pool-85-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:21.792 [pool-85-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:307.
09:37:21.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
09:37:21.792 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.LocalizedFormats:390 which is executed by 11 tests
-1352183934
09:37:21.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
09:37:21.986 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.LocalizedFormats:389 which is executed by 11 tests
-1352183934
09:37:22.166 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
09:37:22.166 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.LocalizedFormats:388 which is executed by 11 tests
-1352183934
09:37:22.349 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
09:37:22.349 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:304 which is executed by 12 tests
-2094234145
09:37:22.490 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:22.515 [pool-90-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:22.720 [pool-91-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:22.721 [pool-92-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:22.724 [pool-89-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:22.724 [pool-89-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:22.724 [pool-89-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:304.
09:37:22.725 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:22.754 [pool-94-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:22.989 [pool-95-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NotStrictlyPositiveException: bad value for maximum iterations number: 100
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:106)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:22.991 [pool-96-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[bad value for maximum iterations number: 100]
org.apache.commons.math4.exception.NotStrictlyPositiveException: bad value for maximum iterations number: 100    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:106)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:22.992 [pool-93-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:22.992 [pool-93-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): bad value for maximum iterations number: 100]
09:37:22.992 [pool-93-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:304.
09:37:22.992 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
09:37:22.992 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:301 which is executed by 13 tests
-2094234145
09:37:23.159 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:23.186 [pool-98-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:23.400 [pool-99-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:23.402 [pool-100-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:23.403 [pool-97-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:23.403 [pool-97-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:23.403 [pool-97-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:301.
09:37:23.403 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:23.428 [pool-102-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:23.627 [pool-103-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NotStrictlyPositiveException: 0.1 is smaller than, or equal to, the minimum (0)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:103)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:23.634 [pool-104-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[0.1 is smaller than, or equal to, the minimum (0)]
org.apache.commons.math4.exception.NotStrictlyPositiveException: 0.1 is smaller than, or equal to, the minimum (0)    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:103)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:23.635 [pool-101-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:23.635 [pool-101-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): 0.1 is smaller than, or equal to, the minimum (0)]
09:37:23.635 [pool-101-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:301.
09:37:23.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
09:37:23.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:298 which is executed by 14 tests
-2094234145
09:37:23.776 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:23.801 [pool-106-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:24.001 [pool-107-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:24.003 [pool-108-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:24.003 [pool-105-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:24.003 [pool-105-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:24.004 [pool-105-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:298.
09:37:24.004 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:24.038 [pool-110-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:24.234 [pool-111-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:138)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NullArgumentException: function
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:100)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:24.235 [pool-112-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function]
org.apache.commons.math4.exception.NullArgumentException: function    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:100)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:24.235 [pool-109-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:24.235 [pool-109-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function]
09:37:24.235 [pool-109-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:298.
09:37:24.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
09:37:24.236 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.function.Sin:33 which is executed by 96 tests
83129
09:37:24.370 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
09:37:24.370 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:2287 which is executed by 167 tests
1033054629
09:37:24.577 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:24.602 [pool-114-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [0.841, 0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:25.678 [pool-115-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [0.841, 0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [0.841, 0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:25.680 [pool-116-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:25.681 [pool-113-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [0.841, 0.717]]
09:37:25.682 [pool-113-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:25.682 [pool-113-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:2287.
09:37:25.682 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
09:37:25.682 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:2253 which is executed by 174 tests
1033054629
09:37:25.882 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:25.907 [pool-118-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.ArrayIndexOutOfBoundsException: -7
    at org.apache.commons.math4.util.FastMath.sinQ(FastMath.java:944)
    at org.apache.commons.math4.util.FastMath.sin(FastMath.java:1303)
    at org.apache.commons.math4.analysis.function.Sin.value(Sin.java:33)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:328)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:37:26.886 [pool-119-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[-7]
java.lang.ArrayIndexOutOfBoundsException: -7    at org.apache.commons.math4.util.FastMath.sinQ(FastMath.java:944)
    at org.apache.commons.math4.util.FastMath.sin(FastMath.java:1303)
    at org.apache.commons.math4.analysis.function.Sin.value(Sin.java:33)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:328)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:26.898 [pool-120-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:26.898 [pool-117-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): -7]
09:37:26.898 [pool-117-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:26.898 [pool-117-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:2253.
09:37:26.898 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
09:37:26.899 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:2252 which is executed by 174 tests
1033054629
09:37:27.093 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:27.118 [pool-122-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [0.841, 0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:28.082 [pool-123-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [0.841, 0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [0.841, 0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:28.083 [pool-124-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:28.084 [pool-121-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [0.841, 0.717]]
09:37:28.084 [pool-121-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:28.084 [pool-121-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:2252.
09:37:28.084 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
09:37:28.084 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:437 which is executed by 182 tests
-2094234145
09:37:28.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
09:37:28.254 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:436 which is executed by 183 tests
-2094234145
09:37:28.411 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:28.446 [pool-126-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:118)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:28.634 [pool-127-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:118)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:118)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:28.635 [pool-128-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:118)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:28.636 [pool-125-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:28.636 [pool-125-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:28.636 [pool-125-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:436.
09:37:28.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
09:37:28.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:435 which is executed by 185 tests
-2094234145
09:37:28.775 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:28.800 [pool-130-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:118)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:28.988 [pool-131-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:118)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:118)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:28.989 [pool-132-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:118)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:28.990 [pool-129-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:28.990 [pool-129-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:28.990 [pool-129-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:435.
09:37:28.990 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
09:37:28.990 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:420 which is executed by 266 tests
-2094234145
09:37:29.130 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
09:37:29.130 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:416 which is executed by 272 tests
-2094234145
09:37:29.271 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:29.300 [pool-134-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:118)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:29.489 [pool-135-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:118)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:118)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:29.490 [pool-136-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:118)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:29.491 [pool-133-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:29.491 [pool-133-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:29.491 [pool-133-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:416.
09:37:29.491 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:29.516 [pool-138-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:118)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:29.704 [pool-139-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:118)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NumberIsTooLargeException: endpoints do not specify an interval: [-1, -0.9]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.verifyInterval(UnivariateSolverUtils.java:154)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.verifySequence(UnivariateSolverUtils.java:159)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:88)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
09:37:29.705 [pool-140-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[endpoints do not specify an interval: [-1, -0.9]]
org.apache.commons.math4.exception.NumberIsTooLargeException: endpoints do not specify an interval: [-1, -0.9]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.verifyInterval(UnivariateSolverUtils.java:154)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.verifySequence(UnivariateSolverUtils.java:159)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:88)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

09:37:29.706 [pool-137-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:29.707 [pool-137-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): endpoints do not specify an interval: [-1, -0.9]]
09:37:29.707 [pool-137-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils:416.
09:37:29.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
09:37:29.707 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:2296 which is executed by 405 tests
1033054629
09:37:29.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
09:37:29.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:3498 which is executed by 475 tests
1033054629
09:37:30.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:30.122 [pool-142-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, �], values: [-0.841, �]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:30.987 [pool-143-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, �], values: [-0.841, �]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, �], values: [-0.841, �]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:30.988 [pool-144-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:30.988 [pool-141-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, �], values: [-0.841, �]]
09:37:30.988 [pool-141-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:30.989 [pool-141-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:3498.
09:37:30.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
09:37:30.989 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:3497 which is executed by 480 tests
1033054629
09:37:31.187 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:31.211 [pool-146-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, �], values: [-0.841, �]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:32.074 [pool-147-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, �], values: [-0.841, �]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, �], values: [-0.841, �]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:32.075 [pool-148-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:32.075 [pool-145-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, �], values: [-0.841, �]]
09:37:32.076 [pool-145-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:32.076 [pool-145-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:3497.
09:37:32.076 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:32.101 [pool-150-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, �], values: [-0.841, �]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:33.001 [pool-151-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, �], values: [-0.841, �]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, �], values: [-0.841, �]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:33.002 [pool-152-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:33.003 [pool-149-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, �], values: [-0.841, �]]
09:37:33.003 [pool-149-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:33.003 [pool-149-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:3497.
09:37:33.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
09:37:33.003 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:2290 which is executed by 507 tests
1033054629
09:37:33.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
09:37:33.209 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:2286 which is executed by 507 tests
1033054629
09:37:33.400 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:33.426 [pool-154-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [0.841, 0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:34.315 [pool-155-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [0.841, 0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [0.841, 0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:34.316 [pool-156-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:34.317 [pool-153-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [0.841, 0.717]]
09:37:34.317 [pool-153-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:34.317 [pool-153-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:2286.
09:37:34.317 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:34.346 [pool-158-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [0.841, 0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:35.267 [pool-159-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [0.841, 0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [0.841, 0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:35.268 [pool-160-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:35.268 [pool-157-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [0.841, 0.717]]
09:37:35.268 [pool-157-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:35.268 [pool-157-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:2286.
09:37:35.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
09:37:35.269 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:2270 which is executed by 507 tests
1033054629
09:37:35.499 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:35.524 [pool-162-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:36.375 [pool-163-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:36.376 [pool-164-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:36.377 [pool-161-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:36.377 [pool-161-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:36.377 [pool-161-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:2270.
09:37:36.377 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:36.401 [pool-166-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:37.241 [pool-167-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:37.242 [pool-168-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:37.242 [pool-165-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:37.242 [pool-165-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:37.243 [pool-165-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:2270.
09:37:37.243 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
09:37:37.243 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:2265 which is executed by 517 tests
1033054629
09:37:37.433 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:37.457 [pool-170-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:38.289 [pool-171-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:38.291 [pool-172-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:38.291 [pool-169-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:38.291 [pool-169-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:38.291 [pool-169-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:2265.
09:37:38.291 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:38.316 [pool-174-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:39.141 [pool-175-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [�, �]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:39.142 [pool-176-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [�, �]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [�, �]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:39.143 [pool-173-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:39.143 [pool-173-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [�, �]]
09:37:39.143 [pool-173-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:2265.
09:37:39.143 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
09:37:39.143 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:2257 which is executed by 518 tests
1033054629
09:37:39.332 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:39.356 [pool-178-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:40.219 [pool-179-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:40.220 [pool-180-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:40.221 [pool-177-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:40.221 [pool-177-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:40.221 [pool-177-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:2257.
09:37:40.221 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:40.245 [pool-182-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:41.066 [pool-183-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.AssertionError
    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:184)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
09:37:41.067 [pool-184-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[null]
java.lang.AssertionError    at org.junit.Assert.fail(Assert.java:86)
    at org.junit.Assert.assertTrue(Assert.java:41)
    at org.junit.Assert.assertTrue(Assert.java:52)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:184)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

09:37:41.067 [pool-181-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:41.067 [pool-181-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): null]
09:37:41.067 [pool-181-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:2257.
09:37:41.068 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
09:37:41.068 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:2251 which is executed by 518 tests
1033054629
09:37:41.256 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:41.280 [pool-186-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.ArrayIndexOutOfBoundsException: -7
    at org.apache.commons.math4.util.FastMath.sinQ(FastMath.java:944)
    at org.apache.commons.math4.util.FastMath.sin(FastMath.java:1299)
    at org.apache.commons.math4.analysis.function.Sin.value(Sin.java:33)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:328)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:37:42.128 [pool-187-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[-7]
java.lang.ArrayIndexOutOfBoundsException: -7    at org.apache.commons.math4.util.FastMath.sinQ(FastMath.java:944)
    at org.apache.commons.math4.util.FastMath.sin(FastMath.java:1299)
    at org.apache.commons.math4.analysis.function.Sin.value(Sin.java:33)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:328)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:42.139 [pool-188-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (10 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:42.139 [pool-185-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): -7]
09:37:42.140 [pool-185-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:42.140 [pool-185-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:2251.
09:37:42.140 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:42.165 [pool-190-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.ArrayIndexOutOfBoundsException: -7
    at org.apache.commons.math4.util.FastMath.sinQ(FastMath.java:944)
    at org.apache.commons.math4.util.FastMath.sin(FastMath.java:1299)
    at org.apache.commons.math4.analysis.function.Sin.value(Sin.java:33)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:328)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
09:37:42.979 [pool-191-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (6 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[-7]
java.lang.ArrayIndexOutOfBoundsException: -7    at org.apache.commons.math4.util.FastMath.sinQ(FastMath.java:944)
    at org.apache.commons.math4.util.FastMath.sin(FastMath.java:1299)
    at org.apache.commons.math4.analysis.function.Sin.value(Sin.java:33)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:328)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:42.990 [pool-192-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:42.990 [pool-189-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): -7]
09:37:42.990 [pool-189-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:42.990 [pool-189-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:2251.
09:37:42.990 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
09:37:42.990 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:2250 which is executed by 518 tests
1033054629
09:37:43.177 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:43.202 [pool-194-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:43.992 [pool-193-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:1268: error: variable xa might not have been initialized
            xa = -xa;
                  ^
FastMath.java:1270: error: variable xa might not have been initialized
        if (xa == 0.0) {
            ^
09:37:44.526 [pool-193-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class FastMath {
    public static final double PI = (1.05414357E8 / 3.3554432E7) + 1.984187159361081E-9;

    public static final double E = (2850325.0 / 1048576.0) + 8.254840070411029E-8;

    static final int EXP_INT_TABLE_MAX_INDEX = 750;

    static final int EXP_INT_TABLE_LEN = (org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX) * 2;

    static final int LN_MANT_LEN = 1024;

    static final int EXP_FRAC_TABLE_LEN = 1025;

    private static final double LOG_MAX_VALUE = java.lang.StrictMath.log(java.lang.Double.MAX_VALUE);

    private static final boolean RECOMPUTE_TABLES_AT_RUNTIME = false;

    private static final double LN_2_A = 0.6931470632553101;

    private static final double LN_2_B = 1.1730463525082348E-7;

    private static final double[][] LN_QUICK_COEF = new double[][]{ new double[]{ 1.0, 5.669184079525E-24 }, new double[]{ -0.25, -0.25 }, new double[]{ 0.3333333134651184, 1.986821492305628E-8 }, new double[]{ -0.25, -6.663542893624021E-14 }, new double[]{ 0.19999998807907104, 1.1921056801463227E-8 }, new double[]{ -0.1666666567325592, -7.800414592973399E-9 }, new double[]{ 0.1428571343421936, 5.650007086920087E-9 }, new double[]{ -0.12502530217170715, -7.44321345601866E-11 }, new double[]{ 0.11113807559013367, 9.219544613762692E-9 } };

    private static final double[][] LN_HI_PREC_COEF = new double[][]{ new double[]{ 1.0, -6.032174644509064E-23 }, new double[]{ -0.25, -0.25 }, new double[]{ 0.3333333134651184, 1.9868161777724352E-8 }, new double[]{ -0.2499999701976776, -2.957007209750105E-8 }, new double[]{ 0.19999954104423523, 1.5830993332061267E-10 }, new double[]{ -0.16624879837036133, -2.6033824355191673E-8 } };

    private static final int SINE_TABLE_LEN = 14;

    private static final double[] SINE_TABLE_A = new double[]{ +0.0, +0.1246747374534607, +0.24740394949913025, +0.366272509098053, +0.4794255495071411, +0.5850973129272461, +0.6816387176513672, +0.7675435543060303, +0.8414709568023682, +0.902267575263977, +0.9489846229553223, +0.9808930158615112, +0.9974949359893799, +0.9985313415527344 };

    private static final double[] SINE_TABLE_B = new double[]{ +0.0, -4.068233003401932E-9, +9.755392680573412E-9, +1.9987994582857286E-8, -1.0902938113007961E-8, -3.9986783938944604E-8, +4.23719669792332E-8, -5.207000323380292E-8, +2.800552834259E-8, +1.883511811213715E-8, -3.5997360512765566E-9, +4.116164446561962E-8, +5.0614674548127384E-8, -1.0129027912496858E-9 };

    private static final double[] COSINE_TABLE_A = new double[]{ +1.0, +0.9921976327896118, +0.9689123630523682, +0.9305076599121094, +0.8775825500488281, +0.8109631538391113, +0.7316888570785522, +0.6409968137741089, +0.5403022766113281, +0.4311765432357788, +0.3153223395347595, +0.19454771280288696, +0.07073719799518585, -0.05417713522911072 };

    private static final double[] COSINE_TABLE_B = new double[]{ +0.0, +3.4439717236742845E-8, +5.865827662008209E-8, -3.7999795083850525E-8, +1.184154459111628E-8, -3.43338934259355E-8, +1.1795268640216787E-8, +4.438921624363781E-8, +2.925681159240093E-8, -2.6437112632041807E-8, +2.2860509143963117E-8, -4.813899778443457E-9, +3.6725170580355583E-9, +2.0217439756338078E-10 };

    private static final double[] TANGENT_TABLE_A = new double[]{ +0.0, +0.1256551444530487, +0.25534194707870483, +0.3936265707015991, +0.5463024377822876, +0.7214844226837158, +0.9315965175628662, +1.1974215507507324, +1.5574076175689697, +2.092571258544922, +3.0095696449279785, +5.041914939880371, +14.101419448852539, -18.430862426757812 };

    private static final double[] TANGENT_TABLE_B = new double[]{ +0.0, -7.877917738262007E-9, -2.5857668567479893E-8, +5.2240336371356666E-9, +5.206150291559893E-8, +1.8307188599677033E-8, -5.7618793749770706E-8, +7.848361555046424E-8, +1.0708593250394448E-7, +1.7827257129423813E-8, +2.893485277253286E-8, +3.1660099222737955E-7, +4.983191803254889E-7, -3.356118100840571E-7 };

    private static final long[] RECIP_2PI = new long[]{ (683565275L << 32) | 2475754826L, (2131351028L << 32) | 2102212464L, (920167782L << 32) | 1326507024L, (2140428522L << 32) | 4155437400L, (1841896334L << 32) | 2425582776L, (26364858L << 32) | 2188665991L, (1065843399L << 32) | 743074255L, (3122695549L << 32) | 1269748001L, (979835913L << 32) | 2904022928L, (1315206542L << 32) | 1624559229L, (656480226L << 32) | 4018031118L, (3355321855L << 32) | 4152452611L, (4224435298L << 32) | 3598883655L, (3679297459L << 32) | 3388129901L, (3553726425L << 32) | 2811755147L, (1565126321L << 32) | 4210654302L, (3477196413L << 32) | 3801392314L, 2600392684L << 32 };

    private static final long[] PI_O_4_BITS = new long[]{ (3373259426L << 32) | 560513588L, (3301335691L << 32) | 2161908945L };

    private static final double[] EIGHTHS = new double[]{ 0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 1.125, 1.25, 1.375, 1.5, 1.625 };

    private static final double[] CBRTTWO = new double[]{ 0.6299605249474366, 0.7937005259840998, 1.0, 1.2599210498948732, 1.5874010519681994 };

    private static final long HEX_40000000 = 1073741824L;

    private static final long MASK_30BITS = (-1L) - ((org.apache.commons.math4.util.FastMath.HEX_40000000) - 1);

    private static final int MASK_NON_SIGN_INT = 2147483647;

    private static final long MASK_NON_SIGN_LONG = 9223372036854775807L;

    private static final double TWO_POWER_52 = 4.503599627370496E15;

    private static final double TWO_POWER_53 = 2 * (org.apache.commons.math4.util.FastMath.TWO_POWER_52);

    private static final double F_1_3 = 1.0 / 3.0;

    private static final double F_1_5 = 1.0 / 5.0;

    private static final double F_1_7 = 1.0 / 7.0;

    private static final double F_1_9 = 1.0 / 9.0;

    private static final double F_1_11 = 1.0 / 11.0;

    private static final double F_1_13 = 1.0 / 13.0;

    private static final double F_1_15 = 1.0 / 15.0;

    private static final double F_1_17 = 1.0 / 17.0;

    private static final double F_3_4 = 3.0 / 4.0;

    private static final double F_15_16 = 15.0 / 16.0;

    private static final double F_13_14 = 13.0 / 14.0;

    private static final double F_11_12 = 11.0 / 12.0;

    private static final double F_9_10 = 9.0 / 10.0;

    private static final double F_7_8 = 7.0 / 8.0;

    private static final double F_5_6 = 5.0 / 6.0;

    private static final double F_1_2 = 1.0 / 2.0;

    private static final double F_1_4 = 1.0 / 4.0;

    private FastMath() {
    }

    private static double doubleHighPart(double d) {
        if ((d > (-(org.apache.commons.math4.util.Precision.SAFE_MIN))) && (d < (org.apache.commons.math4.util.Precision.SAFE_MIN))) {
            return d;
        }
        long xl = java.lang.Double.doubleToRawLongBits(d);
        xl &= org.apache.commons.math4.util.FastMath.MASK_30BITS;
        return java.lang.Double.longBitsToDouble(xl);
    }

    public static double sqrt(final double a) {
        return java.lang.Math.sqrt(a);
    }

    public static double cosh(double x) {
        if (x != x) {
            return x;
        }
        if (x > 20) {
            if (x >= (org.apache.commons.math4.util.FastMath.LOG_MAX_VALUE)) {
                final double t = org.apache.commons.math4.util.FastMath.exp((0.5 * x));
                return (0.5 * t) * t;
            }else {
                return 0.5 * (org.apache.commons.math4.util.FastMath.exp(x));
            }
        }else
            if (x < (-20)) {
                if (x <= (-(org.apache.commons.math4.util.FastMath.LOG_MAX_VALUE))) {
                    final double t = org.apache.commons.math4.util.FastMath.exp(((-0.5) * x));
                    return (0.5 * t) * t;
                }else {
                    return 0.5 * (org.apache.commons.math4.util.FastMath.exp((-x)));
                }
            }

        final double[] hiPrec = new double[2];
        if (x < 0.0) {
            x = -x;
        }
        org.apache.commons.math4.util.FastMath.exp(x, 0.0, hiPrec);
        double ya = (hiPrec[0]) + (hiPrec[1]);
        double yb = -((ya - (hiPrec[0])) - (hiPrec[1]));
        double temp = ya * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double yaa = (ya + temp) - temp;
        double yab = ya - yaa;
        double recip = 1.0 / ya;
        temp = recip * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double recipa = (recip + temp) - temp;
        double recipb = recip - recipa;
        recipb += ((((1.0 - (yaa * recipa)) - (yaa * recipb)) - (yab * recipa)) - (yab * recipb)) * recip;
        recipb += ((-yb) * recip) * recip;
        temp = ya + recipa;
        yb += -((temp - ya) - recipa);
        ya = temp;
        temp = ya + recipb;
        yb += -((temp - ya) - recipb);
        ya = temp;
        double result = ya + yb;
        result *= 0.5;
        return result;
    }

    public static double sinh(double x) {
        boolean negate = false;
        if (x != x) {
            return x;
        }
        if (x > 20) {
            if (x >= (org.apache.commons.math4.util.FastMath.LOG_MAX_VALUE)) {
                final double t = org.apache.commons.math4.util.FastMath.exp((0.5 * x));
                return (0.5 * t) * t;
            }else {
                return 0.5 * (org.apache.commons.math4.util.FastMath.exp(x));
            }
        }else
            if (x < (-20)) {
                if (x <= (-(org.apache.commons.math4.util.FastMath.LOG_MAX_VALUE))) {
                    final double t = org.apache.commons.math4.util.FastMath.exp(((-0.5) * x));
                    return ((-0.5) * t) * t;
                }else {
                    return (-0.5) * (org.apache.commons.math4.util.FastMath.exp((-x)));
                }
            }

        if (x == 0) {
            return x;
        }
        if (x < 0.0) {
            x = -x;
            negate = true;
        }
        double result;
        if (x > 0.25) {
            double[] hiPrec = new double[2];
            org.apache.commons.math4.util.FastMath.exp(x, 0.0, hiPrec);
            double ya = (hiPrec[0]) + (hiPrec[1]);
            double yb = -((ya - (hiPrec[0])) - (hiPrec[1]));
            double temp = ya * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double yaa = (ya + temp) - temp;
            double yab = ya - yaa;
            double recip = 1.0 / ya;
            temp = recip * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double recipa = (recip + temp) - temp;
            double recipb = recip - recipa;
            recipb += ((((1.0 - (yaa * recipa)) - (yaa * recipb)) - (yab * recipa)) - (yab * recipb)) * recip;
            recipb += ((-yb) * recip) * recip;
            recipa = -recipa;
            recipb = -recipb;
            temp = ya + recipa;
            yb += -((temp - ya) - recipa);
            ya = temp;
            temp = ya + recipb;
            yb += -((temp - ya) - recipb);
            ya = temp;
            result = ya + yb;
            result *= 0.5;
        }else {
            double[] hiPrec = new double[2];
            org.apache.commons.math4.util.FastMath.expm1(x, hiPrec);
            double ya = (hiPrec[0]) + (hiPrec[1]);
            double yb = -((ya - (hiPrec[0])) - (hiPrec[1]));
            double denom = 1.0 + ya;
            double denomr = 1.0 / denom;
            double denomb = (-((denom - 1.0) - ya)) + yb;
            double ratio = ya * denomr;
            double temp = ratio * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double ra = (ratio + temp) - temp;
            double rb = ratio - ra;
            temp = denom * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double za = (denom + temp) - temp;
            double zb = denom - za;
            rb += ((((ya - (za * ra)) - (za * rb)) - (zb * ra)) - (zb * rb)) * denomr;
            rb += yb * denomr;
            rb += (((-ya) * denomb) * denomr) * denomr;
            temp = ya + ra;
            yb += -((temp - ya) - ra);
            ya = temp;
            temp = ya + rb;
            yb += -((temp - ya) - rb);
            ya = temp;
            result = ya + yb;
            result *= 0.5;
        }
        if (negate) {
            result = -result;
        }
        return result;
    }

    public static double tanh(double x) {
        boolean negate = false;
        if (x != x) {
            return x;
        }
        if (x > 20.0) {
            return 1.0;
        }
        if (x < (-20)) {
            return -1.0;
        }
        if (x == 0) {
            return x;
        }
        if (x < 0.0) {
            x = -x;
            negate = true;
        }
        double result;
        if (x >= 0.5) {
            double[] hiPrec = new double[2];
            org.apache.commons.math4.util.FastMath.exp((x * 2.0), 0.0, hiPrec);
            double ya = (hiPrec[0]) + (hiPrec[1]);
            double yb = -((ya - (hiPrec[0])) - (hiPrec[1]));
            double na = (-1.0) + ya;
            double nb = -((na + 1.0) - ya);
            double temp = na + yb;
            nb += -((temp - na) - yb);
            na = temp;
            double da = 1.0 + ya;
            double db = -((da - 1.0) - ya);
            temp = da + yb;
            db += -((temp - da) - yb);
            da = temp;
            temp = da * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double daa = (da + temp) - temp;
            double dab = da - daa;
            double ratio = na / da;
            temp = ratio * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double ratioa = (ratio + temp) - temp;
            double ratiob = ratio - ratioa;
            ratiob += ((((na - (daa * ratioa)) - (daa * ratiob)) - (dab * ratioa)) - (dab * ratiob)) / da;
            ratiob += nb / da;
            ratiob += (((-db) * na) / da) / da;
            result = ratioa + ratiob;
        }else {
            double[] hiPrec = new double[2];
            org.apache.commons.math4.util.FastMath.expm1((x * 2.0), hiPrec);
            double ya = (hiPrec[0]) + (hiPrec[1]);
            double yb = -((ya - (hiPrec[0])) - (hiPrec[1]));
            double na = ya;
            double nb = yb;
            double da = 2.0 + ya;
            double db = -((da - 2.0) - ya);
            double temp = da + yb;
            db += -((temp - da) - yb);
            da = temp;
            temp = da * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double daa = (da + temp) - temp;
            double dab = da - daa;
            double ratio = na / da;
            temp = ratio * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double ratioa = (ratio + temp) - temp;
            double ratiob = ratio - ratioa;
            ratiob += ((((na - (daa * ratioa)) - (daa * ratiob)) - (dab * ratioa)) - (dab * ratiob)) / da;
            ratiob += nb / da;
            ratiob += (((-db) * na) / da) / da;
            result = ratioa + ratiob;
        }
        if (negate) {
            result = -result;
        }
        return result;
    }

    public static double acosh(final double a) {
        return org.apache.commons.math4.util.FastMath.log((a + (org.apache.commons.math4.util.FastMath.sqrt(((a * a) - 1)))));
    }

    public static double asinh(double a) {
        boolean negative = false;
        if (a < 0) {
            negative = true;
            a = -a;
        }
        double absAsinh;
        if (a > 0.167) {
            absAsinh = org.apache.commons.math4.util.FastMath.log(((org.apache.commons.math4.util.FastMath.sqrt(((a * a) + 1))) + a));
        }else {
            final double a2 = a * a;
            if (a > 0.097) {
                absAsinh = a * (1 - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_3) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_5) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_7) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_9) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_11) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_13) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_15) - ((a2 * (org.apache.commons.math4.util.FastMath.F_1_17)) * (org.apache.commons.math4.util.FastMath.F_15_16)))) * (org.apache.commons.math4.util.FastMath.F_13_14)))) * (org.apache.commons.math4.util.FastMath.F_11_12)))) * (org.apache.commons.math4.util.FastMath.F_9_10)))) * (org.apache.commons.math4.util.FastMath.F_7_8)))) * (org.apache.commons.math4.util.FastMath.F_5_6)))) * (org.apache.commons.math4.util.FastMath.F_3_4)))) * (org.apache.commons.math4.util.FastMath.F_1_2)));
            }else
                if (a > 0.036) {
                    absAsinh = a * (1 - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_3) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_5) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_7) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_9) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_11) - ((a2 * (org.apache.commons.math4.util.FastMath.F_1_13)) * (org.apache.commons.math4.util.FastMath.F_11_12)))) * (org.apache.commons.math4.util.FastMath.F_9_10)))) * (org.apache.commons.math4.util.FastMath.F_7_8)))) * (org.apache.commons.math4.util.FastMath.F_5_6)))) * (org.apache.commons.math4.util.FastMath.F_3_4)))) * (org.apache.commons.math4.util.FastMath.F_1_2)));
                }else
                    if (a > 0.0036) {
                        absAsinh = a * (1 - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_3) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_5) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_7) - ((a2 * (org.apache.commons.math4.util.FastMath.F_1_9)) * (org.apache.commons.math4.util.FastMath.F_7_8)))) * (org.apache.commons.math4.util.FastMath.F_5_6)))) * (org.apache.commons.math4.util.FastMath.F_3_4)))) * (org.apache.commons.math4.util.FastMath.F_1_2)));
                    }else {
                        absAsinh = a * (1 - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_3) - ((a2 * (org.apache.commons.math4.util.FastMath.F_1_5)) * (org.apache.commons.math4.util.FastMath.F_3_4)))) * (org.apache.commons.math4.util.FastMath.F_1_2)));
                    }


        }
        return negative ? -absAsinh : absAsinh;
    }

    public static double atanh(double a) {
        boolean negative = false;
        if (a < 0) {
            negative = true;
            a = -a;
        }
        double absAtanh;
        if (a > 0.15) {
            absAtanh = 0.5 * (org.apache.commons.math4.util.FastMath.log(((1 + a) / (1 - a))));
        }else {
            final double a2 = a * a;
            if (a > 0.087) {
                absAtanh = a * (1 + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_3) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_5) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_7) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_9) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_11) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_13) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_15) + (a2 * (org.apache.commons.math4.util.FastMath.F_1_17)))))))))))))))));
            }else
                if (a > 0.031) {
                    absAtanh = a * (1 + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_3) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_5) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_7) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_9) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_11) + (a2 * (org.apache.commons.math4.util.FastMath.F_1_13)))))))))))));
                }else
                    if (a > 0.003) {
                        absAtanh = a * (1 + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_3) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_5) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_7) + (a2 * (org.apache.commons.math4.util.FastMath.F_1_9)))))))));
                    }else {
                        absAtanh = a * (1 + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_3) + (a2 * (org.apache.commons.math4.util.FastMath.F_1_5)))));
                    }


        }
        return negative ? -absAtanh : absAtanh;
    }

    public static double signum(final double a) {
        return a < 0.0 ? -1.0 : a > 0.0 ? 1.0 : a;
    }

    public static float signum(final float a) {
        return a < 0.0F ? -1.0F : a > 0.0F ? 1.0F : a;
    }

    public static double nextUp(final double a) {
        return org.apache.commons.math4.util.FastMath.nextAfter(a, java.lang.Double.POSITIVE_INFINITY);
    }

    public static float nextUp(final float a) {
        return org.apache.commons.math4.util.FastMath.nextAfter(a, java.lang.Float.POSITIVE_INFINITY);
    }

    public static double nextDown(final double a) {
        return org.apache.commons.math4.util.FastMath.nextAfter(a, java.lang.Double.NEGATIVE_INFINITY);
    }

    public static float nextDown(final float a) {
        return org.apache.commons.math4.util.FastMath.nextAfter(a, java.lang.Float.NEGATIVE_INFINITY);
    }

    public static double random() {
        return java.lang.Math.random();
    }

    public static double exp(double x) {
        return org.apache.commons.math4.util.FastMath.exp(x, 0.0, null);
    }

    private static double exp(double x, double extra, double[] hiPrec) {
        double intPartA;
        double intPartB;
        int intVal = ((int) (x));
        if (x < 0.0) {
            if (x < (-746.0)) {
                if (hiPrec != null) {
                    hiPrec[0] = 0.0;
                    hiPrec[1] = 0.0;
                }
                return 0.0;
            }
            if (intVal < (-709)) {
                final double result = (org.apache.commons.math4.util.FastMath.exp((x + 40.19140625), extra, hiPrec)) / 2.85040095144011776E17;
                if (hiPrec != null) {
                    hiPrec[0] /= 2.85040095144011776E17;
                    hiPrec[1] /= 2.85040095144011776E17;
                }
                return result;
            }
            if (intVal == (-709)) {
                final double result = (org.apache.commons.math4.util.FastMath.exp((x + 1.494140625), extra, hiPrec)) / 4.455505956692757;
                if (hiPrec != null) {
                    hiPrec[0] /= 4.455505956692757;
                    hiPrec[1] /= 4.455505956692757;
                }
                return result;
            }
            intVal--;
        }else {
            if (intVal > 709) {
                if (hiPrec != null) {
                    hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
                    hiPrec[1] = 0.0;
                }
                return java.lang.Double.POSITIVE_INFINITY;
            }
        }
        intPartA = org.apache.commons.math4.util.FastMath.ExpIntTable.EXP_INT_TABLE_A[((org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX) + intVal)];
        intPartB = org.apache.commons.math4.util.FastMath.ExpIntTable.EXP_INT_TABLE_B[((org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX) + intVal)];
        final int intFrac = ((int) ((x - intVal) * 1024.0));
        final double fracPartA = org.apache.commons.math4.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A[intFrac];
        final double fracPartB = org.apache.commons.math4.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B[intFrac];
        final double epsilon = x - (intVal + (intFrac / 1024.0));
        double z = 0.04168701738764507;
        z = (z * epsilon) + 0.1666666505023083;
        z = (z * epsilon) + 0.5000000000042687;
        z = (z * epsilon) + 1.0;
        z = (z * epsilon) + (-3.940510424527919E-20);
        double tempA = intPartA * fracPartA;
        double tempB = ((intPartA * fracPartB) + (intPartB * fracPartA)) + (intPartB * fracPartB);
        final double tempC = tempB + tempA;
        final double result;
        if (extra != 0.0) {
            result = (((((tempC * extra) * z) + (tempC * extra)) + (tempC * z)) + tempB) + tempA;
        }else {
            result = ((tempC * z) + tempB) + tempA;
        }
        if (hiPrec != null) {
            hiPrec[0] = tempA;
            hiPrec[1] = ((((tempC * extra) * z) + (tempC * extra)) + (tempC * z)) + tempB;
        }
        return result;
    }

    public static double expm1(double x) {
        return org.apache.commons.math4.util.FastMath.expm1(x, null);
    }

    private static double expm1(double x, double[] hiPrecOut) {
        if ((x != x) || (x == 0.0)) {
            return x;
        }
        if ((x <= (-1.0)) || (x >= 1.0)) {
            double[] hiPrec = new double[2];
            org.apache.commons.math4.util.FastMath.exp(x, 0.0, hiPrec);
            if (x > 0.0) {
                return ((-1.0) + (hiPrec[0])) + (hiPrec[1]);
            }else {
                final double ra = (-1.0) + (hiPrec[0]);
                double rb = -((ra + 1.0) - (hiPrec[0]));
                rb += hiPrec[1];
                return ra + rb;
            }
        }
        double baseA;
        double baseB;
        double epsilon;
        boolean negative = false;
        if (x < 0.0) {
            x = -x;
            negative = true;
        }
        {
            int intFrac = ((int) (x * 1024.0));
            double tempA = (org.apache.commons.math4.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A[intFrac]) - 1.0;
            double tempB = org.apache.commons.math4.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B[intFrac];
            double temp = tempA + tempB;
            tempB = -((temp - tempA) - tempB);
            tempA = temp;
            temp = tempA * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            baseA = (tempA + temp) - temp;
            baseB = tempB + (tempA - baseA);
            epsilon = x - (intFrac / 1024.0);
        }
        double zb = 0.008336750013465571;
        zb = (zb * epsilon) + 0.041666663879186654;
        zb = (zb * epsilon) + 0.16666666666745392;
        zb = (zb * epsilon) + 0.49999999999999994;
        zb *= epsilon;
        zb *= epsilon;
        double za = epsilon;
        double temp = za + zb;
        zb = -((temp - za) - zb);
        za = temp;
        temp = za * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        temp = (za + temp) - temp;
        zb += za - temp;
        za = temp;
        double ya = za * baseA;
        temp = ya + (za * baseB);
        double yb = -((temp - ya) - (za * baseB));
        ya = temp;
        temp = ya + (zb * baseA);
        yb += -((temp - ya) - (zb * baseA));
        ya = temp;
        temp = ya + (zb * baseB);
        yb += -((temp - ya) - (zb * baseB));
        ya = temp;
        temp = ya + baseA;
        yb += -((temp - baseA) - ya);
        ya = temp;
        temp = ya + za;
        yb += -((temp - ya) - za);
        ya = temp;
        temp = ya + baseB;
        yb += -((temp - ya) - baseB);
        ya = temp;
        temp = ya + zb;
        yb += -((temp - ya) - zb);
        ya = temp;
        if (negative) {
            double denom = 1.0 + ya;
            double denomr = 1.0 / denom;
            double denomb = (-((denom - 1.0) - ya)) + yb;
            double ratio = ya * denomr;
            temp = ratio * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            final double ra = (ratio + temp) - temp;
            double rb = ratio - ra;
            temp = denom * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            za = (denom + temp) - temp;
            zb = denom - za;
            rb += ((((ya - (za * ra)) - (za * rb)) - (zb * ra)) - (zb * rb)) * denomr;
            rb += yb * denomr;
            rb += (((-ya) * denomb) * denomr) * denomr;
            ya = -ra;
            yb = -rb;
        }
        if (hiPrecOut != null) {
            hiPrecOut[0] = ya;
            hiPrecOut[1] = yb;
        }
        return ya + yb;
    }

    public static double log(final double x) {
        return org.apache.commons.math4.util.FastMath.log(x, null);
    }

    private static double log(final double x, final double[] hiPrec) {
        if (x == 0) {
            return java.lang.Double.NEGATIVE_INFINITY;
        }
        long bits = java.lang.Double.doubleToRawLongBits(x);
        if ((((bits & -9223372036854775808L) != 0) || (x != x)) && (x != 0.0)) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            }
            return java.lang.Double.NaN;
        }
        if (x == (java.lang.Double.POSITIVE_INFINITY)) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
            }
            return java.lang.Double.POSITIVE_INFINITY;
        }
        int exp = ((int) (bits >> 52)) - 1023;
        if ((bits & 9218868437227405312L) == 0) {
            if (x == 0) {
                if (hiPrec != null) {
                    hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
                }
                return java.lang.Double.NEGATIVE_INFINITY;
            }
            bits <<= 1;
            while ((bits & 4503599627370496L) == 0) {
                --exp;
                bits <<= 1;
            } 
        }
        if (((((exp == (-1)) || (exp == 0)) && (x < 1.01)) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            final double[] lnCoef_last = org.apache.commons.math4.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math4.util.FastMath.LN_QUICK_COEF.length) - 1)];
            double ya = lnCoef_last[0];
            double yb = lnCoef_last[1];
            for (int i = (org.apache.commons.math4.util.FastMath.LN_QUICK_COEF.length) - 2; i >= 0; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math4.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                final double[] lnCoef_i = org.apache.commons.math4.util.FastMath.LN_QUICK_COEF[i];
                aa = ya + (lnCoef_i[0]);
                ab = yb + (lnCoef_i[1]);
                tmp = aa * (org.apache.commons.math4.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        }
        final double[] lnm = org.apache.commons.math4.util.FastMath.lnMant.LN_MANT[((int) ((bits & 4499201580859392L) >> 42))];
        final double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math4.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
        double lnza = 0.0;
        double lnzb = 0.0;
        if (hiPrec != null) {
            double tmp = epsilon * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double aa = (epsilon + tmp) - tmp;
            double ab = epsilon - aa;
            double xa = aa;
            double xb = ab;
            final double numer = bits & 4398046511103L;
            final double denom = (org.apache.commons.math4.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
            aa = (numer - (xa * denom)) - (xb * denom);
            xb += aa / denom;
            final double[] lnCoef_last = org.apache.commons.math4.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math4.util.FastMath.LN_HI_PREC_COEF.length) - 1)];
            double ya = lnCoef_last[0];
            double yb = lnCoef_last[1];
            for (int i = (org.apache.commons.math4.util.FastMath.LN_HI_PREC_COEF.length) - 2; i >= 0; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math4.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                final double[] lnCoef_i = org.apache.commons.math4.util.FastMath.LN_HI_PREC_COEF[i];
                aa = ya + (lnCoef_i[0]);
                ab = yb + (lnCoef_i[1]);
                tmp = aa * (org.apache.commons.math4.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            lnza = aa + ab;
            lnzb = -((lnza - aa) - ab);
        }else {
            lnza = -0.16624882440418567;
            lnza = (lnza * epsilon) + 0.19999954120254515;
            lnza = (lnza * epsilon) + (-0.2499999997677497);
            lnza = (lnza * epsilon) + 0.3333333333332802;
            lnza = (lnza * epsilon) + (-0.5);
            lnza = (lnza * epsilon) + 1.0;
            lnza *= epsilon;
        }
        double a = (org.apache.commons.math4.util.FastMath.LN_2_A) * exp;
        double b = 0.0;
        double c = a + (lnm[0]);
        double d = -((c - a) - (lnm[0]));
        a = c;
        b += d;
        c = a + lnza;
        d = -((c - a) - lnza);
        a = c;
        b += d;
        c = a + ((org.apache.commons.math4.util.FastMath.LN_2_B) * exp);
        d = -((c - a) - ((org.apache.commons.math4.util.FastMath.LN_2_B) * exp));
        a = c;
        b += d;
        c = a + (lnm[1]);
        d = -((c - a) - (lnm[1]));
        a = c;
        b += d;
        c = a + lnzb;
        d = -((c - a) - lnzb);
        a = c;
        b += d;
        if (hiPrec != null) {
            hiPrec[0] = a;
            hiPrec[1] = b;
        }
        return a + b;
    }

    public static double log1p(final double x) {
        if (x == (-1)) {
            return java.lang.Double.NEGATIVE_INFINITY;
        }
        if (x == (java.lang.Double.POSITIVE_INFINITY)) {
            return java.lang.Double.POSITIVE_INFINITY;
        }
        if ((x > 1.0E-6) || (x < (-1.0E-6))) {
            final double xpa = 1 + x;
            final double xpb = -((xpa - 1) - x);
            final double[] hiPrec = new double[2];
            final double lores = org.apache.commons.math4.util.FastMath.log(xpa, hiPrec);
            if (java.lang.Double.isInfinite(lores)) {
                return lores;
            }
            final double fx1 = xpb / xpa;
            final double epsilon = (0.5 * fx1) + 1;
            return ((epsilon * fx1) + (hiPrec[1])) + (hiPrec[0]);
        }else {
            final double y = (((x * (org.apache.commons.math4.util.FastMath.F_1_3)) - (org.apache.commons.math4.util.FastMath.F_1_2)) * x) + 1;
            return y * x;
        }
    }

    public static double log10(final double x) {
        final double[] hiPrec = new double[2];
        final double lores = org.apache.commons.math4.util.FastMath.log(x, hiPrec);
        if (java.lang.Double.isInfinite(lores)) {
            return lores;
        }
        final double tmp = (hiPrec[0]) * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        final double lna = ((hiPrec[0]) + tmp) - tmp;
        final double lnb = ((hiPrec[0]) - lna) + (hiPrec[1]);
        final double rln10a = 0.4342944622039795;
        final double rln10b = 1.9699272335463627E-8;
        return (((rln10b * lnb) + (rln10b * lna)) + (rln10a * lnb)) + (rln10a * lna);
    }

    public static double log(double base, double x) {
        return (org.apache.commons.math4.util.FastMath.log(x)) / (org.apache.commons.math4.util.FastMath.log(base));
    }

    public static double pow(double x, double y) {
        final double[] lns = new double[2];
        if (y == 0.0) {
            return 1.0;
        }
        if (x != x) {
            return x;
        }
        if (x == 0) {
            long bits = java.lang.Double.doubleToRawLongBits(x);
            if ((bits & -9223372036854775808L) != 0) {
                long yi = ((long) (y));
                if (((y < 0) && (y == yi)) && ((yi & 1) == 1)) {
                    return java.lang.Double.NEGATIVE_INFINITY;
                }
                if (((y > 0) && (y == yi)) && ((yi & 1) == 1)) {
                    return -0.0;
                }
            }
            if (y < 0) {
                return java.lang.Double.POSITIVE_INFINITY;
            }
            if (y > 0) {
                return 0.0;
            }
            return java.lang.Double.NaN;
        }
        if (x == (java.lang.Double.POSITIVE_INFINITY)) {
            if (y != y) {
                return y;
            }
            if (y < 0.0) {
                return 0.0;
            }else {
                return java.lang.Double.POSITIVE_INFINITY;
            }
        }
        if (y == (java.lang.Double.POSITIVE_INFINITY)) {
            if ((x * x) == 1.0) {
                return java.lang.Double.NaN;
            }
            if ((x * x) > 1.0) {
                return java.lang.Double.POSITIVE_INFINITY;
            }else {
                return 0.0;
            }
        }
        if (x == (java.lang.Double.NEGATIVE_INFINITY)) {
            if (y != y) {
                return y;
            }
            if (y < 0) {
                long yi = ((long) (y));
                if ((y == yi) && ((yi & 1) == 1)) {
                    return -0.0;
                }
                return 0.0;
            }
            if (y > 0) {
                long yi = ((long) (y));
                if ((y == yi) && ((yi & 1) == 1)) {
                    return java.lang.Double.NEGATIVE_INFINITY;
                }
                return java.lang.Double.POSITIVE_INFINITY;
            }
        }
        if (y == (java.lang.Double.NEGATIVE_INFINITY)) {
            if ((x * x) == 1.0) {
                return java.lang.Double.NaN;
            }
            if ((x * x) < 1.0) {
                return java.lang.Double.POSITIVE_INFINITY;
            }else {
                return 0.0;
            }
        }
        if (x < 0) {
            if ((y >= (org.apache.commons.math4.util.FastMath.TWO_POWER_53)) || (y <= (-(org.apache.commons.math4.util.FastMath.TWO_POWER_53)))) {
                return org.apache.commons.math4.util.FastMath.pow((-x), y);
            }
            if (y == ((long) (y))) {
                return (((long) (y)) & 1) == 0 ? org.apache.commons.math4.util.FastMath.pow((-x), y) : -(org.apache.commons.math4.util.FastMath.pow((-x), y));
            }else {
                return java.lang.Double.NaN;
            }
        }
        double ya;
        double yb;
        if ((y < 8.0E298) && (y > (-8.0E298))) {
            double tmp1 = y * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            ya = (y + tmp1) - tmp1;
            yb = y - ya;
        }else {
            double tmp1 = y * 9.313225746154785E-10;
            double tmp2 = tmp1 * 9.313225746154785E-10;
            ya = (((tmp1 + tmp2) - tmp1) * (org.apache.commons.math4.util.FastMath.HEX_40000000)) * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            yb = y - ya;
        }
        final double lores = org.apache.commons.math4.util.FastMath.log(x, lns);
        if (java.lang.Double.isInfinite(lores)) {
            return lores;
        }
        double lna = lns[0];
        double lnb = lns[1];
        double tmp1 = lna * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double tmp2 = (lna + tmp1) - tmp1;
        lnb += lna - tmp2;
        lna = tmp2;
        final double aa = lna * ya;
        final double ab = ((lna * yb) + (lnb * ya)) + (lnb * yb);
        lna = aa + ab;
        lnb = -((lna - aa) - ab);
        double z = 1.0 / 120.0;
        z = (z * lnb) + (1.0 / 24.0);
        z = (z * lnb) + (1.0 / 6.0);
        z = (z * lnb) + 0.5;
        z = (z * lnb) + 1.0;
        z *= lnb;
        final double result = org.apache.commons.math4.util.FastMath.exp(lna, z, null);
        return result;
    }

    public static double pow(double d, int e) {
        if (e == 0) {
            return 1.0;
        }else
            if (e < 0) {
                e = -e;
                d = 1.0 / d;
            }

        final int splitFactor = 134217729;
        final double cd = splitFactor * d;
        final double d1High = cd - (cd - d);
        final double d1Low = d - d1High;
        double resultHigh = 1;
        double resultLow = 0;
        double d2p = d;
        double d2pHigh = d1High;
        double d2pLow = d1Low;
        while (e != 0) {
            if ((e & 1) != 0) {
                final double tmpHigh = resultHigh * d2p;
                final double cRH = splitFactor * resultHigh;
                final double rHH = cRH - (cRH - resultHigh);
                final double rHL = resultHigh - rHH;
                final double tmpLow = (rHL * d2pLow) - (((tmpHigh - (rHH * d2pHigh)) - (rHL * d2pHigh)) - (rHH * d2pLow));
                resultHigh = tmpHigh;
                resultLow = (resultLow * d2p) + tmpLow;
            }
            final double tmpHigh = d2pHigh * d2p;
            final double cD2pH = splitFactor * d2pHigh;
            final double d2pHH = cD2pH - (cD2pH - d2pHigh);
            final double d2pHL = d2pHigh - d2pHH;
            final double tmpLow = (d2pHL * d2pLow) - (((tmpHigh - (d2pHH * d2pHigh)) - (d2pHL * d2pHigh)) - (d2pHH * d2pLow));
            final double cTmpH = splitFactor * tmpHigh;
            d2pHigh = cTmpH - (cTmpH - tmpHigh);
            d2pLow = ((d2pLow * d2p) + tmpLow) + (tmpHigh - d2pHigh);
            d2p = d2pHigh + d2pLow;
            e >>= 1;
        } 
        return resultHigh + resultLow;
    }

    private static double polySine(final double x) {
        double x2 = x * x;
        double p = 2.7553817452272217E-6;
        p = (p * x2) + (-1.9841269659586505E-4);
        p = (p * x2) + 0.008333333333329196;
        p = (p * x2) + (-0.16666666666666666);
        p = (p * x2) * x;
        return p;
    }

    private static double polyCosine(double x) {
        double x2 = x * x;
        double p = 2.479773539153719E-5;
        p = (p * x2) + (-0.0013888888689039883);
        p = (p * x2) + 0.041666666666621166;
        p = (p * x2) + (-0.49999999999999994);
        p *= x2;
        return p;
    }

    private static double sinQ(double xa, double xb) {
        int idx = ((int) ((xa * 8.0) + 0.5));
        final double epsilon = xa - (org.apache.commons.math4.util.FastMath.EIGHTHS[idx]);
        final double sintA = org.apache.commons.math4.util.FastMath.SINE_TABLE_A[idx];
        final double sintB = org.apache.commons.math4.util.FastMath.SINE_TABLE_B[idx];
        final double costA = org.apache.commons.math4.util.FastMath.COSINE_TABLE_A[idx];
        final double costB = org.apache.commons.math4.util.FastMath.COSINE_TABLE_B[idx];
        double sinEpsA = epsilon;
        double sinEpsB = org.apache.commons.math4.util.FastMath.polySine(epsilon);
        final double cosEpsA = 1.0;
        final double cosEpsB = org.apache.commons.math4.util.FastMath.polyCosine(epsilon);
        final double temp = sinEpsA * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double temp2 = (sinEpsA + temp) - temp;
        sinEpsB += sinEpsA - temp2;
        sinEpsA = temp2;
        double result;
        double a = 0;
        double b = 0;
        double t = sintA;
        double c = a + t;
        double d = -((c - a) - t);
        a = c;
        b += d;
        t = costA * sinEpsA;
        c = a + t;
        d = -((c - a) - t);
        a = c;
        b += d;
        b = (b + (sintA * cosEpsB)) + (costA * sinEpsB);
        b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB);
        if (xb != 0.0) {
            t = (((costA + costB) * (cosEpsA + cosEpsB)) - ((sintA + sintB) * (sinEpsA + sinEpsB))) * xb;
            c = a + t;
            d = -((c - a) - t);
            a = c;
            b += d;
        }
        result = a + b;
        return result;
    }

    private static double cosQ(double xa, double xb) {
        final double pi2a = 1.5707963267948966;
        final double pi2b = 6.123233995736766E-17;
        final double a = pi2a - xa;
        double b = -((a - pi2a) + xa);
        b += pi2b - xb;
        return org.apache.commons.math4.util.FastMath.sinQ(a, b);
    }

    private static double tanQ(double xa, double xb, boolean cotanFlag) {
        int idx = ((int) ((xa * 8.0) + 0.5));
        final double epsilon = xa - (org.apache.commons.math4.util.FastMath.EIGHTHS[idx]);
        final double sintA = org.apache.commons.math4.util.FastMath.SINE_TABLE_A[idx];
        final double sintB = org.apache.commons.math4.util.FastMath.SINE_TABLE_B[idx];
        final double costA = org.apache.commons.math4.util.FastMath.COSINE_TABLE_A[idx];
        final double costB = org.apache.commons.math4.util.FastMath.COSINE_TABLE_B[idx];
        double sinEpsA = epsilon;
        double sinEpsB = org.apache.commons.math4.util.FastMath.polySine(epsilon);
        final double cosEpsA = 1.0;
        final double cosEpsB = org.apache.commons.math4.util.FastMath.polyCosine(epsilon);
        double temp = sinEpsA * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double temp2 = (sinEpsA + temp) - temp;
        sinEpsB += sinEpsA - temp2;
        sinEpsA = temp2;
        double a = 0;
        double b = 0;
        double t = sintA;
        double c = a + t;
        double d = -((c - a) - t);
        a = c;
        b += d;
        t = costA * sinEpsA;
        c = a + t;
        d = -((c - a) - t);
        a = c;
        b += d;
        b += (sintA * cosEpsB) + (costA * sinEpsB);
        b += ((sintB + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB);
        double sina = a + b;
        double sinb = -((sina - a) - b);
        a = b = c = d = 0.0;
        t = costA * cosEpsA;
        c = a + t;
        d = -((c - a) - t);
        a = c;
        b += d;
        t = (-sintA) * sinEpsA;
        c = a + t;
        d = -((c - a) - t);
        a = c;
        b += d;
        b += ((costB * cosEpsA) + (costA * cosEpsB)) + (costB * cosEpsB);
        b -= ((sintB * sinEpsA) + (sintA * sinEpsB)) + (sintB * sinEpsB);
        double cosa = a + b;
        double cosb = -((cosa - a) - b);
        if (cotanFlag) {
            double tmp;
            tmp = cosa;
            cosa = sina;
            sina = tmp;
            tmp = cosb;
            cosb = sinb;
            sinb = tmp;
        }
        double est = sina / cosa;
        temp = est * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double esta = (est + temp) - temp;
        double estb = est - esta;
        temp = cosa * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double cosaa = (cosa + temp) - temp;
        double cosab = cosa - cosaa;
        double err = ((((sina - (esta * cosaa)) - (esta * cosab)) - (estb * cosaa)) - (estb * cosab)) / cosa;
        err += sinb / cosa;
        err += (((-sina) * cosb) / cosa) / cosa;
        if (xb != 0.0) {
            double xbadj = xb + ((est * est) * xb);
            if (cotanFlag) {
                xbadj = -xbadj;
            }
            err += xbadj;
        }
        return est + err;
    }

    private static void reducePayneHanek(double x, double[] result) {
        long inbits = java.lang.Double.doubleToRawLongBits(x);
        int exponent = ((int) ((inbits >> 52) & 2047)) - 1023;
        inbits &= 4503599627370495L;
        inbits |= 4503599627370496L;
        exponent++;
        inbits <<= 11;
        long shpi0;
        long shpiA;
        long shpiB;
        int idx = exponent >> 6;
        int shift = exponent - (idx << 6);
        if (shift != 0) {
            shpi0 = (idx == 0) ? 0 : (org.apache.commons.math4.util.FastMath.RECIP_2PI[(idx - 1)]) << shift;
            shpi0 |= (org.apache.commons.math4.util.FastMath.RECIP_2PI[idx]) >>> (64 - shift);
            shpiA = ((org.apache.commons.math4.util.FastMath.RECIP_2PI[idx]) << shift) | ((org.apache.commons.math4.util.FastMath.RECIP_2PI[(idx + 1)]) >>> (64 - shift));
            shpiB = ((org.apache.commons.math4.util.FastMath.RECIP_2PI[(idx + 1)]) << shift) | ((org.apache.commons.math4.util.FastMath.RECIP_2PI[(idx + 2)]) >>> (64 - shift));
        }else {
            shpi0 = (idx == 0) ? 0 : org.apache.commons.math4.util.FastMath.RECIP_2PI[(idx - 1)];
            shpiA = org.apache.commons.math4.util.FastMath.RECIP_2PI[idx];
            shpiB = org.apache.commons.math4.util.FastMath.RECIP_2PI[(idx + 1)];
        }
        long a = inbits >>> 32;
        long b = inbits & 4294967295L;
        long c = shpiA >>> 32;
        long d = shpiA & 4294967295L;
        long ac = a * c;
        long bd = b * d;
        long bc = b * c;
        long ad = a * d;
        long prodB = bd + (ad << 32);
        long prodA = ac + (ad >>> 32);
        boolean bita = (bd & -9223372036854775808L) != 0;
        boolean bitb = (ad & 2147483648L) != 0;
        boolean bitsum = (prodB & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prodA++;
        }
        bita = (prodB & -9223372036854775808L) != 0;
        bitb = (bc & 2147483648L) != 0;
        prodB += bc << 32;
        prodA += bc >>> 32;
        bitsum = (prodB & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prodA++;
        }
        c = shpiB >>> 32;
        d = shpiB & 4294967295L;
        ac = a * c;
        bc = b * c;
        ad = a * d;
        ac += (bc + ad) >>> 32;
        bita = (prodB & -9223372036854775808L) != 0;
        bitb = (ac & -9223372036854775808L) != 0;
        prodB += ac;
        bitsum = (prodB & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prodA++;
        }
        c = shpi0 >>> 32;
        d = shpi0 & 4294967295L;
        bd = b * d;
        bc = b * c;
        ad = a * d;
        prodA += bd + ((bc + ad) << 32);
        int intPart = ((int) (prodA >>> 62));
        prodA <<= 2;
        prodA |= prodB >>> 62;
        prodB <<= 2;
        a = prodA >>> 32;
        b = prodA & 4294967295L;
        c = (org.apache.commons.math4.util.FastMath.PI_O_4_BITS[0]) >>> 32;
        d = (org.apache.commons.math4.util.FastMath.PI_O_4_BITS[0]) & 4294967295L;
        ac = a * c;
        bd = b * d;
        bc = b * c;
        ad = a * d;
        long prod2B = bd + (ad << 32);
        long prod2A = ac + (ad >>> 32);
        bita = (bd & -9223372036854775808L) != 0;
        bitb = (ad & 2147483648L) != 0;
        bitsum = (prod2B & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prod2A++;
        }
        bita = (prod2B & -9223372036854775808L) != 0;
        bitb = (bc & 2147483648L) != 0;
        prod2B += bc << 32;
        prod2A += bc >>> 32;
        bitsum = (prod2B & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prod2A++;
        }
        c = (org.apache.commons.math4.util.FastMath.PI_O_4_BITS[1]) >>> 32;
        d = (org.apache.commons.math4.util.FastMath.PI_O_4_BITS[1]) & 4294967295L;
        ac = a * c;
        bc = b * c;
        ad = a * d;
        ac += (bc + ad) >>> 32;
        bita = (prod2B & -9223372036854775808L) != 0;
        bitb = (ac & -9223372036854775808L) != 0;
        prod2B += ac;
        bitsum = (prod2B & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prod2A++;
        }
        a = prodB >>> 32;
        b = prodB & 4294967295L;
        c = (org.apache.commons.math4.util.FastMath.PI_O_4_BITS[0]) >>> 32;
        d = (org.apache.commons.math4.util.FastMath.PI_O_4_BITS[0]) & 4294967295L;
        ac = a * c;
        bc = b * c;
        ad = a * d;
        ac += (bc + ad) >>> 32;
        bita = (prod2B & -9223372036854775808L) != 0;
        bitb = (ac & -9223372036854775808L) != 0;
        prod2B += ac;
        bitsum = (prod2B & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prod2A++;
        }
        double tmpA = (prod2A >>> 12) / (org.apache.commons.math4.util.FastMath.TWO_POWER_52);
        double tmpB = ((((prod2A & 4095L) << 40) + (prod2B >>> 24)) / (org.apache.commons.math4.util.FastMath.TWO_POWER_52)) / (org.apache.commons.math4.util.FastMath.TWO_POWER_52);
        double sumA = tmpA + tmpB;
        double sumB = -((sumA - tmpA) - tmpB);
        result[0] = intPart;
        result[1] = sumA * 2.0;
        result[2] = sumB * 2.0;
    }

    public static double sin(double x) {
        boolean negative = false;
        int quadrant = 0;
        double xa;
        double xb = 0.0;
        boolean spoonDefaultValue = false;
        try {
            spoonDefaultValue = true;
        } catch (java.lang.Exception __NopolProcessorException) {
        }
        boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
        if (fr.inria.lille.commons.trace.RuntimeValues.instance(41).isEnabled()) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectionStarts();
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.EXP_FRAC_TABLE_LEN",org.apache.commons.math4.util.FastMath.EXP_FRAC_TABLE_LEN);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.RECIP_2PI",org.apache.commons.math4.util.FastMath.RECIP_2PI);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.LN_MANT_LEN",org.apache.commons.math4.util.FastMath.LN_MANT_LEN);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX",org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.TWO_POWER_52",org.apache.commons.math4.util.FastMath.TWO_POWER_52);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.TWO_POWER_53",org.apache.commons.math4.util.FastMath.TWO_POWER_53);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.F_9_10",org.apache.commons.math4.util.FastMath.F_9_10);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.EIGHTHS",org.apache.commons.math4.util.FastMath.EIGHTHS);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("quadrant",quadrant);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.CBRTTWO",org.apache.commons.math4.util.FastMath.CBRTTWO);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_LEN",org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_LEN);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.LOG_MAX_VALUE",org.apache.commons.math4.util.FastMath.LOG_MAX_VALUE);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.COSINE_TABLE_B",org.apache.commons.math4.util.FastMath.COSINE_TABLE_B);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.SINE_TABLE_LEN",org.apache.commons.math4.util.FastMath.SINE_TABLE_LEN);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.COSINE_TABLE_A",org.apache.commons.math4.util.FastMath.COSINE_TABLE_A);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.LN_2_A",org.apache.commons.math4.util.FastMath.LN_2_A);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.F_15_16",org.apache.commons.math4.util.FastMath.F_15_16);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.LN_2_B",org.apache.commons.math4.util.FastMath.LN_2_B);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.F_11_12",org.apache.commons.math4.util.FastMath.F_11_12);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.F_7_8",org.apache.commons.math4.util.FastMath.F_7_8);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.SINE_TABLE_A",org.apache.commons.math4.util.FastMath.SINE_TABLE_A);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.SINE_TABLE_B",org.apache.commons.math4.util.FastMath.SINE_TABLE_B);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.F_1_4",org.apache.commons.math4.util.FastMath.F_1_4);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.F_1_3",org.apache.commons.math4.util.FastMath.F_1_3);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.F_3_4",org.apache.commons.math4.util.FastMath.F_3_4);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.F_1_5",org.apache.commons.math4.util.FastMath.F_1_5);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.F_1_7",org.apache.commons.math4.util.FastMath.F_1_7);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.F_5_6",org.apache.commons.math4.util.FastMath.F_5_6);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.F_1_9",org.apache.commons.math4.util.FastMath.F_1_9);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.MASK_30BITS",org.apache.commons.math4.util.FastMath.MASK_30BITS);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("negative",negative);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math4.util.FastMath.LN_HI_PREC_COEF);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.F_1_2",org.apache.commons.math4.util.FastMath.F_1_2);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.LN_QUICK_COEF",org.apache.commons.math4.util.FastMath.LN_QUICK_COEF);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.F_1_17",org.apache.commons.math4.util.FastMath.F_1_17);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.PI_O_4_BITS",org.apache.commons.math4.util.FastMath.PI_O_4_BITS);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.RECOMPUTE_TABLES_AT_RUNTIME",org.apache.commons.math4.util.FastMath.RECOMPUTE_TABLES_AT_RUNTIME);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.HEX_40000000",org.apache.commons.math4.util.FastMath.HEX_40000000);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math4.util.FastMath.TANGENT_TABLE_A);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math4.util.FastMath.TANGENT_TABLE_B);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.MASK_NON_SIGN_INT",org.apache.commons.math4.util.FastMath.MASK_NON_SIGN_INT);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("xb",xb);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.F_1_11",org.apache.commons.math4.util.FastMath.F_1_11);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.E",org.apache.commons.math4.util.FastMath.E);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.F_1_13",org.apache.commons.math4.util.FastMath.F_1_13);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.F_1_15",org.apache.commons.math4.util.FastMath.F_1_15);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("x",x);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.PI",org.apache.commons.math4.util.FastMath.PI);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.F_13_14",org.apache.commons.math4.util.FastMath.F_13_14);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectInput("org.apache.commons.math4.util.FastMath.MASK_NON_SIGN_LONG",org.apache.commons.math4.util.FastMath.MASK_NON_SIGN_LONG);} catch (Exception ex1) {ex1.printStackTrace();};
            fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectOutput(runtimeAngelicValue);
            fr.inria.lille.commons.trace.RuntimeValues.instance(41).collectionEnds();
        }
        if (runtimeAngelicValue)
            xa = x;

        if (x < 0) {
            negative = true;
            xa = -xa;
        }
        if (xa == 0.0) {
            long bits = java.lang.Double.doubleToRawLongBits(x);
            if (bits < 0) {
                return -0.0;
            }
            return 0.0;
        }
        if ((xa != xa) || (xa == (java.lang.Double.POSITIVE_INFINITY))) {
            return java.lang.Double.NaN;
        }
        if (xa > 3294198.0) {
            double[] reduceResults = new double[3];
            org.apache.commons.math4.util.FastMath.reducePayneHanek(xa, reduceResults);
            quadrant = ((int) (reduceResults[0])) & 3;
            xa = reduceResults[1];
            xb = reduceResults[2];
        }else
            if (xa > 1.5707963267948966) {
                final org.apache.commons.math4.util.FastMath.CodyWaite cw = new org.apache.commons.math4.util.FastMath.CodyWaite(xa);
                quadrant = (cw.getK()) & 3;
                xa = cw.getRemA();
                xb = cw.getRemB();
            }

        if (negative) {
            quadrant ^= 2;
        }
        switch (quadrant) {
            case 0 :
                return org.apache.commons.math4.util.FastMath.sinQ(xa, xb);
            case 1 :
                return org.apache.commons.math4.util.FastMath.cosQ(xa, xb);
            case 2 :
                return -(org.apache.commons.math4.util.FastMath.sinQ(xa, xb));
            case 3 :
                return -(org.apache.commons.math4.util.FastMath.cosQ(xa, xb));
            default :
                return java.lang.Double.NaN;
        }
    }

    public static double cos(double x) {
        int quadrant = 0;
        double xa = x;
        if (x < 0) {
            xa = -xa;
        }
        if ((xa != xa) || (xa == (java.lang.Double.POSITIVE_INFINITY))) {
            return java.lang.Double.NaN;
        }
        double xb = 0;
        if (xa > 3294198.0) {
            double[] reduceResults = new double[3];
            org.apache.commons.math4.util.FastMath.reducePayneHanek(xa, reduceResults);
            quadrant = ((int) (reduceResults[0])) & 3;
            xa = reduceResults[1];
            xb = reduceResults[2];
        }else
            if (xa > 1.5707963267948966) {
                final org.apache.commons.math4.util.FastMath.CodyWaite cw = new org.apache.commons.math4.util.FastMath.CodyWaite(xa);
                quadrant = (cw.getK()) & 3;
                xa = cw.getRemA();
                xb = cw.getRemB();
            }

        switch (quadrant) {
            case 0 :
                return org.apache.commons.math4.util.FastMath.cosQ(xa, xb);
            case 1 :
                return -(org.apache.commons.math4.util.FastMath.sinQ(xa, xb));
            case 2 :
                return -(org.apache.commons.math4.util.FastMath.cosQ(xa, xb));
            case 3 :
                return org.apache.commons.math4.util.FastMath.sinQ(xa, xb);
            default :
                return java.lang.Double.NaN;
        }
    }

    public static double tan(double x) {
        boolean negative = false;
        int quadrant = 0;
        double xa = x;
        if (x < 0) {
            negative = true;
            xa = -xa;
        }
        if (xa == 0.0) {
            long bits = java.lang.Double.doubleToRawLongBits(x);
            if (bits < 0) {
                return -0.0;
            }
            return 0.0;
        }
        if ((xa != xa) || (xa == (java.lang.Double.POSITIVE_INFINITY))) {
            return java.lang.Double.NaN;
        }
        double xb = 0;
        if (xa > 3294198.0) {
            double[] reduceResults = new double[3];
            org.apache.commons.math4.util.FastMath.reducePayneHanek(xa, reduceResults);
            quadrant = ((int) (reduceResults[0])) & 3;
            xa = reduceResults[1];
            xb = reduceResults[2];
        }else
            if (xa > 1.5707963267948966) {
                final org.apache.commons.math4.util.FastMath.CodyWaite cw = new org.apache.commons.math4.util.FastMath.CodyWaite(xa);
                quadrant = (cw.getK()) & 3;
                xa = cw.getRemA();
                xb = cw.getRemB();
            }

        if (xa > 1.5) {
            final double pi2a = 1.5707963267948966;
            final double pi2b = 6.123233995736766E-17;
            final double a = pi2a - xa;
            double b = -((a - pi2a) + xa);
            b += pi2b - xb;
            xa = a + b;
            xb = -((xa - a) - b);
            quadrant ^= 1;
            negative ^= true;
        }
        double result;
        if ((quadrant & 1) == 0) {
            result = org.apache.commons.math4.util.FastMath.tanQ(xa, xb, false);
        }else {
            result = -(org.apache.commons.math4.util.FastMath.tanQ(xa, xb, true));
        }
        if (negative) {
            result = -result;
        }
        return result;
    }

    public static double atan(double x) {
        return org.apache.commons.math4.util.FastMath.atan(x, 0.0, false);
    }

    private static double atan(double xa, double xb, boolean leftPlane) {
        if (xa == 0.0) {
            return leftPlane ? org.apache.commons.math4.util.FastMath.copySign(java.lang.Math.PI, xa) : xa;
        }
        final boolean negate;
        if (xa < 0) {
            xa = -xa;
            xb = -xb;
            negate = true;
        }else {
            negate = false;
        }
        if (xa > 1.633123935319537E16) {
            return negate ^ leftPlane ? (-(java.lang.Math.PI)) * (org.apache.commons.math4.util.FastMath.F_1_2) : (java.lang.Math.PI) * (org.apache.commons.math4.util.FastMath.F_1_2);
        }
        final int idx;
        if (xa < 1) {
            idx = ((int) ((((((-1.7168146928204135) * xa) * xa) + 8.0) * xa) + 0.5));
        }else {
            final double oneOverXa = 1 / xa;
            idx = ((int) ((-(((((-1.7168146928204135) * oneOverXa) * oneOverXa) + 8.0) * oneOverXa)) + 13.07));
        }
        final double ttA = org.apache.commons.math4.util.FastMath.TANGENT_TABLE_A[idx];
        final double ttB = org.apache.commons.math4.util.FastMath.TANGENT_TABLE_B[idx];
        double epsA = xa - ttA;
        double epsB = -((epsA - xa) + ttA);
        epsB += xb - ttB;
        double temp = epsA + epsB;
        epsB = -((temp - epsA) - epsB);
        epsA = temp;
        temp = xa * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double ya = (xa + temp) - temp;
        double yb = (xb + xa) - ya;
        xa = ya;
        xb += yb;
        if (idx == 0) {
            final double denom = 1.0 / (1.0 + ((xa + xb) * (ttA + ttB)));
            ya = epsA * denom;
            yb = epsB * denom;
        }else {
            double temp2 = xa * ttA;
            double za = 1.0 + temp2;
            double zb = -((za - 1.0) - temp2);
            temp2 = (xb * ttA) + (xa * ttB);
            temp = za + temp2;
            zb += -((temp - za) - temp2);
            za = temp;
            zb += xb * ttB;
            ya = epsA / za;
            temp = ya * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            final double yaa = (ya + temp) - temp;
            final double yab = ya - yaa;
            temp = za * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            final double zaa = (za + temp) - temp;
            final double zab = za - zaa;
            yb = ((((epsA - (yaa * zaa)) - (yaa * zab)) - (yab * zaa)) - (yab * zab)) / za;
            yb += (((-epsA) * zb) / za) / za;
            yb += epsB / za;
        }
        epsA = ya;
        epsB = yb;
        final double epsA2 = epsA * epsA;
        yb = 0.07490822288864472;
        yb = (yb * epsA2) - 0.09088450866185192;
        yb = (yb * epsA2) + 0.11111095942313305;
        yb = (yb * epsA2) - 0.1428571423679182;
        yb = (yb * epsA2) + 0.19999999999923582;
        yb = (yb * epsA2) - 0.33333333333333287;
        yb = (yb * epsA2) * epsA;
        ya = epsA;
        temp = ya + yb;
        yb = -((temp - ya) - yb);
        ya = temp;
        yb += epsB / (1.0 + (epsA * epsA));
        final double eighths = org.apache.commons.math4.util.FastMath.EIGHTHS[idx];
        double za = eighths + ya;
        double zb = -((za - eighths) - ya);
        temp = za + yb;
        zb += -((temp - za) - yb);
        za = temp;
        double result = za + zb;
        if (leftPlane) {
            final double resultb = -((result - za) - zb);
            final double pia = 1.5707963267948966 * 2;
            final double pib = 6.123233995736766E-17 * 2;
            za = pia - result;
            zb = -((za - pia) + result);
            zb += pib - resultb;
            result = za + zb;
        }
        if (negate ^ leftPlane) {
            result = -result;
        }
        return result;
    }

    public static double atan2(double y, double x) {
        if ((x != x) || (y != y)) {
            return java.lang.Double.NaN;
        }
        if (y == 0) {
            final double result = x * y;
            final double invx = 1.0 / x;
            final double invy = 1.0 / y;
            if (invx == 0) {
                if (x > 0) {
                    return y;
                }else {
                    return org.apache.commons.math4.util.FastMath.copySign(java.lang.Math.PI, y);
                }
            }
            if ((x < 0) || (invx < 0)) {
                if ((y < 0) || (invy < 0)) {
                    return -(java.lang.Math.PI);
                }else {
                    return java.lang.Math.PI;
                }
            }else {
                return result;
            }
        }
        if (y == (java.lang.Double.POSITIVE_INFINITY)) {
            if (x == (java.lang.Double.POSITIVE_INFINITY)) {
                return (java.lang.Math.PI) * (org.apache.commons.math4.util.FastMath.F_1_4);
            }
            if (x == (java.lang.Double.NEGATIVE_INFINITY)) {
                return (java.lang.Math.PI) * (org.apache.commons.math4.util.FastMath.F_3_4);
            }
            return (java.lang.Math.PI) * (org.apache.commons.math4.util.FastMath.F_1_2);
        }
        if (y == (java.lang.Double.NEGATIVE_INFINITY)) {
            if (x == (java.lang.Double.POSITIVE_INFINITY)) {
                return (-(java.lang.Math.PI)) * (org.apache.commons.math4.util.FastMath.F_1_4);
            }
            if (x == (java.lang.Double.NEGATIVE_INFINITY)) {
                return (-(java.lang.Math.PI)) * (org.apache.commons.math4.util.FastMath.F_3_4);
            }
            return (-(java.lang.Math.PI)) * (org.apache.commons.math4.util.FastMath.F_1_2);
        }
        if (x == (java.lang.Double.POSITIVE_INFINITY)) {
            if ((y > 0) || ((1 / y) > 0)) {
                return 0.0;
            }
            if ((y < 0) || ((1 / y) < 0)) {
                return -0.0;
            }
        }
        if (x == (java.lang.Double.NEGATIVE_INFINITY)) {
            if ((y > 0.0) || ((1 / y) > 0.0)) {
                return java.lang.Math.PI;
            }
            if ((y < 0) || ((1 / y) < 0)) {
                return -(java.lang.Math.PI);
            }
        }
        if (x == 0) {
            if ((y > 0) || ((1 / y) > 0)) {
                return (java.lang.Math.PI) * (org.apache.commons.math4.util.FastMath.F_1_2);
            }
            if ((y < 0) || ((1 / y) < 0)) {
                return (-(java.lang.Math.PI)) * (org.apache.commons.math4.util.FastMath.F_1_2);
            }
        }
        final double r = y / x;
        if (java.lang.Double.isInfinite(r)) {
            return org.apache.commons.math4.util.FastMath.atan(r, 0, (x < 0));
        }
        double ra = org.apache.commons.math4.util.FastMath.doubleHighPart(r);
        double rb = r - ra;
        final double xa = org.apache.commons.math4.util.FastMath.doubleHighPart(x);
        final double xb = x - xa;
        rb += ((((y - (ra * xa)) - (ra * xb)) - (rb * xa)) - (rb * xb)) / x;
        final double temp = ra + rb;
        rb = -((temp - ra) - rb);
        ra = temp;
        if (ra == 0) {
            ra = org.apache.commons.math4.util.FastMath.copySign(0.0, y);
        }
        final double result = org.apache.commons.math4.util.FastMath.atan(ra, rb, (x < 0));
        return result;
    }

    public static double asin(double x) {
        if (x != x) {
            return java.lang.Double.NaN;
        }
        if ((x > 1.0) || (x < (-1.0))) {
            return java.lang.Double.NaN;
        }
        if (x == 1.0) {
            return (java.lang.Math.PI) / 2.0;
        }
        if (x == (-1.0)) {
            return (-(java.lang.Math.PI)) / 2.0;
        }
        if (x == 0.0) {
            return x;
        }
        double temp = x * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        final double xa = (x + temp) - temp;
        final double xb = x - xa;
        double ya = xa * xa;
        double yb = ((xa * xb) * 2.0) + (xb * xb);
        ya = -ya;
        yb = -yb;
        double za = 1.0 + ya;
        double zb = -((za - 1.0) - ya);
        temp = za + yb;
        zb += -((temp - za) - yb);
        za = temp;
        double y;
        y = org.apache.commons.math4.util.FastMath.sqrt(za);
        temp = y * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        ya = (y + temp) - temp;
        yb = y - ya;
        yb += (((za - (ya * ya)) - ((2 * ya) * yb)) - (yb * yb)) / (2.0 * y);
        double dx = zb / (2.0 * y);
        double r = x / y;
        temp = r * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double ra = (r + temp) - temp;
        double rb = r - ra;
        rb += ((((x - (ra * ya)) - (ra * yb)) - (rb * ya)) - (rb * yb)) / y;
        rb += (((-x) * dx) / y) / y;
        temp = ra + rb;
        rb = -((temp - ra) - rb);
        ra = temp;
        return org.apache.commons.math4.util.FastMath.atan(ra, rb, false);
    }

    public static double acos(double x) {
        if (x != x) {
            return java.lang.Double.NaN;
        }
        if ((x > 1.0) || (x < (-1.0))) {
            return java.lang.Double.NaN;
        }
        if (x == (-1.0)) {
            return java.lang.Math.PI;
        }
        if (x == 1.0) {
            return 0.0;
        }
        if (x == 0) {
            return (java.lang.Math.PI) / 2.0;
        }
        double temp = x * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        final double xa = (x + temp) - temp;
        final double xb = x - xa;
        double ya = xa * xa;
        double yb = ((xa * xb) * 2.0) + (xb * xb);
        ya = -ya;
        yb = -yb;
        double za = 1.0 + ya;
        double zb = -((za - 1.0) - ya);
        temp = za + yb;
        zb += -((temp - za) - yb);
        za = temp;
        double y = org.apache.commons.math4.util.FastMath.sqrt(za);
        temp = y * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        ya = (y + temp) - temp;
        yb = y - ya;
        yb += (((za - (ya * ya)) - ((2 * ya) * yb)) - (yb * yb)) / (2.0 * y);
        yb += zb / (2.0 * y);
        y = ya + yb;
        yb = -((y - ya) - yb);
        double r = y / x;
        if (java.lang.Double.isInfinite(r)) {
            return (java.lang.Math.PI) / 2;
        }
        double ra = org.apache.commons.math4.util.FastMath.doubleHighPart(r);
        double rb = r - ra;
        rb += ((((y - (ra * xa)) - (ra * xb)) - (rb * xa)) - (rb * xb)) / x;
        rb += yb / x;
        temp = ra + rb;
        rb = -((temp - ra) - rb);
        ra = temp;
        return org.apache.commons.math4.util.FastMath.atan(ra, rb, (x < 0));
    }

    public static double cbrt(double x) {
        long inbits = java.lang.Double.doubleToRawLongBits(x);
        int exponent = ((int) ((inbits >> 52) & 2047)) - 1023;
        boolean subnormal = false;
        if (exponent == (-1023)) {
            if (x == 0) {
                return x;
            }
            subnormal = true;
            x *= 1.8014398509481984E16;
            inbits = java.lang.Double.doubleToRawLongBits(x);
            exponent = ((int) ((inbits >> 52) & 2047)) - 1023;
        }
        if (exponent == 1024) {
            return x;
        }
        int exp3 = exponent / 3;
        double p2 = java.lang.Double.longBitsToDouble(((inbits & -9223372036854775808L) | (((long) ((exp3 + 1023) & 2047)) << 52)));
        final double mant = java.lang.Double.longBitsToDouble(((inbits & 4503599627370495L) | 4607182418800017408L));
        double est = -0.010714690733195933;
        est = (est * mant) + 0.0875862700108075;
        est = (est * mant) + (-0.3058015757857271);
        est = (est * mant) + 0.7249995199969751;
        est = (est * mant) + 0.5039018405998233;
        est *= org.apache.commons.math4.util.FastMath.CBRTTWO[((exponent % 3) + 2)];
        final double xs = x / ((p2 * p2) * p2);
        est += (xs - ((est * est) * est)) / ((3 * est) * est);
        est += (xs - ((est * est) * est)) / ((3 * est) * est);
        double temp = est * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double ya = (est + temp) - temp;
        double yb = est - ya;
        double za = ya * ya;
        double zb = ((ya * yb) * 2.0) + (yb * yb);
        temp = za * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double temp2 = (za + temp) - temp;
        zb += za - temp2;
        za = temp2;
        zb = ((za * yb) + (ya * zb)) + (zb * yb);
        za *= ya;
        double na = xs - za;
        double nb = -((na - xs) + za);
        nb -= zb;
        est += (na + nb) / ((3 * est) * est);
        est *= p2;
        if (subnormal) {
            est *= 3.814697265625E-6;
        }
        return est;
    }

    public static double toRadians(double x) {
        if ((java.lang.Double.isInfinite(x)) || (x == 0.0)) {
            return x;
        }
        final double facta = 0.01745329052209854;
        final double factb = 1.997844754509471E-9;
        double xa = org.apache.commons.math4.util.FastMath.doubleHighPart(x);
        double xb = x - xa;
        double result = (((xb * factb) + (xb * facta)) + (xa * factb)) + (xa * facta);
        if (result == 0) {
            result *= x;
        }
        return result;
    }

    public static double toDegrees(double x) {
        if ((java.lang.Double.isInfinite(x)) || (x == 0.0)) {
            return x;
        }
        final double facta = 57.2957763671875;
        final double factb = 3.145894820876798E-6;
        double xa = org.apache.commons.math4.util.FastMath.doubleHighPart(x);
        double xb = x - xa;
        return (((xb * factb) + (xb * facta)) + (xa * factb)) + (xa * facta);
    }

    public static int abs(final int x) {
        final int i = x >>> 31;
        return (x ^ ((~i) + 1)) + i;
    }

    public static long abs(final long x) {
        final long l = x >>> 63;
        return (x ^ ((~l) + 1)) + l;
    }

    public static float abs(final float x) {
        return java.lang.Float.intBitsToFloat(((org.apache.commons.math4.util.FastMath.MASK_NON_SIGN_INT) & (java.lang.Float.floatToRawIntBits(x))));
    }

    public static double abs(double x) {
        return java.lang.Double.longBitsToDouble(((org.apache.commons.math4.util.FastMath.MASK_NON_SIGN_LONG) & (java.lang.Double.doubleToRawLongBits(x))));
    }

    public static double ulp(double x) {
        if (java.lang.Double.isInfinite(x)) {
            return java.lang.Double.POSITIVE_INFINITY;
        }
        return org.apache.commons.math4.util.FastMath.abs((x - (java.lang.Double.longBitsToDouble(((java.lang.Double.doubleToRawLongBits(x)) ^ 1)))));
    }

    public static float ulp(float x) {
        if (java.lang.Float.isInfinite(x)) {
            return java.lang.Float.POSITIVE_INFINITY;
        }
        return org.apache.commons.math4.util.FastMath.abs((x - (java.lang.Float.intBitsToFloat(((java.lang.Float.floatToIntBits(x)) ^ 1)))));
    }

    public static double scalb(final double d, final int n) {
        if ((n > (-1023)) && (n < 1024)) {
            return d * (java.lang.Double.longBitsToDouble((((long) (n + 1023)) << 52)));
        }
        if (((java.lang.Double.isNaN(d)) || (java.lang.Double.isInfinite(d))) || (d == 0)) {
            return d;
        }
        if (n < (-2098)) {
            return d > 0 ? 0.0 : -0.0;
        }
        if (n > 2097) {
            return d > 0 ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;
        }
        final long bits = java.lang.Double.doubleToRawLongBits(d);
        final long sign = bits & -9223372036854775808L;
        int exponent = ((int) (bits >>> 52)) & 2047;
        long mantissa = bits & 4503599627370495L;
        int scaledExponent = exponent + n;
        if (n < 0) {
            if (scaledExponent > 0) {
                return java.lang.Double.longBitsToDouble(((sign | (((long) (scaledExponent)) << 52)) | mantissa));
            }else
                if (scaledExponent > (-53)) {
                    mantissa |= 1L << 52;
                    final long mostSignificantLostBit = mantissa & (1L << (-scaledExponent));
                    mantissa >>>= 1 - scaledExponent;
                    if (mostSignificantLostBit != 0) {
                        mantissa++;
                    }
                    return java.lang.Double.longBitsToDouble((sign | mantissa));
                }else {
                    return sign == 0L ? 0.0 : -0.0;
                }

        }else {
            if (exponent == 0) {
                while ((mantissa >>> 52) != 1) {
                    mantissa <<= 1;
                    --scaledExponent;
                } 
                ++scaledExponent;
                mantissa &= 4503599627370495L;
                if (scaledExponent < 2047) {
                    return java.lang.Double.longBitsToDouble(((sign | (((long) (scaledExponent)) << 52)) | mantissa));
                }else {
                    return sign == 0L ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;
                }
            }else
                if (scaledExponent < 2047) {
                    return java.lang.Double.longBitsToDouble(((sign | (((long) (scaledExponent)) << 52)) | mantissa));
                }else {
                    return sign == 0L ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;
                }

        }
    }

    public static float scalb(final float f, final int n) {
        if ((n > (-127)) && (n < 128)) {
            return f * (java.lang.Float.intBitsToFloat(((n + 127) << 23)));
        }
        if (((java.lang.Float.isNaN(f)) || (java.lang.Float.isInfinite(f))) || (f == 0.0F)) {
            return f;
        }
        if (n < (-277)) {
            return f > 0 ? 0.0F : -0.0F;
        }
        if (n > 276) {
            return f > 0 ? java.lang.Float.POSITIVE_INFINITY : java.lang.Float.NEGATIVE_INFINITY;
        }
        final int bits = java.lang.Float.floatToIntBits(f);
        final int sign = bits & -2147483648;
        int exponent = (bits >>> 23) & 255;
        int mantissa = bits & 8388607;
        int scaledExponent = exponent + n;
        if (n < 0) {
            if (scaledExponent > 0) {
                return java.lang.Float.intBitsToFloat(((sign | (scaledExponent << 23)) | mantissa));
            }else
                if (scaledExponent > (-24)) {
                    mantissa |= 1 << 23;
                    final int mostSignificantLostBit = mantissa & (1 << (-scaledExponent));
                    mantissa >>>= 1 - scaledExponent;
                    if (mostSignificantLostBit != 0) {
                        mantissa++;
                    }
                    return java.lang.Float.intBitsToFloat((sign | mantissa));
                }else {
                    return sign == 0 ? 0.0F : -0.0F;
                }

        }else {
            if (exponent == 0) {
                while ((mantissa >>> 23) != 1) {
                    mantissa <<= 1;
                    --scaledExponent;
                } 
                ++scaledExponent;
                mantissa &= 8388607;
                if (scaledExponent < 255) {
                    return java.lang.Float.intBitsToFloat(((sign | (scaledExponent << 23)) | mantissa));
                }else {
                    return sign == 0 ? java.lang.Float.POSITIVE_INFINITY : java.lang.Float.NEGATIVE_INFINITY;
                }
            }else
                if (scaledExponent < 255) {
                    return java.lang.Float.intBitsToFloat(((sign | (scaledExponent << 23)) | mantissa));
                }else {
                    return sign == 0 ? java.lang.Float.POSITIVE_INFINITY : java.lang.Float.NEGATIVE_INFINITY;
                }

        }
    }

    public static double nextAfter(double d, double direction) {
        if ((java.lang.Double.isNaN(d)) || (java.lang.Double.isNaN(direction))) {
            return java.lang.Double.NaN;
        }else
            if (d == direction) {
                return direction;
            }else
                if (java.lang.Double.isInfinite(d)) {
                    return d < 0 ? -(java.lang.Double.MAX_VALUE) : java.lang.Double.MAX_VALUE;
                }else
                    if (d == 0) {
                        return direction < 0 ? -(java.lang.Double.MIN_VALUE) : java.lang.Double.MIN_VALUE;
                    }



        final long bits = java.lang.Double.doubleToRawLongBits(d);
        final long sign = bits & -9223372036854775808L;
        if ((direction < d) ^ (sign == 0L)) {
            return java.lang.Double.longBitsToDouble((sign | ((bits & 9223372036854775807L) + 1)));
        }else {
            return java.lang.Double.longBitsToDouble((sign | ((bits & 9223372036854775807L) - 1)));
        }
    }

    public static float nextAfter(final float f, final double direction) {
        if ((java.lang.Double.isNaN(f)) || (java.lang.Double.isNaN(direction))) {
            return java.lang.Float.NaN;
        }else
            if (f == direction) {
                return ((float) (direction));
            }else
                if (java.lang.Float.isInfinite(f)) {
                    return f < 0.0F ? -(java.lang.Float.MAX_VALUE) : java.lang.Float.MAX_VALUE;
                }else
                    if (f == 0.0F) {
                        return direction < 0 ? -(java.lang.Float.MIN_VALUE) : java.lang.Float.MIN_VALUE;
                    }



        final int bits = java.lang.Float.floatToIntBits(f);
        final int sign = bits & -2147483648;
        if ((direction < f) ^ (sign == 0)) {
            return java.lang.Float.intBitsToFloat((sign | ((bits & 2147483647) + 1)));
        }else {
            return java.lang.Float.intBitsToFloat((sign | ((bits & 2147483647) - 1)));
        }
    }

    public static double floor(double x) {
        long y;
        if (x != x) {
            return x;
        }
        if ((x >= (org.apache.commons.math4.util.FastMath.TWO_POWER_52)) || (x <= (-(org.apache.commons.math4.util.FastMath.TWO_POWER_52)))) {
            return x;
        }
        y = ((long) (x));
        if ((x < 0) && (y != x)) {
            y--;
        }
        if (y == 0) {
            return x * y;
        }
        return y;
    }

    public static double ceil(double x) {
        double y;
        if (x != x) {
            return x;
        }
        y = org.apache.commons.math4.util.FastMath.floor(x);
        if (y == x) {
            return y;
        }
        y += 1.0;
        if (y == 0) {
            return x * y;
        }
        return y;
    }

    public static double rint(double x) {
        double y = org.apache.commons.math4.util.FastMath.floor(x);
        double d = x - y;
        if (d > 0.5) {
            if (y == (-1.0)) {
                return -0.0;
            }
            return y + 1.0;
        }
        if (d < 0.5) {
            return y;
        }
        long z = ((long) (y));
        return (z & 1) == 0 ? y : y + 1.0;
    }

    public static long round(double x) {
        return ((long) (org.apache.commons.math4.util.FastMath.floor((x + 0.5))));
    }

    public static int round(final float x) {
        return ((int) (org.apache.commons.math4.util.FastMath.floor((x + 0.5F))));
    }

    public static int min(final int a, final int b) {
        return a <= b ? a : b;
    }

    public static long min(final long a, final long b) {
        return a <= b ? a : b;
    }

    public static float min(final float a, final float b) {
        if (a > b) {
            return b;
        }
        if (a < b) {
            return a;
        }
        if (a != b) {
            return java.lang.Float.NaN;
        }
        int bits = java.lang.Float.floatToRawIntBits(a);
        if (bits == -2147483648) {
            return a;
        }
        return b;
    }

    public static double min(final double a, final double b) {
        if (a > b) {
            return b;
        }
        if (a < b) {
            return a;
        }
        if (a != b) {
            return java.lang.Double.NaN;
        }
        long bits = java.lang.Double.doubleToRawLongBits(a);
        if (bits == -9223372036854775808L) {
            return a;
        }
        return b;
    }

    public static int max(final int a, final int b) {
        return a <= b ? b : a;
    }

    public static long max(final long a, final long b) {
        return a <= b ? b : a;
    }

    public static float max(final float a, final float b) {
        if (a > b) {
            return a;
        }
        if (a < b) {
            return b;
        }
        if (a != b) {
            return java.lang.Float.NaN;
        }
        int bits = java.lang.Float.floatToRawIntBits(a);
        if (bits == -2147483648) {
            return b;
        }
        return a;
    }

    public static double max(final double a, final double b) {
        if (a > b) {
            return a;
        }
        if (a < b) {
            return b;
        }
        if (a != b) {
            return java.lang.Double.NaN;
        }
        long bits = java.lang.Double.doubleToRawLongBits(a);
        if (bits == -9223372036854775808L) {
            return b;
        }
        return a;
    }

    public static double hypot(final double x, final double y) {
        if ((java.lang.Double.isInfinite(x)) || (java.lang.Double.isInfinite(y))) {
            return java.lang.Double.POSITIVE_INFINITY;
        }else
            if ((java.lang.Double.isNaN(x)) || (java.lang.Double.isNaN(y))) {
                return java.lang.Double.NaN;
            }else {
                final int expX = org.apache.commons.math4.util.FastMath.getExponent(x);
                final int expY = org.apache.commons.math4.util.FastMath.getExponent(y);
                if (expX > (expY + 27)) {
                    return org.apache.commons.math4.util.FastMath.abs(x);
                }else
                    if (expY > (expX + 27)) {
                        return org.apache.commons.math4.util.FastMath.abs(y);
                    }else {
                        final int middleExp = (expX + expY) / 2;
                        final double scaledX = org.apache.commons.math4.util.FastMath.scalb(x, (-middleExp));
                        final double scaledY = org.apache.commons.math4.util.FastMath.scalb(y, (-middleExp));
                        final double scaledH = org.apache.commons.math4.util.FastMath.sqrt(((scaledX * scaledX) + (scaledY * scaledY)));
                        return org.apache.commons.math4.util.FastMath.scalb(scaledH, middleExp);
                    }

            }

    }

    public static double IEEEremainder(double dividend, double divisor) {
        return java.lang.StrictMath.IEEEremainder(dividend, divisor);
    }

    public static int toIntExact(final long n) throws org.apache.commons.math4.exception.MathArithmeticException {
        if ((n < (java.lang.Integer.MIN_VALUE)) || (n > (java.lang.Integer.MAX_VALUE))) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW);
        }
        return ((int) (n));
    }

    public static int incrementExact(final int n) throws org.apache.commons.math4.exception.MathArithmeticException {
        if (n == (java.lang.Integer.MAX_VALUE)) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_ADDITION, n, 1);
        }
        return n + 1;
    }

    public static long incrementExact(final long n) throws org.apache.commons.math4.exception.MathArithmeticException {
        if (n == (java.lang.Long.MAX_VALUE)) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_ADDITION, n, 1);
        }
        return n + 1;
    }

    public static int decrementExact(final int n) throws org.apache.commons.math4.exception.MathArithmeticException {
        if (n == (java.lang.Integer.MIN_VALUE)) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_SUBTRACTION, n, 1);
        }
        return n - 1;
    }

    public static long decrementExact(final long n) throws org.apache.commons.math4.exception.MathArithmeticException {
        if (n == (java.lang.Long.MIN_VALUE)) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_SUBTRACTION, n, 1);
        }
        return n - 1;
    }

    public static int addExact(final int a, final int b) throws org.apache.commons.math4.exception.MathArithmeticException {
        final int sum = a + b;
        if (((a ^ b) >= 0) && ((sum ^ b) < 0)) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_ADDITION, a, b);
        }
        return sum;
    }

    public static long addExact(final long a, final long b) throws org.apache.commons.math4.exception.MathArithmeticException {
        final long sum = a + b;
        if (((a ^ b) >= 0) && ((sum ^ b) < 0)) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_ADDITION, a, b);
        }
        return sum;
    }

    public static int subtractExact(final int a, final int b) {
        final int sub = a - b;
        if (((a ^ b) < 0) && ((sub ^ b) >= 0)) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_SUBTRACTION, a, b);
        }
        return sub;
    }

    public static long subtractExact(final long a, final long b) {
        final long sub = a - b;
        if (((a ^ b) < 0) && ((sub ^ b) >= 0)) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_SUBTRACTION, a, b);
        }
        return sub;
    }

    public static int multiplyExact(final int a, final int b) {
        if ((((b > 0) && ((a > ((java.lang.Integer.MAX_VALUE) / b)) || (a < ((java.lang.Integer.MIN_VALUE) / b)))) || ((b < (-1)) && ((a > ((java.lang.Integer.MIN_VALUE) / b)) || (a < ((java.lang.Integer.MAX_VALUE) / b))))) || ((b == (-1)) && (a == (java.lang.Integer.MIN_VALUE)))) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_MULTIPLICATION, a, b);
        }
        return a * b;
    }

    public static long multiplyExact(final long a, final long b) {
        if ((((b > 0L) && ((a > ((java.lang.Long.MAX_VALUE) / b)) || (a < ((java.lang.Long.MIN_VALUE) / b)))) || ((b < (-1L)) && ((a > ((java.lang.Long.MIN_VALUE) / b)) || (a < ((java.lang.Long.MAX_VALUE) / b))))) || ((b == (-1L)) && (a == (java.lang.Long.MIN_VALUE)))) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_MULTIPLICATION, a, b);
        }
        return a * b;
    }

    public static int floorDiv(final int a, final int b) throws org.apache.commons.math4.exception.MathArithmeticException {
        if (b == 0) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.ZERO_DENOMINATOR);
        }
        final int m = a % b;
        if (((a ^ b) >= 0) || (m == 0)) {
            return a / b;
        }else {
            return (a / b) - 1;
        }
    }

    public static long floorDiv(final long a, final long b) throws org.apache.commons.math4.exception.MathArithmeticException {
        if (b == 0L) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.ZERO_DENOMINATOR);
        }
        final long m = a % b;
        if (((a ^ b) >= 0L) || (m == 0L)) {
            return a / b;
        }else {
            return (a / b) - 1L;
        }
    }

    public static int floorMod(final int a, final int b) throws org.apache.commons.math4.exception.MathArithmeticException {
        if (b == 0) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.ZERO_DENOMINATOR);
        }
        final int m = a % b;
        if (((a ^ b) >= 0) || (m == 0)) {
            return m;
        }else {
            return b + m;
        }
    }

    public static long floorMod(final long a, final long b) {
        if (b == 0L) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.ZERO_DENOMINATOR);
        }
        final long m = a % b;
        if (((a ^ b) >= 0L) || (m == 0L)) {
            return m;
        }else {
            return b + m;
        }
    }

    public static double copySign(double magnitude, double sign) {
        final long m = java.lang.Double.doubleToRawLongBits(magnitude);
        final long s = java.lang.Double.doubleToRawLongBits(sign);
        if ((m ^ s) >= 0) {
            return magnitude;
        }
        return -magnitude;
    }

    public static float copySign(float magnitude, float sign) {
        final int m = java.lang.Float.floatToRawIntBits(magnitude);
        final int s = java.lang.Float.floatToRawIntBits(sign);
        if ((m ^ s) >= 0) {
            return magnitude;
        }
        return -magnitude;
    }

    public static int getExponent(final double d) {
        return ((int) (((java.lang.Double.doubleToRawLongBits(d)) >>> 52) & 2047)) - 1023;
    }

    public static int getExponent(final float f) {
        return (((java.lang.Float.floatToRawIntBits(f)) >>> 23) & 255) - 127;
    }

    public static void main(java.lang.String[] a) {
        java.io.PrintStream out = java.lang.System.out;
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "EXP_INT_TABLE_A", org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_LEN, org.apache.commons.math4.util.FastMath.ExpIntTable.EXP_INT_TABLE_A);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "EXP_INT_TABLE_B", org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_LEN, org.apache.commons.math4.util.FastMath.ExpIntTable.EXP_INT_TABLE_B);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "EXP_FRAC_TABLE_A", org.apache.commons.math4.util.FastMath.EXP_FRAC_TABLE_LEN, org.apache.commons.math4.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "EXP_FRAC_TABLE_B", org.apache.commons.math4.util.FastMath.EXP_FRAC_TABLE_LEN, org.apache.commons.math4.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "LN_MANT", org.apache.commons.math4.util.FastMath.LN_MANT_LEN, org.apache.commons.math4.util.FastMath.lnMant.LN_MANT);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "SINE_TABLE_A", org.apache.commons.math4.util.FastMath.SINE_TABLE_LEN, org.apache.commons.math4.util.FastMath.SINE_TABLE_A);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "SINE_TABLE_B", org.apache.commons.math4.util.FastMath.SINE_TABLE_LEN, org.apache.commons.math4.util.FastMath.SINE_TABLE_B);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "COSINE_TABLE_A", org.apache.commons.math4.util.FastMath.SINE_TABLE_LEN, org.apache.commons.math4.util.FastMath.COSINE_TABLE_A);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "COSINE_TABLE_B", org.apache.commons.math4.util.FastMath.SINE_TABLE_LEN, org.apache.commons.math4.util.FastMath.COSINE_TABLE_B);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "TANGENT_TABLE_A", org.apache.commons.math4.util.FastMath.SINE_TABLE_LEN, org.apache.commons.math4.util.FastMath.TANGENT_TABLE_A);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "TANGENT_TABLE_B", org.apache.commons.math4.util.FastMath.SINE_TABLE_LEN, org.apache.commons.math4.util.FastMath.TANGENT_TABLE_B);
    }

    private static class ExpIntTable {
        private static final double[] EXP_INT_TABLE_A;

        private static final double[] EXP_INT_TABLE_B;

        static {
            if (org.apache.commons.math4.util.FastMath.RECOMPUTE_TABLES_AT_RUNTIME) {
                EXP_INT_TABLE_A = new double[org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_LEN];
                EXP_INT_TABLE_B = new double[org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_LEN];
                final double[] tmp = new double[2];
                final double[] recip = new double[2];
                for (int i = 0; i < (org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX); i++) {
                    org.apache.commons.math4.util.FastMathCalc.expint(i, tmp);
                    org.apache.commons.math4.util.FastMath.ExpIntTable.EXP_INT_TABLE_A[(i + (org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX))] = tmp[0];
                    org.apache.commons.math4.util.FastMath.ExpIntTable.EXP_INT_TABLE_B[(i + (org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX))] = tmp[1];
                    if (i != 0) {
                        org.apache.commons.math4.util.FastMathCalc.splitReciprocal(tmp, recip);
                        org.apache.commons.math4.util.FastMath.ExpIntTable.EXP_INT_TABLE_A[((org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX) - i)] = recip[0];
                        org.apache.commons.math4.util.FastMath.ExpIntTable.EXP_INT_TABLE_B[((org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX) - i)] = recip[1];
                    }
                }
            }else {
                EXP_INT_TABLE_A = org.apache.commons.math4.util.FastMathLiteralArrays.loadExpIntA();
                EXP_INT_TABLE_B = org.apache.commons.math4.util.FastMathLiteralArrays.loadExpIntB();
            }
        }
    }

    private static class ExpFracTable {
        private static final double[] EXP_FRAC_TABLE_A;

        private static final double[] EXP_FRAC_TABLE_B;

        static {
            if (org.apache.commons.math4.util.FastMath.RECOMPUTE_TABLES_AT_RUNTIME) {
                EXP_FRAC_TABLE_A = new double[org.apache.commons.math4.util.FastMath.EXP_FRAC_TABLE_LEN];
                EXP_FRAC_TABLE_B = new double[org.apache.commons.math4.util.FastMath.EXP_FRAC_TABLE_LEN];
                final double[] tmp = new double[2];
                final double factor = 1.0 / ((org.apache.commons.math4.util.FastMath.EXP_FRAC_TABLE_LEN) - 1);
                for (int i = 0; i < (org.apache.commons.math4.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A.length); i++) {
                    org.apache.commons.math4.util.FastMathCalc.slowexp((i * factor), tmp);
                    org.apache.commons.math4.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A[i] = tmp[0];
                    org.apache.commons.math4.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B[i] = tmp[1];
                }
            }else {
                EXP_FRAC_TABLE_A = org.apache.commons.math4.util.FastMathLiteralArrays.loadExpFracA();
                EXP_FRAC_TABLE_B = org.apache.commons.math4.util.FastMathLiteralArrays.loadExpFracB();
            }
        }
    }

    private static class lnMant {
        private static final double[][] LN_MANT;

        static {
            if (org.apache.commons.math4.util.FastMath.RECOMPUTE_TABLES_AT_RUNTIME) {
                LN_MANT = new double[org.apache.commons.math4.util.FastMath.LN_MANT_LEN][];
                for (int i = 0; i < (org.apache.commons.math4.util.FastMath.lnMant.LN_MANT.length); i++) {
                    final double d = java.lang.Double.longBitsToDouble(((((long) (i)) << 42) | 4607182418800017408L));
                    org.apache.commons.math4.util.FastMath.lnMant.LN_MANT[i] = org.apache.commons.math4.util.FastMathCalc.slowLog(d);
                }
            }else {
                LN_MANT = org.apache.commons.math4.util.FastMathLiteralArrays.loadLnMant();
            }
        }
    }

    private static class CodyWaite {
        private final int finalK;

        private final double finalRemA;

        private final double finalRemB;

        CodyWaite(double xa) {
            int k = ((int) (xa * 0.6366197723675814));
            double remA;
            double remB;
            while (true) {
                double a = (-k) * 1.570796251296997;
                remA = xa + a;
                remB = -((remA - xa) - a);
                a = (-k) * 7.549789948768648E-8;
                double b = remA;
                remA = a + b;
                remB += -((remA - b) - a);
                a = (-k) * 6.123233995736766E-17;
                b = remA;
                remA = a + b;
                remB += -((remA - b) - a);
                if (remA > 0) {
                    break;
                }
                --k;
            } 
            this.finalK = k;
            this.finalRemA = remA;
            this.finalRemB = remB;
        }

        int getK() {
            return finalK;
        }

        double getRemA() {
            return finalRemA;
        }

        double getRemB() {
            return finalRemB;
        }
    }
}
09:37:44.527 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
09:37:44.527 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
09:37:44.527 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:2247 which is executed by 518 tests
1033054629
09:37:44.714 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
09:37:44.714 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:2245 which is executed by 518 tests
1033054629
09:37:44.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
09:37:44.901 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:2244 which is executed by 518 tests
1033054629
09:37:45.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
09:37:45.088 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1848 which is executed by 526 tests
1033054629
09:37:45.276 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
09:37:45.276 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1846 which is executed by 526 tests
1033054629
09:37:45.462 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:45.487 [pool-196-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:46.267 [pool-195-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
FastMath.java:1058: error: variable result might not have been initialized
        return result;
               ^
09:37:46.788 [pool-195-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class FastMath {
    public static final double PI = (1.05414357E8 / 3.3554432E7) + 1.984187159361081E-9;

    public static final double E = (2850325.0 / 1048576.0) + 8.254840070411029E-8;

    static final int EXP_INT_TABLE_MAX_INDEX = 750;

    static final int EXP_INT_TABLE_LEN = (org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX) * 2;

    static final int LN_MANT_LEN = 1024;

    static final int EXP_FRAC_TABLE_LEN = 1025;

    private static final double LOG_MAX_VALUE = java.lang.StrictMath.log(java.lang.Double.MAX_VALUE);

    private static final boolean RECOMPUTE_TABLES_AT_RUNTIME = false;

    private static final double LN_2_A = 0.6931470632553101;

    private static final double LN_2_B = 1.1730463525082348E-7;

    private static final double[][] LN_QUICK_COEF = new double[][]{ new double[]{ 1.0, 5.669184079525E-24 }, new double[]{ -0.25, -0.25 }, new double[]{ 0.3333333134651184, 1.986821492305628E-8 }, new double[]{ -0.25, -6.663542893624021E-14 }, new double[]{ 0.19999998807907104, 1.1921056801463227E-8 }, new double[]{ -0.1666666567325592, -7.800414592973399E-9 }, new double[]{ 0.1428571343421936, 5.650007086920087E-9 }, new double[]{ -0.12502530217170715, -7.44321345601866E-11 }, new double[]{ 0.11113807559013367, 9.219544613762692E-9 } };

    private static final double[][] LN_HI_PREC_COEF = new double[][]{ new double[]{ 1.0, -6.032174644509064E-23 }, new double[]{ -0.25, -0.25 }, new double[]{ 0.3333333134651184, 1.9868161777724352E-8 }, new double[]{ -0.2499999701976776, -2.957007209750105E-8 }, new double[]{ 0.19999954104423523, 1.5830993332061267E-10 }, new double[]{ -0.16624879837036133, -2.6033824355191673E-8 } };

    private static final int SINE_TABLE_LEN = 14;

    private static final double[] SINE_TABLE_A = new double[]{ +0.0, +0.1246747374534607, +0.24740394949913025, +0.366272509098053, +0.4794255495071411, +0.5850973129272461, +0.6816387176513672, +0.7675435543060303, +0.8414709568023682, +0.902267575263977, +0.9489846229553223, +0.9808930158615112, +0.9974949359893799, +0.9985313415527344 };

    private static final double[] SINE_TABLE_B = new double[]{ +0.0, -4.068233003401932E-9, +9.755392680573412E-9, +1.9987994582857286E-8, -1.0902938113007961E-8, -3.9986783938944604E-8, +4.23719669792332E-8, -5.207000323380292E-8, +2.800552834259E-8, +1.883511811213715E-8, -3.5997360512765566E-9, +4.116164446561962E-8, +5.0614674548127384E-8, -1.0129027912496858E-9 };

    private static final double[] COSINE_TABLE_A = new double[]{ +1.0, +0.9921976327896118, +0.9689123630523682, +0.9305076599121094, +0.8775825500488281, +0.8109631538391113, +0.7316888570785522, +0.6409968137741089, +0.5403022766113281, +0.4311765432357788, +0.3153223395347595, +0.19454771280288696, +0.07073719799518585, -0.05417713522911072 };

    private static final double[] COSINE_TABLE_B = new double[]{ +0.0, +3.4439717236742845E-8, +5.865827662008209E-8, -3.7999795083850525E-8, +1.184154459111628E-8, -3.43338934259355E-8, +1.1795268640216787E-8, +4.438921624363781E-8, +2.925681159240093E-8, -2.6437112632041807E-8, +2.2860509143963117E-8, -4.813899778443457E-9, +3.6725170580355583E-9, +2.0217439756338078E-10 };

    private static final double[] TANGENT_TABLE_A = new double[]{ +0.0, +0.1256551444530487, +0.25534194707870483, +0.3936265707015991, +0.5463024377822876, +0.7214844226837158, +0.9315965175628662, +1.1974215507507324, +1.5574076175689697, +2.092571258544922, +3.0095696449279785, +5.041914939880371, +14.101419448852539, -18.430862426757812 };

    private static final double[] TANGENT_TABLE_B = new double[]{ +0.0, -7.877917738262007E-9, -2.5857668567479893E-8, +5.2240336371356666E-9, +5.206150291559893E-8, +1.8307188599677033E-8, -5.7618793749770706E-8, +7.848361555046424E-8, +1.0708593250394448E-7, +1.7827257129423813E-8, +2.893485277253286E-8, +3.1660099222737955E-7, +4.983191803254889E-7, -3.356118100840571E-7 };

    private static final long[] RECIP_2PI = new long[]{ (683565275L << 32) | 2475754826L, (2131351028L << 32) | 2102212464L, (920167782L << 32) | 1326507024L, (2140428522L << 32) | 4155437400L, (1841896334L << 32) | 2425582776L, (26364858L << 32) | 2188665991L, (1065843399L << 32) | 743074255L, (3122695549L << 32) | 1269748001L, (979835913L << 32) | 2904022928L, (1315206542L << 32) | 1624559229L, (656480226L << 32) | 4018031118L, (3355321855L << 32) | 4152452611L, (4224435298L << 32) | 3598883655L, (3679297459L << 32) | 3388129901L, (3553726425L << 32) | 2811755147L, (1565126321L << 32) | 4210654302L, (3477196413L << 32) | 3801392314L, 2600392684L << 32 };

    private static final long[] PI_O_4_BITS = new long[]{ (3373259426L << 32) | 560513588L, (3301335691L << 32) | 2161908945L };

    private static final double[] EIGHTHS = new double[]{ 0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 1.125, 1.25, 1.375, 1.5, 1.625 };

    private static final double[] CBRTTWO = new double[]{ 0.6299605249474366, 0.7937005259840998, 1.0, 1.2599210498948732, 1.5874010519681994 };

    private static final long HEX_40000000 = 1073741824L;

    private static final long MASK_30BITS = (-1L) - ((org.apache.commons.math4.util.FastMath.HEX_40000000) - 1);

    private static final int MASK_NON_SIGN_INT = 2147483647;

    private static final long MASK_NON_SIGN_LONG = 9223372036854775807L;

    private static final double TWO_POWER_52 = 4.503599627370496E15;

    private static final double TWO_POWER_53 = 2 * (org.apache.commons.math4.util.FastMath.TWO_POWER_52);

    private static final double F_1_3 = 1.0 / 3.0;

    private static final double F_1_5 = 1.0 / 5.0;

    private static final double F_1_7 = 1.0 / 7.0;

    private static final double F_1_9 = 1.0 / 9.0;

    private static final double F_1_11 = 1.0 / 11.0;

    private static final double F_1_13 = 1.0 / 13.0;

    private static final double F_1_15 = 1.0 / 15.0;

    private static final double F_1_17 = 1.0 / 17.0;

    private static final double F_3_4 = 3.0 / 4.0;

    private static final double F_15_16 = 15.0 / 16.0;

    private static final double F_13_14 = 13.0 / 14.0;

    private static final double F_11_12 = 11.0 / 12.0;

    private static final double F_9_10 = 9.0 / 10.0;

    private static final double F_7_8 = 7.0 / 8.0;

    private static final double F_5_6 = 5.0 / 6.0;

    private static final double F_1_2 = 1.0 / 2.0;

    private static final double F_1_4 = 1.0 / 4.0;

    private FastMath() {
    }

    private static double doubleHighPart(double d) {
        if ((d > (-(org.apache.commons.math4.util.Precision.SAFE_MIN))) && (d < (org.apache.commons.math4.util.Precision.SAFE_MIN))) {
            return d;
        }
        long xl = java.lang.Double.doubleToRawLongBits(d);
        xl &= org.apache.commons.math4.util.FastMath.MASK_30BITS;
        return java.lang.Double.longBitsToDouble(xl);
    }

    public static double sqrt(final double a) {
        return java.lang.Math.sqrt(a);
    }

    public static double cosh(double x) {
        if (x != x) {
            return x;
        }
        if (x > 20) {
            if (x >= (org.apache.commons.math4.util.FastMath.LOG_MAX_VALUE)) {
                final double t = org.apache.commons.math4.util.FastMath.exp((0.5 * x));
                return (0.5 * t) * t;
            }else {
                return 0.5 * (org.apache.commons.math4.util.FastMath.exp(x));
            }
        }else
            if (x < (-20)) {
                if (x <= (-(org.apache.commons.math4.util.FastMath.LOG_MAX_VALUE))) {
                    final double t = org.apache.commons.math4.util.FastMath.exp(((-0.5) * x));
                    return (0.5 * t) * t;
                }else {
                    return 0.5 * (org.apache.commons.math4.util.FastMath.exp((-x)));
                }
            }

        final double[] hiPrec = new double[2];
        if (x < 0.0) {
            x = -x;
        }
        org.apache.commons.math4.util.FastMath.exp(x, 0.0, hiPrec);
        double ya = (hiPrec[0]) + (hiPrec[1]);
        double yb = -((ya - (hiPrec[0])) - (hiPrec[1]));
        double temp = ya * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double yaa = (ya + temp) - temp;
        double yab = ya - yaa;
        double recip = 1.0 / ya;
        temp = recip * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double recipa = (recip + temp) - temp;
        double recipb = recip - recipa;
        recipb += ((((1.0 - (yaa * recipa)) - (yaa * recipb)) - (yab * recipa)) - (yab * recipb)) * recip;
        recipb += ((-yb) * recip) * recip;
        temp = ya + recipa;
        yb += -((temp - ya) - recipa);
        ya = temp;
        temp = ya + recipb;
        yb += -((temp - ya) - recipb);
        ya = temp;
        double result = ya + yb;
        result *= 0.5;
        return result;
    }

    public static double sinh(double x) {
        boolean negate = false;
        if (x != x) {
            return x;
        }
        if (x > 20) {
            if (x >= (org.apache.commons.math4.util.FastMath.LOG_MAX_VALUE)) {
                final double t = org.apache.commons.math4.util.FastMath.exp((0.5 * x));
                return (0.5 * t) * t;
            }else {
                return 0.5 * (org.apache.commons.math4.util.FastMath.exp(x));
            }
        }else
            if (x < (-20)) {
                if (x <= (-(org.apache.commons.math4.util.FastMath.LOG_MAX_VALUE))) {
                    final double t = org.apache.commons.math4.util.FastMath.exp(((-0.5) * x));
                    return ((-0.5) * t) * t;
                }else {
                    return (-0.5) * (org.apache.commons.math4.util.FastMath.exp((-x)));
                }
            }

        if (x == 0) {
            return x;
        }
        if (x < 0.0) {
            x = -x;
            negate = true;
        }
        double result;
        if (x > 0.25) {
            double[] hiPrec = new double[2];
            org.apache.commons.math4.util.FastMath.exp(x, 0.0, hiPrec);
            double ya = (hiPrec[0]) + (hiPrec[1]);
            double yb = -((ya - (hiPrec[0])) - (hiPrec[1]));
            double temp = ya * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double yaa = (ya + temp) - temp;
            double yab = ya - yaa;
            double recip = 1.0 / ya;
            temp = recip * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double recipa = (recip + temp) - temp;
            double recipb = recip - recipa;
            recipb += ((((1.0 - (yaa * recipa)) - (yaa * recipb)) - (yab * recipa)) - (yab * recipb)) * recip;
            recipb += ((-yb) * recip) * recip;
            recipa = -recipa;
            recipb = -recipb;
            temp = ya + recipa;
            yb += -((temp - ya) - recipa);
            ya = temp;
            temp = ya + recipb;
            yb += -((temp - ya) - recipb);
            ya = temp;
            result = ya + yb;
            result *= 0.5;
        }else {
            double[] hiPrec = new double[2];
            org.apache.commons.math4.util.FastMath.expm1(x, hiPrec);
            double ya = (hiPrec[0]) + (hiPrec[1]);
            double yb = -((ya - (hiPrec[0])) - (hiPrec[1]));
            double denom = 1.0 + ya;
            double denomr = 1.0 / denom;
            double denomb = (-((denom - 1.0) - ya)) + yb;
            double ratio = ya * denomr;
            double temp = ratio * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double ra = (ratio + temp) - temp;
            double rb = ratio - ra;
            temp = denom * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double za = (denom + temp) - temp;
            double zb = denom - za;
            rb += ((((ya - (za * ra)) - (za * rb)) - (zb * ra)) - (zb * rb)) * denomr;
            rb += yb * denomr;
            rb += (((-ya) * denomb) * denomr) * denomr;
            temp = ya + ra;
            yb += -((temp - ya) - ra);
            ya = temp;
            temp = ya + rb;
            yb += -((temp - ya) - rb);
            ya = temp;
            result = ya + yb;
            result *= 0.5;
        }
        if (negate) {
            result = -result;
        }
        return result;
    }

    public static double tanh(double x) {
        boolean negate = false;
        if (x != x) {
            return x;
        }
        if (x > 20.0) {
            return 1.0;
        }
        if (x < (-20)) {
            return -1.0;
        }
        if (x == 0) {
            return x;
        }
        if (x < 0.0) {
            x = -x;
            negate = true;
        }
        double result;
        if (x >= 0.5) {
            double[] hiPrec = new double[2];
            org.apache.commons.math4.util.FastMath.exp((x * 2.0), 0.0, hiPrec);
            double ya = (hiPrec[0]) + (hiPrec[1]);
            double yb = -((ya - (hiPrec[0])) - (hiPrec[1]));
            double na = (-1.0) + ya;
            double nb = -((na + 1.0) - ya);
            double temp = na + yb;
            nb += -((temp - na) - yb);
            na = temp;
            double da = 1.0 + ya;
            double db = -((da - 1.0) - ya);
            temp = da + yb;
            db += -((temp - da) - yb);
            da = temp;
            temp = da * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double daa = (da + temp) - temp;
            double dab = da - daa;
            double ratio = na / da;
            temp = ratio * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double ratioa = (ratio + temp) - temp;
            double ratiob = ratio - ratioa;
            ratiob += ((((na - (daa * ratioa)) - (daa * ratiob)) - (dab * ratioa)) - (dab * ratiob)) / da;
            ratiob += nb / da;
            ratiob += (((-db) * na) / da) / da;
            result = ratioa + ratiob;
        }else {
            double[] hiPrec = new double[2];
            org.apache.commons.math4.util.FastMath.expm1((x * 2.0), hiPrec);
            double ya = (hiPrec[0]) + (hiPrec[1]);
            double yb = -((ya - (hiPrec[0])) - (hiPrec[1]));
            double na = ya;
            double nb = yb;
            double da = 2.0 + ya;
            double db = -((da - 2.0) - ya);
            double temp = da + yb;
            db += -((temp - da) - yb);
            da = temp;
            temp = da * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double daa = (da + temp) - temp;
            double dab = da - daa;
            double ratio = na / da;
            temp = ratio * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double ratioa = (ratio + temp) - temp;
            double ratiob = ratio - ratioa;
            ratiob += ((((na - (daa * ratioa)) - (daa * ratiob)) - (dab * ratioa)) - (dab * ratiob)) / da;
            ratiob += nb / da;
            ratiob += (((-db) * na) / da) / da;
            result = ratioa + ratiob;
        }
        if (negate) {
            result = -result;
        }
        return result;
    }

    public static double acosh(final double a) {
        return org.apache.commons.math4.util.FastMath.log((a + (org.apache.commons.math4.util.FastMath.sqrt(((a * a) - 1)))));
    }

    public static double asinh(double a) {
        boolean negative = false;
        if (a < 0) {
            negative = true;
            a = -a;
        }
        double absAsinh;
        if (a > 0.167) {
            absAsinh = org.apache.commons.math4.util.FastMath.log(((org.apache.commons.math4.util.FastMath.sqrt(((a * a) + 1))) + a));
        }else {
            final double a2 = a * a;
            if (a > 0.097) {
                absAsinh = a * (1 - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_3) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_5) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_7) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_9) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_11) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_13) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_15) - ((a2 * (org.apache.commons.math4.util.FastMath.F_1_17)) * (org.apache.commons.math4.util.FastMath.F_15_16)))) * (org.apache.commons.math4.util.FastMath.F_13_14)))) * (org.apache.commons.math4.util.FastMath.F_11_12)))) * (org.apache.commons.math4.util.FastMath.F_9_10)))) * (org.apache.commons.math4.util.FastMath.F_7_8)))) * (org.apache.commons.math4.util.FastMath.F_5_6)))) * (org.apache.commons.math4.util.FastMath.F_3_4)))) * (org.apache.commons.math4.util.FastMath.F_1_2)));
            }else
                if (a > 0.036) {
                    absAsinh = a * (1 - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_3) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_5) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_7) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_9) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_11) - ((a2 * (org.apache.commons.math4.util.FastMath.F_1_13)) * (org.apache.commons.math4.util.FastMath.F_11_12)))) * (org.apache.commons.math4.util.FastMath.F_9_10)))) * (org.apache.commons.math4.util.FastMath.F_7_8)))) * (org.apache.commons.math4.util.FastMath.F_5_6)))) * (org.apache.commons.math4.util.FastMath.F_3_4)))) * (org.apache.commons.math4.util.FastMath.F_1_2)));
                }else
                    if (a > 0.0036) {
                        absAsinh = a * (1 - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_3) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_5) - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_7) - ((a2 * (org.apache.commons.math4.util.FastMath.F_1_9)) * (org.apache.commons.math4.util.FastMath.F_7_8)))) * (org.apache.commons.math4.util.FastMath.F_5_6)))) * (org.apache.commons.math4.util.FastMath.F_3_4)))) * (org.apache.commons.math4.util.FastMath.F_1_2)));
                    }else {
                        absAsinh = a * (1 - ((a2 * ((org.apache.commons.math4.util.FastMath.F_1_3) - ((a2 * (org.apache.commons.math4.util.FastMath.F_1_5)) * (org.apache.commons.math4.util.FastMath.F_3_4)))) * (org.apache.commons.math4.util.FastMath.F_1_2)));
                    }


        }
        return negative ? -absAsinh : absAsinh;
    }

    public static double atanh(double a) {
        boolean negative = false;
        if (a < 0) {
            negative = true;
            a = -a;
        }
        double absAtanh;
        if (a > 0.15) {
            absAtanh = 0.5 * (org.apache.commons.math4.util.FastMath.log(((1 + a) / (1 - a))));
        }else {
            final double a2 = a * a;
            if (a > 0.087) {
                absAtanh = a * (1 + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_3) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_5) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_7) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_9) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_11) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_13) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_15) + (a2 * (org.apache.commons.math4.util.FastMath.F_1_17)))))))))))))))));
            }else
                if (a > 0.031) {
                    absAtanh = a * (1 + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_3) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_5) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_7) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_9) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_11) + (a2 * (org.apache.commons.math4.util.FastMath.F_1_13)))))))))))));
                }else
                    if (a > 0.003) {
                        absAtanh = a * (1 + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_3) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_5) + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_7) + (a2 * (org.apache.commons.math4.util.FastMath.F_1_9)))))))));
                    }else {
                        absAtanh = a * (1 + (a2 * ((org.apache.commons.math4.util.FastMath.F_1_3) + (a2 * (org.apache.commons.math4.util.FastMath.F_1_5)))));
                    }


        }
        return negative ? -absAtanh : absAtanh;
    }

    public static double signum(final double a) {
        return a < 0.0 ? -1.0 : a > 0.0 ? 1.0 : a;
    }

    public static float signum(final float a) {
        return a < 0.0F ? -1.0F : a > 0.0F ? 1.0F : a;
    }

    public static double nextUp(final double a) {
        return org.apache.commons.math4.util.FastMath.nextAfter(a, java.lang.Double.POSITIVE_INFINITY);
    }

    public static float nextUp(final float a) {
        return org.apache.commons.math4.util.FastMath.nextAfter(a, java.lang.Float.POSITIVE_INFINITY);
    }

    public static double nextDown(final double a) {
        return org.apache.commons.math4.util.FastMath.nextAfter(a, java.lang.Double.NEGATIVE_INFINITY);
    }

    public static float nextDown(final float a) {
        return org.apache.commons.math4.util.FastMath.nextAfter(a, java.lang.Float.NEGATIVE_INFINITY);
    }

    public static double random() {
        return java.lang.Math.random();
    }

    public static double exp(double x) {
        return org.apache.commons.math4.util.FastMath.exp(x, 0.0, null);
    }

    private static double exp(double x, double extra, double[] hiPrec) {
        double intPartA;
        double intPartB;
        int intVal = ((int) (x));
        if (x < 0.0) {
            if (x < (-746.0)) {
                if (hiPrec != null) {
                    hiPrec[0] = 0.0;
                    hiPrec[1] = 0.0;
                }
                return 0.0;
            }
            if (intVal < (-709)) {
                final double result = (org.apache.commons.math4.util.FastMath.exp((x + 40.19140625), extra, hiPrec)) / 2.85040095144011776E17;
                if (hiPrec != null) {
                    hiPrec[0] /= 2.85040095144011776E17;
                    hiPrec[1] /= 2.85040095144011776E17;
                }
                return result;
            }
            if (intVal == (-709)) {
                final double result = (org.apache.commons.math4.util.FastMath.exp((x + 1.494140625), extra, hiPrec)) / 4.455505956692757;
                if (hiPrec != null) {
                    hiPrec[0] /= 4.455505956692757;
                    hiPrec[1] /= 4.455505956692757;
                }
                return result;
            }
            intVal--;
        }else {
            if (intVal > 709) {
                if (hiPrec != null) {
                    hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
                    hiPrec[1] = 0.0;
                }
                return java.lang.Double.POSITIVE_INFINITY;
            }
        }
        intPartA = org.apache.commons.math4.util.FastMath.ExpIntTable.EXP_INT_TABLE_A[((org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX) + intVal)];
        intPartB = org.apache.commons.math4.util.FastMath.ExpIntTable.EXP_INT_TABLE_B[((org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX) + intVal)];
        final int intFrac = ((int) ((x - intVal) * 1024.0));
        final double fracPartA = org.apache.commons.math4.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A[intFrac];
        final double fracPartB = org.apache.commons.math4.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B[intFrac];
        final double epsilon = x - (intVal + (intFrac / 1024.0));
        double z = 0.04168701738764507;
        z = (z * epsilon) + 0.1666666505023083;
        z = (z * epsilon) + 0.5000000000042687;
        z = (z * epsilon) + 1.0;
        z = (z * epsilon) + (-3.940510424527919E-20);
        double tempA = intPartA * fracPartA;
        double tempB = ((intPartA * fracPartB) + (intPartB * fracPartA)) + (intPartB * fracPartB);
        final double tempC = tempB + tempA;
        final double result;
        if (extra != 0.0) {
            result = (((((tempC * extra) * z) + (tempC * extra)) + (tempC * z)) + tempB) + tempA;
        }else {
            result = ((tempC * z) + tempB) + tempA;
        }
        if (hiPrec != null) {
            hiPrec[0] = tempA;
            hiPrec[1] = ((((tempC * extra) * z) + (tempC * extra)) + (tempC * z)) + tempB;
        }
        return result;
    }

    public static double expm1(double x) {
        return org.apache.commons.math4.util.FastMath.expm1(x, null);
    }

    private static double expm1(double x, double[] hiPrecOut) {
        if ((x != x) || (x == 0.0)) {
            return x;
        }
        if ((x <= (-1.0)) || (x >= 1.0)) {
            double[] hiPrec = new double[2];
            org.apache.commons.math4.util.FastMath.exp(x, 0.0, hiPrec);
            if (x > 0.0) {
                return ((-1.0) + (hiPrec[0])) + (hiPrec[1]);
            }else {
                final double ra = (-1.0) + (hiPrec[0]);
                double rb = -((ra + 1.0) - (hiPrec[0]));
                rb += hiPrec[1];
                return ra + rb;
            }
        }
        double baseA;
        double baseB;
        double epsilon;
        boolean negative = false;
        if (x < 0.0) {
            x = -x;
            negative = true;
        }
        {
            int intFrac = ((int) (x * 1024.0));
            double tempA = (org.apache.commons.math4.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A[intFrac]) - 1.0;
            double tempB = org.apache.commons.math4.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B[intFrac];
            double temp = tempA + tempB;
            tempB = -((temp - tempA) - tempB);
            tempA = temp;
            temp = tempA * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            baseA = (tempA + temp) - temp;
            baseB = tempB + (tempA - baseA);
            epsilon = x - (intFrac / 1024.0);
        }
        double zb = 0.008336750013465571;
        zb = (zb * epsilon) + 0.041666663879186654;
        zb = (zb * epsilon) + 0.16666666666745392;
        zb = (zb * epsilon) + 0.49999999999999994;
        zb *= epsilon;
        zb *= epsilon;
        double za = epsilon;
        double temp = za + zb;
        zb = -((temp - za) - zb);
        za = temp;
        temp = za * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        temp = (za + temp) - temp;
        zb += za - temp;
        za = temp;
        double ya = za * baseA;
        temp = ya + (za * baseB);
        double yb = -((temp - ya) - (za * baseB));
        ya = temp;
        temp = ya + (zb * baseA);
        yb += -((temp - ya) - (zb * baseA));
        ya = temp;
        temp = ya + (zb * baseB);
        yb += -((temp - ya) - (zb * baseB));
        ya = temp;
        temp = ya + baseA;
        yb += -((temp - baseA) - ya);
        ya = temp;
        temp = ya + za;
        yb += -((temp - ya) - za);
        ya = temp;
        temp = ya + baseB;
        yb += -((temp - ya) - baseB);
        ya = temp;
        temp = ya + zb;
        yb += -((temp - ya) - zb);
        ya = temp;
        if (negative) {
            double denom = 1.0 + ya;
            double denomr = 1.0 / denom;
            double denomb = (-((denom - 1.0) - ya)) + yb;
            double ratio = ya * denomr;
            temp = ratio * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            final double ra = (ratio + temp) - temp;
            double rb = ratio - ra;
            temp = denom * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            za = (denom + temp) - temp;
            zb = denom - za;
            rb += ((((ya - (za * ra)) - (za * rb)) - (zb * ra)) - (zb * rb)) * denomr;
            rb += yb * denomr;
            rb += (((-ya) * denomb) * denomr) * denomr;
            ya = -ra;
            yb = -rb;
        }
        if (hiPrecOut != null) {
            hiPrecOut[0] = ya;
            hiPrecOut[1] = yb;
        }
        return ya + yb;
    }

    public static double log(final double x) {
        return org.apache.commons.math4.util.FastMath.log(x, null);
    }

    private static double log(final double x, final double[] hiPrec) {
        if (x == 0) {
            return java.lang.Double.NEGATIVE_INFINITY;
        }
        long bits = java.lang.Double.doubleToRawLongBits(x);
        if ((((bits & -9223372036854775808L) != 0) || (x != x)) && (x != 0.0)) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.NaN;
            }
            return java.lang.Double.NaN;
        }
        if (x == (java.lang.Double.POSITIVE_INFINITY)) {
            if (hiPrec != null) {
                hiPrec[0] = java.lang.Double.POSITIVE_INFINITY;
            }
            return java.lang.Double.POSITIVE_INFINITY;
        }
        int exp = ((int) (bits >> 52)) - 1023;
        if ((bits & 9218868437227405312L) == 0) {
            if (x == 0) {
                if (hiPrec != null) {
                    hiPrec[0] = java.lang.Double.NEGATIVE_INFINITY;
                }
                return java.lang.Double.NEGATIVE_INFINITY;
            }
            bits <<= 1;
            while ((bits & 4503599627370496L) == 0) {
                --exp;
                bits <<= 1;
            } 
        }
        if (((((exp == (-1)) || (exp == 0)) && (x < 1.01)) && (x > 0.99)) && (hiPrec == null)) {
            double xa = x - 1.0;
            double xb = (xa - x) + 1.0;
            double tmp = xa * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double aa = (xa + tmp) - tmp;
            double ab = xa - aa;
            xa = aa;
            xb = ab;
            final double[] lnCoef_last = org.apache.commons.math4.util.FastMath.LN_QUICK_COEF[((org.apache.commons.math4.util.FastMath.LN_QUICK_COEF.length) - 1)];
            double ya = lnCoef_last[0];
            double yb = lnCoef_last[1];
            for (int i = (org.apache.commons.math4.util.FastMath.LN_QUICK_COEF.length) - 2; i >= 0; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math4.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                final double[] lnCoef_i = org.apache.commons.math4.util.FastMath.LN_QUICK_COEF[i];
                aa = ya + (lnCoef_i[0]);
                ab = yb + (lnCoef_i[1]);
                tmp = aa * (org.apache.commons.math4.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            tmp = aa * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            ya = (aa + tmp) - tmp;
            yb = (aa - ya) + ab;
            return ya + yb;
        }
        final double[] lnm = org.apache.commons.math4.util.FastMath.lnMant.LN_MANT[((int) ((bits & 4499201580859392L) >> 42))];
        final double epsilon = (bits & 4398046511103L) / ((org.apache.commons.math4.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L));
        double lnza = 0.0;
        double lnzb = 0.0;
        if (hiPrec != null) {
            double tmp = epsilon * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            double aa = (epsilon + tmp) - tmp;
            double ab = epsilon - aa;
            double xa = aa;
            double xb = ab;
            final double numer = bits & 4398046511103L;
            final double denom = (org.apache.commons.math4.util.FastMath.TWO_POWER_52) + (bits & 4499201580859392L);
            aa = (numer - (xa * denom)) - (xb * denom);
            xb += aa / denom;
            final double[] lnCoef_last = org.apache.commons.math4.util.FastMath.LN_HI_PREC_COEF[((org.apache.commons.math4.util.FastMath.LN_HI_PREC_COEF.length) - 1)];
            double ya = lnCoef_last[0];
            double yb = lnCoef_last[1];
            for (int i = (org.apache.commons.math4.util.FastMath.LN_HI_PREC_COEF.length) - 2; i >= 0; i--) {
                aa = ya * xa;
                ab = ((ya * xb) + (yb * xa)) + (yb * xb);
                tmp = aa * (org.apache.commons.math4.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
                final double[] lnCoef_i = org.apache.commons.math4.util.FastMath.LN_HI_PREC_COEF[i];
                aa = ya + (lnCoef_i[0]);
                ab = yb + (lnCoef_i[1]);
                tmp = aa * (org.apache.commons.math4.util.FastMath.HEX_40000000);
                ya = (aa + tmp) - tmp;
                yb = (aa - ya) + ab;
            }
            aa = ya * xa;
            ab = ((ya * xb) + (yb * xa)) + (yb * xb);
            lnza = aa + ab;
            lnzb = -((lnza - aa) - ab);
        }else {
            lnza = -0.16624882440418567;
            lnza = (lnza * epsilon) + 0.19999954120254515;
            lnza = (lnza * epsilon) + (-0.2499999997677497);
            lnza = (lnza * epsilon) + 0.3333333333332802;
            lnza = (lnza * epsilon) + (-0.5);
            lnza = (lnza * epsilon) + 1.0;
            lnza *= epsilon;
        }
        double a = (org.apache.commons.math4.util.FastMath.LN_2_A) * exp;
        double b = 0.0;
        double c = a + (lnm[0]);
        double d = -((c - a) - (lnm[0]));
        a = c;
        b += d;
        c = a + lnza;
        d = -((c - a) - lnza);
        a = c;
        b += d;
        c = a + ((org.apache.commons.math4.util.FastMath.LN_2_B) * exp);
        d = -((c - a) - ((org.apache.commons.math4.util.FastMath.LN_2_B) * exp));
        a = c;
        b += d;
        c = a + (lnm[1]);
        d = -((c - a) - (lnm[1]));
        a = c;
        b += d;
        c = a + lnzb;
        d = -((c - a) - lnzb);
        a = c;
        b += d;
        if (hiPrec != null) {
            hiPrec[0] = a;
            hiPrec[1] = b;
        }
        return a + b;
    }

    public static double log1p(final double x) {
        if (x == (-1)) {
            return java.lang.Double.NEGATIVE_INFINITY;
        }
        if (x == (java.lang.Double.POSITIVE_INFINITY)) {
            return java.lang.Double.POSITIVE_INFINITY;
        }
        if ((x > 1.0E-6) || (x < (-1.0E-6))) {
            final double xpa = 1 + x;
            final double xpb = -((xpa - 1) - x);
            final double[] hiPrec = new double[2];
            final double lores = org.apache.commons.math4.util.FastMath.log(xpa, hiPrec);
            if (java.lang.Double.isInfinite(lores)) {
                return lores;
            }
            final double fx1 = xpb / xpa;
            final double epsilon = (0.5 * fx1) + 1;
            return ((epsilon * fx1) + (hiPrec[1])) + (hiPrec[0]);
        }else {
            final double y = (((x * (org.apache.commons.math4.util.FastMath.F_1_3)) - (org.apache.commons.math4.util.FastMath.F_1_2)) * x) + 1;
            return y * x;
        }
    }

    public static double log10(final double x) {
        final double[] hiPrec = new double[2];
        final double lores = org.apache.commons.math4.util.FastMath.log(x, hiPrec);
        if (java.lang.Double.isInfinite(lores)) {
            return lores;
        }
        final double tmp = (hiPrec[0]) * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        final double lna = ((hiPrec[0]) + tmp) - tmp;
        final double lnb = ((hiPrec[0]) - lna) + (hiPrec[1]);
        final double rln10a = 0.4342944622039795;
        final double rln10b = 1.9699272335463627E-8;
        return (((rln10b * lnb) + (rln10b * lna)) + (rln10a * lnb)) + (rln10a * lna);
    }

    public static double log(double base, double x) {
        return (org.apache.commons.math4.util.FastMath.log(x)) / (org.apache.commons.math4.util.FastMath.log(base));
    }

    public static double pow(double x, double y) {
        final double[] lns = new double[2];
        if (y == 0.0) {
            return 1.0;
        }
        if (x != x) {
            return x;
        }
        if (x == 0) {
            long bits = java.lang.Double.doubleToRawLongBits(x);
            if ((bits & -9223372036854775808L) != 0) {
                long yi = ((long) (y));
                if (((y < 0) && (y == yi)) && ((yi & 1) == 1)) {
                    return java.lang.Double.NEGATIVE_INFINITY;
                }
                if (((y > 0) && (y == yi)) && ((yi & 1) == 1)) {
                    return -0.0;
                }
            }
            if (y < 0) {
                return java.lang.Double.POSITIVE_INFINITY;
            }
            if (y > 0) {
                return 0.0;
            }
            return java.lang.Double.NaN;
        }
        if (x == (java.lang.Double.POSITIVE_INFINITY)) {
            if (y != y) {
                return y;
            }
            if (y < 0.0) {
                return 0.0;
            }else {
                return java.lang.Double.POSITIVE_INFINITY;
            }
        }
        if (y == (java.lang.Double.POSITIVE_INFINITY)) {
            if ((x * x) == 1.0) {
                return java.lang.Double.NaN;
            }
            if ((x * x) > 1.0) {
                return java.lang.Double.POSITIVE_INFINITY;
            }else {
                return 0.0;
            }
        }
        if (x == (java.lang.Double.NEGATIVE_INFINITY)) {
            if (y != y) {
                return y;
            }
            if (y < 0) {
                long yi = ((long) (y));
                if ((y == yi) && ((yi & 1) == 1)) {
                    return -0.0;
                }
                return 0.0;
            }
            if (y > 0) {
                long yi = ((long) (y));
                if ((y == yi) && ((yi & 1) == 1)) {
                    return java.lang.Double.NEGATIVE_INFINITY;
                }
                return java.lang.Double.POSITIVE_INFINITY;
            }
        }
        if (y == (java.lang.Double.NEGATIVE_INFINITY)) {
            if ((x * x) == 1.0) {
                return java.lang.Double.NaN;
            }
            if ((x * x) < 1.0) {
                return java.lang.Double.POSITIVE_INFINITY;
            }else {
                return 0.0;
            }
        }
        if (x < 0) {
            if ((y >= (org.apache.commons.math4.util.FastMath.TWO_POWER_53)) || (y <= (-(org.apache.commons.math4.util.FastMath.TWO_POWER_53)))) {
                return org.apache.commons.math4.util.FastMath.pow((-x), y);
            }
            if (y == ((long) (y))) {
                return (((long) (y)) & 1) == 0 ? org.apache.commons.math4.util.FastMath.pow((-x), y) : -(org.apache.commons.math4.util.FastMath.pow((-x), y));
            }else {
                return java.lang.Double.NaN;
            }
        }
        double ya;
        double yb;
        if ((y < 8.0E298) && (y > (-8.0E298))) {
            double tmp1 = y * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            ya = (y + tmp1) - tmp1;
            yb = y - ya;
        }else {
            double tmp1 = y * 9.313225746154785E-10;
            double tmp2 = tmp1 * 9.313225746154785E-10;
            ya = (((tmp1 + tmp2) - tmp1) * (org.apache.commons.math4.util.FastMath.HEX_40000000)) * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            yb = y - ya;
        }
        final double lores = org.apache.commons.math4.util.FastMath.log(x, lns);
        if (java.lang.Double.isInfinite(lores)) {
            return lores;
        }
        double lna = lns[0];
        double lnb = lns[1];
        double tmp1 = lna * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double tmp2 = (lna + tmp1) - tmp1;
        lnb += lna - tmp2;
        lna = tmp2;
        final double aa = lna * ya;
        final double ab = ((lna * yb) + (lnb * ya)) + (lnb * yb);
        lna = aa + ab;
        lnb = -((lna - aa) - ab);
        double z = 1.0 / 120.0;
        z = (z * lnb) + (1.0 / 24.0);
        z = (z * lnb) + (1.0 / 6.0);
        z = (z * lnb) + 0.5;
        z = (z * lnb) + 1.0;
        z *= lnb;
        final double result = org.apache.commons.math4.util.FastMath.exp(lna, z, null);
        return result;
    }

    public static double pow(double d, int e) {
        if (e == 0) {
            return 1.0;
        }else
            if (e < 0) {
                e = -e;
                d = 1.0 / d;
            }

        final int splitFactor = 134217729;
        final double cd = splitFactor * d;
        final double d1High = cd - (cd - d);
        final double d1Low = d - d1High;
        double resultHigh = 1;
        double resultLow = 0;
        double d2p = d;
        double d2pHigh = d1High;
        double d2pLow = d1Low;
        while (e != 0) {
            if ((e & 1) != 0) {
                final double tmpHigh = resultHigh * d2p;
                final double cRH = splitFactor * resultHigh;
                final double rHH = cRH - (cRH - resultHigh);
                final double rHL = resultHigh - rHH;
                final double tmpLow = (rHL * d2pLow) - (((tmpHigh - (rHH * d2pHigh)) - (rHL * d2pHigh)) - (rHH * d2pLow));
                resultHigh = tmpHigh;
                resultLow = (resultLow * d2p) + tmpLow;
            }
            final double tmpHigh = d2pHigh * d2p;
            final double cD2pH = splitFactor * d2pHigh;
            final double d2pHH = cD2pH - (cD2pH - d2pHigh);
            final double d2pHL = d2pHigh - d2pHH;
            final double tmpLow = (d2pHL * d2pLow) - (((tmpHigh - (d2pHH * d2pHigh)) - (d2pHL * d2pHigh)) - (d2pHH * d2pLow));
            final double cTmpH = splitFactor * tmpHigh;
            d2pHigh = cTmpH - (cTmpH - tmpHigh);
            d2pLow = ((d2pLow * d2p) + tmpLow) + (tmpHigh - d2pHigh);
            d2p = d2pHigh + d2pLow;
            e >>= 1;
        } 
        return resultHigh + resultLow;
    }

    private static double polySine(final double x) {
        double x2 = x * x;
        double p = 2.7553817452272217E-6;
        p = (p * x2) + (-1.9841269659586505E-4);
        p = (p * x2) + 0.008333333333329196;
        p = (p * x2) + (-0.16666666666666666);
        p = (p * x2) * x;
        return p;
    }

    private static double polyCosine(double x) {
        double x2 = x * x;
        double p = 2.479773539153719E-5;
        p = (p * x2) + (-0.0013888888689039883);
        p = (p * x2) + 0.041666666666621166;
        p = (p * x2) + (-0.49999999999999994);
        p *= x2;
        return p;
    }

    private static double sinQ(double xa, double xb) {
        int idx = ((int) ((xa * 8.0) + 0.5));
        final double epsilon = xa - (org.apache.commons.math4.util.FastMath.EIGHTHS[idx]);
        final double sintA = org.apache.commons.math4.util.FastMath.SINE_TABLE_A[idx];
        final double sintB = org.apache.commons.math4.util.FastMath.SINE_TABLE_B[idx];
        final double costA = org.apache.commons.math4.util.FastMath.COSINE_TABLE_A[idx];
        final double costB = org.apache.commons.math4.util.FastMath.COSINE_TABLE_B[idx];
        double sinEpsA = epsilon;
        double sinEpsB = org.apache.commons.math4.util.FastMath.polySine(epsilon);
        final double cosEpsA = 1.0;
        final double cosEpsB = org.apache.commons.math4.util.FastMath.polyCosine(epsilon);
        final double temp = sinEpsA * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double temp2 = (sinEpsA + temp) - temp;
        sinEpsB += sinEpsA - temp2;
        sinEpsA = temp2;
        double result;
        double a = 0;
        double b = 0;
        double t = sintA;
        double c = a + t;
        double d = -((c - a) - t);
        a = c;
        b += d;
        t = costA * sinEpsA;
        c = a + t;
        d = -((c - a) - t);
        a = c;
        b += d;
        b = (b + (sintA * cosEpsB)) + (costA * sinEpsB);
        b = (((b + sintB) + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB);
        if (xb != 0.0) {
            t = (((costA + costB) * (cosEpsA + cosEpsB)) - ((sintA + sintB) * (sinEpsA + sinEpsB))) * xb;
            c = a + t;
            d = -((c - a) - t);
            a = c;
            b += d;
        }
        boolean spoonDefaultValue = false;
        try {
            spoonDefaultValue = true;
        } catch (java.lang.Exception __NopolProcessorException) {
        }
        boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
        if (fr.inria.lille.commons.trace.RuntimeValues.instance(42).isEnabled()) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectionStarts();
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.EXP_FRAC_TABLE_LEN",org.apache.commons.math4.util.FastMath.EXP_FRAC_TABLE_LEN);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.RECIP_2PI",org.apache.commons.math4.util.FastMath.RECIP_2PI);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.LN_MANT_LEN",org.apache.commons.math4.util.FastMath.LN_MANT_LEN);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX",org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("epsilon",epsilon);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.TWO_POWER_52",org.apache.commons.math4.util.FastMath.TWO_POWER_52);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.TWO_POWER_53",org.apache.commons.math4.util.FastMath.TWO_POWER_53);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.F_9_10",org.apache.commons.math4.util.FastMath.F_9_10);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.EIGHTHS",org.apache.commons.math4.util.FastMath.EIGHTHS);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("sintA",sintA);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("sintB",sintB);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("cosEpsA",cosEpsA);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("cosEpsB",cosEpsB);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.CBRTTWO",org.apache.commons.math4.util.FastMath.CBRTTWO);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_LEN",org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_LEN);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.LOG_MAX_VALUE",org.apache.commons.math4.util.FastMath.LOG_MAX_VALUE);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("costB",costB);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.COSINE_TABLE_B",org.apache.commons.math4.util.FastMath.COSINE_TABLE_B);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.SINE_TABLE_LEN",org.apache.commons.math4.util.FastMath.SINE_TABLE_LEN);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("costA",costA);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.COSINE_TABLE_A",org.apache.commons.math4.util.FastMath.COSINE_TABLE_A);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.LN_2_A",org.apache.commons.math4.util.FastMath.LN_2_A);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("idx",idx);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.F_15_16",org.apache.commons.math4.util.FastMath.F_15_16);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.LN_2_B",org.apache.commons.math4.util.FastMath.LN_2_B);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.F_11_12",org.apache.commons.math4.util.FastMath.F_11_12);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.F_7_8",org.apache.commons.math4.util.FastMath.F_7_8);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.SINE_TABLE_A",org.apache.commons.math4.util.FastMath.SINE_TABLE_A);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.SINE_TABLE_B",org.apache.commons.math4.util.FastMath.SINE_TABLE_B);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.F_1_4",org.apache.commons.math4.util.FastMath.F_1_4);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.F_1_3",org.apache.commons.math4.util.FastMath.F_1_3);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.F_3_4",org.apache.commons.math4.util.FastMath.F_3_4);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.F_1_5",org.apache.commons.math4.util.FastMath.F_1_5);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("temp2",temp2);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.F_1_7",org.apache.commons.math4.util.FastMath.F_1_7);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.F_5_6",org.apache.commons.math4.util.FastMath.F_5_6);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.F_1_9",org.apache.commons.math4.util.FastMath.F_1_9);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.MASK_30BITS",org.apache.commons.math4.util.FastMath.MASK_30BITS);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.LN_HI_PREC_COEF",org.apache.commons.math4.util.FastMath.LN_HI_PREC_COEF);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.F_1_2",org.apache.commons.math4.util.FastMath.F_1_2);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.LN_QUICK_COEF",org.apache.commons.math4.util.FastMath.LN_QUICK_COEF);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("sinEpsA",sinEpsA);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("sinEpsB",sinEpsB);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.F_1_17",org.apache.commons.math4.util.FastMath.F_1_17);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("a",a);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("temp",temp);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("b",b);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.PI_O_4_BITS",org.apache.commons.math4.util.FastMath.PI_O_4_BITS);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.RECOMPUTE_TABLES_AT_RUNTIME",org.apache.commons.math4.util.FastMath.RECOMPUTE_TABLES_AT_RUNTIME);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("c",c);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("d",d);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.HEX_40000000",org.apache.commons.math4.util.FastMath.HEX_40000000);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.TANGENT_TABLE_A",org.apache.commons.math4.util.FastMath.TANGENT_TABLE_A);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.TANGENT_TABLE_B",org.apache.commons.math4.util.FastMath.TANGENT_TABLE_B);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.MASK_NON_SIGN_INT",org.apache.commons.math4.util.FastMath.MASK_NON_SIGN_INT);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("xa",xa);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("xb",xb);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.F_1_11",org.apache.commons.math4.util.FastMath.F_1_11);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.E",org.apache.commons.math4.util.FastMath.E);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.F_1_13",org.apache.commons.math4.util.FastMath.F_1_13);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.F_1_15",org.apache.commons.math4.util.FastMath.F_1_15);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("t",t);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.PI",org.apache.commons.math4.util.FastMath.PI);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.F_13_14",org.apache.commons.math4.util.FastMath.F_13_14);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectInput("org.apache.commons.math4.util.FastMath.MASK_NON_SIGN_LONG",org.apache.commons.math4.util.FastMath.MASK_NON_SIGN_LONG);} catch (Exception ex1) {ex1.printStackTrace();};
            fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectOutput(runtimeAngelicValue);
            fr.inria.lille.commons.trace.RuntimeValues.instance(42).collectionEnds();
        }
        if (runtimeAngelicValue)
            result = a + b;

        return result;
    }

    private static double cosQ(double xa, double xb) {
        final double pi2a = 1.5707963267948966;
        final double pi2b = 6.123233995736766E-17;
        final double a = pi2a - xa;
        double b = -((a - pi2a) + xa);
        b += pi2b - xb;
        return org.apache.commons.math4.util.FastMath.sinQ(a, b);
    }

    private static double tanQ(double xa, double xb, boolean cotanFlag) {
        int idx = ((int) ((xa * 8.0) + 0.5));
        final double epsilon = xa - (org.apache.commons.math4.util.FastMath.EIGHTHS[idx]);
        final double sintA = org.apache.commons.math4.util.FastMath.SINE_TABLE_A[idx];
        final double sintB = org.apache.commons.math4.util.FastMath.SINE_TABLE_B[idx];
        final double costA = org.apache.commons.math4.util.FastMath.COSINE_TABLE_A[idx];
        final double costB = org.apache.commons.math4.util.FastMath.COSINE_TABLE_B[idx];
        double sinEpsA = epsilon;
        double sinEpsB = org.apache.commons.math4.util.FastMath.polySine(epsilon);
        final double cosEpsA = 1.0;
        final double cosEpsB = org.apache.commons.math4.util.FastMath.polyCosine(epsilon);
        double temp = sinEpsA * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double temp2 = (sinEpsA + temp) - temp;
        sinEpsB += sinEpsA - temp2;
        sinEpsA = temp2;
        double a = 0;
        double b = 0;
        double t = sintA;
        double c = a + t;
        double d = -((c - a) - t);
        a = c;
        b += d;
        t = costA * sinEpsA;
        c = a + t;
        d = -((c - a) - t);
        a = c;
        b += d;
        b += (sintA * cosEpsB) + (costA * sinEpsB);
        b += ((sintB + (costB * sinEpsA)) + (sintB * cosEpsB)) + (costB * sinEpsB);
        double sina = a + b;
        double sinb = -((sina - a) - b);
        a = b = c = d = 0.0;
        t = costA * cosEpsA;
        c = a + t;
        d = -((c - a) - t);
        a = c;
        b += d;
        t = (-sintA) * sinEpsA;
        c = a + t;
        d = -((c - a) - t);
        a = c;
        b += d;
        b += ((costB * cosEpsA) + (costA * cosEpsB)) + (costB * cosEpsB);
        b -= ((sintB * sinEpsA) + (sintA * sinEpsB)) + (sintB * sinEpsB);
        double cosa = a + b;
        double cosb = -((cosa - a) - b);
        if (cotanFlag) {
            double tmp;
            tmp = cosa;
            cosa = sina;
            sina = tmp;
            tmp = cosb;
            cosb = sinb;
            sinb = tmp;
        }
        double est = sina / cosa;
        temp = est * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double esta = (est + temp) - temp;
        double estb = est - esta;
        temp = cosa * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double cosaa = (cosa + temp) - temp;
        double cosab = cosa - cosaa;
        double err = ((((sina - (esta * cosaa)) - (esta * cosab)) - (estb * cosaa)) - (estb * cosab)) / cosa;
        err += sinb / cosa;
        err += (((-sina) * cosb) / cosa) / cosa;
        if (xb != 0.0) {
            double xbadj = xb + ((est * est) * xb);
            if (cotanFlag) {
                xbadj = -xbadj;
            }
            err += xbadj;
        }
        return est + err;
    }

    private static void reducePayneHanek(double x, double[] result) {
        long inbits = java.lang.Double.doubleToRawLongBits(x);
        int exponent = ((int) ((inbits >> 52) & 2047)) - 1023;
        inbits &= 4503599627370495L;
        inbits |= 4503599627370496L;
        exponent++;
        inbits <<= 11;
        long shpi0;
        long shpiA;
        long shpiB;
        int idx = exponent >> 6;
        int shift = exponent - (idx << 6);
        if (shift != 0) {
            shpi0 = (idx == 0) ? 0 : (org.apache.commons.math4.util.FastMath.RECIP_2PI[(idx - 1)]) << shift;
            shpi0 |= (org.apache.commons.math4.util.FastMath.RECIP_2PI[idx]) >>> (64 - shift);
            shpiA = ((org.apache.commons.math4.util.FastMath.RECIP_2PI[idx]) << shift) | ((org.apache.commons.math4.util.FastMath.RECIP_2PI[(idx + 1)]) >>> (64 - shift));
            shpiB = ((org.apache.commons.math4.util.FastMath.RECIP_2PI[(idx + 1)]) << shift) | ((org.apache.commons.math4.util.FastMath.RECIP_2PI[(idx + 2)]) >>> (64 - shift));
        }else {
            shpi0 = (idx == 0) ? 0 : org.apache.commons.math4.util.FastMath.RECIP_2PI[(idx - 1)];
            shpiA = org.apache.commons.math4.util.FastMath.RECIP_2PI[idx];
            shpiB = org.apache.commons.math4.util.FastMath.RECIP_2PI[(idx + 1)];
        }
        long a = inbits >>> 32;
        long b = inbits & 4294967295L;
        long c = shpiA >>> 32;
        long d = shpiA & 4294967295L;
        long ac = a * c;
        long bd = b * d;
        long bc = b * c;
        long ad = a * d;
        long prodB = bd + (ad << 32);
        long prodA = ac + (ad >>> 32);
        boolean bita = (bd & -9223372036854775808L) != 0;
        boolean bitb = (ad & 2147483648L) != 0;
        boolean bitsum = (prodB & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prodA++;
        }
        bita = (prodB & -9223372036854775808L) != 0;
        bitb = (bc & 2147483648L) != 0;
        prodB += bc << 32;
        prodA += bc >>> 32;
        bitsum = (prodB & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prodA++;
        }
        c = shpiB >>> 32;
        d = shpiB & 4294967295L;
        ac = a * c;
        bc = b * c;
        ad = a * d;
        ac += (bc + ad) >>> 32;
        bita = (prodB & -9223372036854775808L) != 0;
        bitb = (ac & -9223372036854775808L) != 0;
        prodB += ac;
        bitsum = (prodB & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prodA++;
        }
        c = shpi0 >>> 32;
        d = shpi0 & 4294967295L;
        bd = b * d;
        bc = b * c;
        ad = a * d;
        prodA += bd + ((bc + ad) << 32);
        int intPart = ((int) (prodA >>> 62));
        prodA <<= 2;
        prodA |= prodB >>> 62;
        prodB <<= 2;
        a = prodA >>> 32;
        b = prodA & 4294967295L;
        c = (org.apache.commons.math4.util.FastMath.PI_O_4_BITS[0]) >>> 32;
        d = (org.apache.commons.math4.util.FastMath.PI_O_4_BITS[0]) & 4294967295L;
        ac = a * c;
        bd = b * d;
        bc = b * c;
        ad = a * d;
        long prod2B = bd + (ad << 32);
        long prod2A = ac + (ad >>> 32);
        bita = (bd & -9223372036854775808L) != 0;
        bitb = (ad & 2147483648L) != 0;
        bitsum = (prod2B & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prod2A++;
        }
        bita = (prod2B & -9223372036854775808L) != 0;
        bitb = (bc & 2147483648L) != 0;
        prod2B += bc << 32;
        prod2A += bc >>> 32;
        bitsum = (prod2B & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prod2A++;
        }
        c = (org.apache.commons.math4.util.FastMath.PI_O_4_BITS[1]) >>> 32;
        d = (org.apache.commons.math4.util.FastMath.PI_O_4_BITS[1]) & 4294967295L;
        ac = a * c;
        bc = b * c;
        ad = a * d;
        ac += (bc + ad) >>> 32;
        bita = (prod2B & -9223372036854775808L) != 0;
        bitb = (ac & -9223372036854775808L) != 0;
        prod2B += ac;
        bitsum = (prod2B & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prod2A++;
        }
        a = prodB >>> 32;
        b = prodB & 4294967295L;
        c = (org.apache.commons.math4.util.FastMath.PI_O_4_BITS[0]) >>> 32;
        d = (org.apache.commons.math4.util.FastMath.PI_O_4_BITS[0]) & 4294967295L;
        ac = a * c;
        bc = b * c;
        ad = a * d;
        ac += (bc + ad) >>> 32;
        bita = (prod2B & -9223372036854775808L) != 0;
        bitb = (ac & -9223372036854775808L) != 0;
        prod2B += ac;
        bitsum = (prod2B & -9223372036854775808L) != 0;
        if ((bita && bitb) || ((bita || bitb) && (!bitsum))) {
            prod2A++;
        }
        double tmpA = (prod2A >>> 12) / (org.apache.commons.math4.util.FastMath.TWO_POWER_52);
        double tmpB = ((((prod2A & 4095L) << 40) + (prod2B >>> 24)) / (org.apache.commons.math4.util.FastMath.TWO_POWER_52)) / (org.apache.commons.math4.util.FastMath.TWO_POWER_52);
        double sumA = tmpA + tmpB;
        double sumB = -((sumA - tmpA) - tmpB);
        result[0] = intPart;
        result[1] = sumA * 2.0;
        result[2] = sumB * 2.0;
    }

    public static double sin(double x) {
        boolean negative = false;
        int quadrant = 0;
        double xa;
        double xb = 0.0;
        xa = x;
        if (x < 0) {
            negative = true;
            xa = -xa;
        }
        if (xa == 0.0) {
            long bits = java.lang.Double.doubleToRawLongBits(x);
            if (bits < 0) {
                return -0.0;
            }
            return 0.0;
        }
        if ((xa != xa) || (xa == (java.lang.Double.POSITIVE_INFINITY))) {
            return java.lang.Double.NaN;
        }
        if (xa > 3294198.0) {
            double[] reduceResults = new double[3];
            org.apache.commons.math4.util.FastMath.reducePayneHanek(xa, reduceResults);
            quadrant = ((int) (reduceResults[0])) & 3;
            xa = reduceResults[1];
            xb = reduceResults[2];
        }else
            if (xa > 1.5707963267948966) {
                final org.apache.commons.math4.util.FastMath.CodyWaite cw = new org.apache.commons.math4.util.FastMath.CodyWaite(xa);
                quadrant = (cw.getK()) & 3;
                xa = cw.getRemA();
                xb = cw.getRemB();
            }

        if (negative) {
            quadrant ^= 2;
        }
        switch (quadrant) {
            case 0 :
                return org.apache.commons.math4.util.FastMath.sinQ(xa, xb);
            case 1 :
                return org.apache.commons.math4.util.FastMath.cosQ(xa, xb);
            case 2 :
                return -(org.apache.commons.math4.util.FastMath.sinQ(xa, xb));
            case 3 :
                return -(org.apache.commons.math4.util.FastMath.cosQ(xa, xb));
            default :
                return java.lang.Double.NaN;
        }
    }

    public static double cos(double x) {
        int quadrant = 0;
        double xa = x;
        if (x < 0) {
            xa = -xa;
        }
        if ((xa != xa) || (xa == (java.lang.Double.POSITIVE_INFINITY))) {
            return java.lang.Double.NaN;
        }
        double xb = 0;
        if (xa > 3294198.0) {
            double[] reduceResults = new double[3];
            org.apache.commons.math4.util.FastMath.reducePayneHanek(xa, reduceResults);
            quadrant = ((int) (reduceResults[0])) & 3;
            xa = reduceResults[1];
            xb = reduceResults[2];
        }else
            if (xa > 1.5707963267948966) {
                final org.apache.commons.math4.util.FastMath.CodyWaite cw = new org.apache.commons.math4.util.FastMath.CodyWaite(xa);
                quadrant = (cw.getK()) & 3;
                xa = cw.getRemA();
                xb = cw.getRemB();
            }

        switch (quadrant) {
            case 0 :
                return org.apache.commons.math4.util.FastMath.cosQ(xa, xb);
            case 1 :
                return -(org.apache.commons.math4.util.FastMath.sinQ(xa, xb));
            case 2 :
                return -(org.apache.commons.math4.util.FastMath.cosQ(xa, xb));
            case 3 :
                return org.apache.commons.math4.util.FastMath.sinQ(xa, xb);
            default :
                return java.lang.Double.NaN;
        }
    }

    public static double tan(double x) {
        boolean negative = false;
        int quadrant = 0;
        double xa = x;
        if (x < 0) {
            negative = true;
            xa = -xa;
        }
        if (xa == 0.0) {
            long bits = java.lang.Double.doubleToRawLongBits(x);
            if (bits < 0) {
                return -0.0;
            }
            return 0.0;
        }
        if ((xa != xa) || (xa == (java.lang.Double.POSITIVE_INFINITY))) {
            return java.lang.Double.NaN;
        }
        double xb = 0;
        if (xa > 3294198.0) {
            double[] reduceResults = new double[3];
            org.apache.commons.math4.util.FastMath.reducePayneHanek(xa, reduceResults);
            quadrant = ((int) (reduceResults[0])) & 3;
            xa = reduceResults[1];
            xb = reduceResults[2];
        }else
            if (xa > 1.5707963267948966) {
                final org.apache.commons.math4.util.FastMath.CodyWaite cw = new org.apache.commons.math4.util.FastMath.CodyWaite(xa);
                quadrant = (cw.getK()) & 3;
                xa = cw.getRemA();
                xb = cw.getRemB();
            }

        if (xa > 1.5) {
            final double pi2a = 1.5707963267948966;
            final double pi2b = 6.123233995736766E-17;
            final double a = pi2a - xa;
            double b = -((a - pi2a) + xa);
            b += pi2b - xb;
            xa = a + b;
            xb = -((xa - a) - b);
            quadrant ^= 1;
            negative ^= true;
        }
        double result;
        if ((quadrant & 1) == 0) {
            result = org.apache.commons.math4.util.FastMath.tanQ(xa, xb, false);
        }else {
            result = -(org.apache.commons.math4.util.FastMath.tanQ(xa, xb, true));
        }
        if (negative) {
            result = -result;
        }
        return result;
    }

    public static double atan(double x) {
        return org.apache.commons.math4.util.FastMath.atan(x, 0.0, false);
    }

    private static double atan(double xa, double xb, boolean leftPlane) {
        if (xa == 0.0) {
            return leftPlane ? org.apache.commons.math4.util.FastMath.copySign(java.lang.Math.PI, xa) : xa;
        }
        final boolean negate;
        if (xa < 0) {
            xa = -xa;
            xb = -xb;
            negate = true;
        }else {
            negate = false;
        }
        if (xa > 1.633123935319537E16) {
            return negate ^ leftPlane ? (-(java.lang.Math.PI)) * (org.apache.commons.math4.util.FastMath.F_1_2) : (java.lang.Math.PI) * (org.apache.commons.math4.util.FastMath.F_1_2);
        }
        final int idx;
        if (xa < 1) {
            idx = ((int) ((((((-1.7168146928204135) * xa) * xa) + 8.0) * xa) + 0.5));
        }else {
            final double oneOverXa = 1 / xa;
            idx = ((int) ((-(((((-1.7168146928204135) * oneOverXa) * oneOverXa) + 8.0) * oneOverXa)) + 13.07));
        }
        final double ttA = org.apache.commons.math4.util.FastMath.TANGENT_TABLE_A[idx];
        final double ttB = org.apache.commons.math4.util.FastMath.TANGENT_TABLE_B[idx];
        double epsA = xa - ttA;
        double epsB = -((epsA - xa) + ttA);
        epsB += xb - ttB;
        double temp = epsA + epsB;
        epsB = -((temp - epsA) - epsB);
        epsA = temp;
        temp = xa * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double ya = (xa + temp) - temp;
        double yb = (xb + xa) - ya;
        xa = ya;
        xb += yb;
        if (idx == 0) {
            final double denom = 1.0 / (1.0 + ((xa + xb) * (ttA + ttB)));
            ya = epsA * denom;
            yb = epsB * denom;
        }else {
            double temp2 = xa * ttA;
            double za = 1.0 + temp2;
            double zb = -((za - 1.0) - temp2);
            temp2 = (xb * ttA) + (xa * ttB);
            temp = za + temp2;
            zb += -((temp - za) - temp2);
            za = temp;
            zb += xb * ttB;
            ya = epsA / za;
            temp = ya * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            final double yaa = (ya + temp) - temp;
            final double yab = ya - yaa;
            temp = za * (org.apache.commons.math4.util.FastMath.HEX_40000000);
            final double zaa = (za + temp) - temp;
            final double zab = za - zaa;
            yb = ((((epsA - (yaa * zaa)) - (yaa * zab)) - (yab * zaa)) - (yab * zab)) / za;
            yb += (((-epsA) * zb) / za) / za;
            yb += epsB / za;
        }
        epsA = ya;
        epsB = yb;
        final double epsA2 = epsA * epsA;
        yb = 0.07490822288864472;
        yb = (yb * epsA2) - 0.09088450866185192;
        yb = (yb * epsA2) + 0.11111095942313305;
        yb = (yb * epsA2) - 0.1428571423679182;
        yb = (yb * epsA2) + 0.19999999999923582;
        yb = (yb * epsA2) - 0.33333333333333287;
        yb = (yb * epsA2) * epsA;
        ya = epsA;
        temp = ya + yb;
        yb = -((temp - ya) - yb);
        ya = temp;
        yb += epsB / (1.0 + (epsA * epsA));
        final double eighths = org.apache.commons.math4.util.FastMath.EIGHTHS[idx];
        double za = eighths + ya;
        double zb = -((za - eighths) - ya);
        temp = za + yb;
        zb += -((temp - za) - yb);
        za = temp;
        double result = za + zb;
        if (leftPlane) {
            final double resultb = -((result - za) - zb);
            final double pia = 1.5707963267948966 * 2;
            final double pib = 6.123233995736766E-17 * 2;
            za = pia - result;
            zb = -((za - pia) + result);
            zb += pib - resultb;
            result = za + zb;
        }
        if (negate ^ leftPlane) {
            result = -result;
        }
        return result;
    }

    public static double atan2(double y, double x) {
        if ((x != x) || (y != y)) {
            return java.lang.Double.NaN;
        }
        if (y == 0) {
            final double result = x * y;
            final double invx = 1.0 / x;
            final double invy = 1.0 / y;
            if (invx == 0) {
                if (x > 0) {
                    return y;
                }else {
                    return org.apache.commons.math4.util.FastMath.copySign(java.lang.Math.PI, y);
                }
            }
            if ((x < 0) || (invx < 0)) {
                if ((y < 0) || (invy < 0)) {
                    return -(java.lang.Math.PI);
                }else {
                    return java.lang.Math.PI;
                }
            }else {
                return result;
            }
        }
        if (y == (java.lang.Double.POSITIVE_INFINITY)) {
            if (x == (java.lang.Double.POSITIVE_INFINITY)) {
                return (java.lang.Math.PI) * (org.apache.commons.math4.util.FastMath.F_1_4);
            }
            if (x == (java.lang.Double.NEGATIVE_INFINITY)) {
                return (java.lang.Math.PI) * (org.apache.commons.math4.util.FastMath.F_3_4);
            }
            return (java.lang.Math.PI) * (org.apache.commons.math4.util.FastMath.F_1_2);
        }
        if (y == (java.lang.Double.NEGATIVE_INFINITY)) {
            if (x == (java.lang.Double.POSITIVE_INFINITY)) {
                return (-(java.lang.Math.PI)) * (org.apache.commons.math4.util.FastMath.F_1_4);
            }
            if (x == (java.lang.Double.NEGATIVE_INFINITY)) {
                return (-(java.lang.Math.PI)) * (org.apache.commons.math4.util.FastMath.F_3_4);
            }
            return (-(java.lang.Math.PI)) * (org.apache.commons.math4.util.FastMath.F_1_2);
        }
        if (x == (java.lang.Double.POSITIVE_INFINITY)) {
            if ((y > 0) || ((1 / y) > 0)) {
                return 0.0;
            }
            if ((y < 0) || ((1 / y) < 0)) {
                return -0.0;
            }
        }
        if (x == (java.lang.Double.NEGATIVE_INFINITY)) {
            if ((y > 0.0) || ((1 / y) > 0.0)) {
                return java.lang.Math.PI;
            }
            if ((y < 0) || ((1 / y) < 0)) {
                return -(java.lang.Math.PI);
            }
        }
        if (x == 0) {
            if ((y > 0) || ((1 / y) > 0)) {
                return (java.lang.Math.PI) * (org.apache.commons.math4.util.FastMath.F_1_2);
            }
            if ((y < 0) || ((1 / y) < 0)) {
                return (-(java.lang.Math.PI)) * (org.apache.commons.math4.util.FastMath.F_1_2);
            }
        }
        final double r = y / x;
        if (java.lang.Double.isInfinite(r)) {
            return org.apache.commons.math4.util.FastMath.atan(r, 0, (x < 0));
        }
        double ra = org.apache.commons.math4.util.FastMath.doubleHighPart(r);
        double rb = r - ra;
        final double xa = org.apache.commons.math4.util.FastMath.doubleHighPart(x);
        final double xb = x - xa;
        rb += ((((y - (ra * xa)) - (ra * xb)) - (rb * xa)) - (rb * xb)) / x;
        final double temp = ra + rb;
        rb = -((temp - ra) - rb);
        ra = temp;
        if (ra == 0) {
            ra = org.apache.commons.math4.util.FastMath.copySign(0.0, y);
        }
        final double result = org.apache.commons.math4.util.FastMath.atan(ra, rb, (x < 0));
        return result;
    }

    public static double asin(double x) {
        if (x != x) {
            return java.lang.Double.NaN;
        }
        if ((x > 1.0) || (x < (-1.0))) {
            return java.lang.Double.NaN;
        }
        if (x == 1.0) {
            return (java.lang.Math.PI) / 2.0;
        }
        if (x == (-1.0)) {
            return (-(java.lang.Math.PI)) / 2.0;
        }
        if (x == 0.0) {
            return x;
        }
        double temp = x * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        final double xa = (x + temp) - temp;
        final double xb = x - xa;
        double ya = xa * xa;
        double yb = ((xa * xb) * 2.0) + (xb * xb);
        ya = -ya;
        yb = -yb;
        double za = 1.0 + ya;
        double zb = -((za - 1.0) - ya);
        temp = za + yb;
        zb += -((temp - za) - yb);
        za = temp;
        double y;
        y = org.apache.commons.math4.util.FastMath.sqrt(za);
        temp = y * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        ya = (y + temp) - temp;
        yb = y - ya;
        yb += (((za - (ya * ya)) - ((2 * ya) * yb)) - (yb * yb)) / (2.0 * y);
        double dx = zb / (2.0 * y);
        double r = x / y;
        temp = r * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double ra = (r + temp) - temp;
        double rb = r - ra;
        rb += ((((x - (ra * ya)) - (ra * yb)) - (rb * ya)) - (rb * yb)) / y;
        rb += (((-x) * dx) / y) / y;
        temp = ra + rb;
        rb = -((temp - ra) - rb);
        ra = temp;
        return org.apache.commons.math4.util.FastMath.atan(ra, rb, false);
    }

    public static double acos(double x) {
        if (x != x) {
            return java.lang.Double.NaN;
        }
        if ((x > 1.0) || (x < (-1.0))) {
            return java.lang.Double.NaN;
        }
        if (x == (-1.0)) {
            return java.lang.Math.PI;
        }
        if (x == 1.0) {
            return 0.0;
        }
        if (x == 0) {
            return (java.lang.Math.PI) / 2.0;
        }
        double temp = x * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        final double xa = (x + temp) - temp;
        final double xb = x - xa;
        double ya = xa * xa;
        double yb = ((xa * xb) * 2.0) + (xb * xb);
        ya = -ya;
        yb = -yb;
        double za = 1.0 + ya;
        double zb = -((za - 1.0) - ya);
        temp = za + yb;
        zb += -((temp - za) - yb);
        za = temp;
        double y = org.apache.commons.math4.util.FastMath.sqrt(za);
        temp = y * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        ya = (y + temp) - temp;
        yb = y - ya;
        yb += (((za - (ya * ya)) - ((2 * ya) * yb)) - (yb * yb)) / (2.0 * y);
        yb += zb / (2.0 * y);
        y = ya + yb;
        yb = -((y - ya) - yb);
        double r = y / x;
        if (java.lang.Double.isInfinite(r)) {
            return (java.lang.Math.PI) / 2;
        }
        double ra = org.apache.commons.math4.util.FastMath.doubleHighPart(r);
        double rb = r - ra;
        rb += ((((y - (ra * xa)) - (ra * xb)) - (rb * xa)) - (rb * xb)) / x;
        rb += yb / x;
        temp = ra + rb;
        rb = -((temp - ra) - rb);
        ra = temp;
        return org.apache.commons.math4.util.FastMath.atan(ra, rb, (x < 0));
    }

    public static double cbrt(double x) {
        long inbits = java.lang.Double.doubleToRawLongBits(x);
        int exponent = ((int) ((inbits >> 52) & 2047)) - 1023;
        boolean subnormal = false;
        if (exponent == (-1023)) {
            if (x == 0) {
                return x;
            }
            subnormal = true;
            x *= 1.8014398509481984E16;
            inbits = java.lang.Double.doubleToRawLongBits(x);
            exponent = ((int) ((inbits >> 52) & 2047)) - 1023;
        }
        if (exponent == 1024) {
            return x;
        }
        int exp3 = exponent / 3;
        double p2 = java.lang.Double.longBitsToDouble(((inbits & -9223372036854775808L) | (((long) ((exp3 + 1023) & 2047)) << 52)));
        final double mant = java.lang.Double.longBitsToDouble(((inbits & 4503599627370495L) | 4607182418800017408L));
        double est = -0.010714690733195933;
        est = (est * mant) + 0.0875862700108075;
        est = (est * mant) + (-0.3058015757857271);
        est = (est * mant) + 0.7249995199969751;
        est = (est * mant) + 0.5039018405998233;
        est *= org.apache.commons.math4.util.FastMath.CBRTTWO[((exponent % 3) + 2)];
        final double xs = x / ((p2 * p2) * p2);
        est += (xs - ((est * est) * est)) / ((3 * est) * est);
        est += (xs - ((est * est) * est)) / ((3 * est) * est);
        double temp = est * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double ya = (est + temp) - temp;
        double yb = est - ya;
        double za = ya * ya;
        double zb = ((ya * yb) * 2.0) + (yb * yb);
        temp = za * (org.apache.commons.math4.util.FastMath.HEX_40000000);
        double temp2 = (za + temp) - temp;
        zb += za - temp2;
        za = temp2;
        zb = ((za * yb) + (ya * zb)) + (zb * yb);
        za *= ya;
        double na = xs - za;
        double nb = -((na - xs) + za);
        nb -= zb;
        est += (na + nb) / ((3 * est) * est);
        est *= p2;
        if (subnormal) {
            est *= 3.814697265625E-6;
        }
        return est;
    }

    public static double toRadians(double x) {
        if ((java.lang.Double.isInfinite(x)) || (x == 0.0)) {
            return x;
        }
        final double facta = 0.01745329052209854;
        final double factb = 1.997844754509471E-9;
        double xa = org.apache.commons.math4.util.FastMath.doubleHighPart(x);
        double xb = x - xa;
        double result = (((xb * factb) + (xb * facta)) + (xa * factb)) + (xa * facta);
        if (result == 0) {
            result *= x;
        }
        return result;
    }

    public static double toDegrees(double x) {
        if ((java.lang.Double.isInfinite(x)) || (x == 0.0)) {
            return x;
        }
        final double facta = 57.2957763671875;
        final double factb = 3.145894820876798E-6;
        double xa = org.apache.commons.math4.util.FastMath.doubleHighPart(x);
        double xb = x - xa;
        return (((xb * factb) + (xb * facta)) + (xa * factb)) + (xa * facta);
    }

    public static int abs(final int x) {
        final int i = x >>> 31;
        return (x ^ ((~i) + 1)) + i;
    }

    public static long abs(final long x) {
        final long l = x >>> 63;
        return (x ^ ((~l) + 1)) + l;
    }

    public static float abs(final float x) {
        return java.lang.Float.intBitsToFloat(((org.apache.commons.math4.util.FastMath.MASK_NON_SIGN_INT) & (java.lang.Float.floatToRawIntBits(x))));
    }

    public static double abs(double x) {
        return java.lang.Double.longBitsToDouble(((org.apache.commons.math4.util.FastMath.MASK_NON_SIGN_LONG) & (java.lang.Double.doubleToRawLongBits(x))));
    }

    public static double ulp(double x) {
        if (java.lang.Double.isInfinite(x)) {
            return java.lang.Double.POSITIVE_INFINITY;
        }
        return org.apache.commons.math4.util.FastMath.abs((x - (java.lang.Double.longBitsToDouble(((java.lang.Double.doubleToRawLongBits(x)) ^ 1)))));
    }

    public static float ulp(float x) {
        if (java.lang.Float.isInfinite(x)) {
            return java.lang.Float.POSITIVE_INFINITY;
        }
        return org.apache.commons.math4.util.FastMath.abs((x - (java.lang.Float.intBitsToFloat(((java.lang.Float.floatToIntBits(x)) ^ 1)))));
    }

    public static double scalb(final double d, final int n) {
        if ((n > (-1023)) && (n < 1024)) {
            return d * (java.lang.Double.longBitsToDouble((((long) (n + 1023)) << 52)));
        }
        if (((java.lang.Double.isNaN(d)) || (java.lang.Double.isInfinite(d))) || (d == 0)) {
            return d;
        }
        if (n < (-2098)) {
            return d > 0 ? 0.0 : -0.0;
        }
        if (n > 2097) {
            return d > 0 ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;
        }
        final long bits = java.lang.Double.doubleToRawLongBits(d);
        final long sign = bits & -9223372036854775808L;
        int exponent = ((int) (bits >>> 52)) & 2047;
        long mantissa = bits & 4503599627370495L;
        int scaledExponent = exponent + n;
        if (n < 0) {
            if (scaledExponent > 0) {
                return java.lang.Double.longBitsToDouble(((sign | (((long) (scaledExponent)) << 52)) | mantissa));
            }else
                if (scaledExponent > (-53)) {
                    mantissa |= 1L << 52;
                    final long mostSignificantLostBit = mantissa & (1L << (-scaledExponent));
                    mantissa >>>= 1 - scaledExponent;
                    if (mostSignificantLostBit != 0) {
                        mantissa++;
                    }
                    return java.lang.Double.longBitsToDouble((sign | mantissa));
                }else {
                    return sign == 0L ? 0.0 : -0.0;
                }

        }else {
            if (exponent == 0) {
                while ((mantissa >>> 52) != 1) {
                    mantissa <<= 1;
                    --scaledExponent;
                } 
                ++scaledExponent;
                mantissa &= 4503599627370495L;
                if (scaledExponent < 2047) {
                    return java.lang.Double.longBitsToDouble(((sign | (((long) (scaledExponent)) << 52)) | mantissa));
                }else {
                    return sign == 0L ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;
                }
            }else
                if (scaledExponent < 2047) {
                    return java.lang.Double.longBitsToDouble(((sign | (((long) (scaledExponent)) << 52)) | mantissa));
                }else {
                    return sign == 0L ? java.lang.Double.POSITIVE_INFINITY : java.lang.Double.NEGATIVE_INFINITY;
                }

        }
    }

    public static float scalb(final float f, final int n) {
        if ((n > (-127)) && (n < 128)) {
            return f * (java.lang.Float.intBitsToFloat(((n + 127) << 23)));
        }
        if (((java.lang.Float.isNaN(f)) || (java.lang.Float.isInfinite(f))) || (f == 0.0F)) {
            return f;
        }
        if (n < (-277)) {
            return f > 0 ? 0.0F : -0.0F;
        }
        if (n > 276) {
            return f > 0 ? java.lang.Float.POSITIVE_INFINITY : java.lang.Float.NEGATIVE_INFINITY;
        }
        final int bits = java.lang.Float.floatToIntBits(f);
        final int sign = bits & -2147483648;
        int exponent = (bits >>> 23) & 255;
        int mantissa = bits & 8388607;
        int scaledExponent = exponent + n;
        if (n < 0) {
            if (scaledExponent > 0) {
                return java.lang.Float.intBitsToFloat(((sign | (scaledExponent << 23)) | mantissa));
            }else
                if (scaledExponent > (-24)) {
                    mantissa |= 1 << 23;
                    final int mostSignificantLostBit = mantissa & (1 << (-scaledExponent));
                    mantissa >>>= 1 - scaledExponent;
                    if (mostSignificantLostBit != 0) {
                        mantissa++;
                    }
                    return java.lang.Float.intBitsToFloat((sign | mantissa));
                }else {
                    return sign == 0 ? 0.0F : -0.0F;
                }

        }else {
            if (exponent == 0) {
                while ((mantissa >>> 23) != 1) {
                    mantissa <<= 1;
                    --scaledExponent;
                } 
                ++scaledExponent;
                mantissa &= 8388607;
                if (scaledExponent < 255) {
                    return java.lang.Float.intBitsToFloat(((sign | (scaledExponent << 23)) | mantissa));
                }else {
                    return sign == 0 ? java.lang.Float.POSITIVE_INFINITY : java.lang.Float.NEGATIVE_INFINITY;
                }
            }else
                if (scaledExponent < 255) {
                    return java.lang.Float.intBitsToFloat(((sign | (scaledExponent << 23)) | mantissa));
                }else {
                    return sign == 0 ? java.lang.Float.POSITIVE_INFINITY : java.lang.Float.NEGATIVE_INFINITY;
                }

        }
    }

    public static double nextAfter(double d, double direction) {
        if ((java.lang.Double.isNaN(d)) || (java.lang.Double.isNaN(direction))) {
            return java.lang.Double.NaN;
        }else
            if (d == direction) {
                return direction;
            }else
                if (java.lang.Double.isInfinite(d)) {
                    return d < 0 ? -(java.lang.Double.MAX_VALUE) : java.lang.Double.MAX_VALUE;
                }else
                    if (d == 0) {
                        return direction < 0 ? -(java.lang.Double.MIN_VALUE) : java.lang.Double.MIN_VALUE;
                    }



        final long bits = java.lang.Double.doubleToRawLongBits(d);
        final long sign = bits & -9223372036854775808L;
        if ((direction < d) ^ (sign == 0L)) {
            return java.lang.Double.longBitsToDouble((sign | ((bits & 9223372036854775807L) + 1)));
        }else {
            return java.lang.Double.longBitsToDouble((sign | ((bits & 9223372036854775807L) - 1)));
        }
    }

    public static float nextAfter(final float f, final double direction) {
        if ((java.lang.Double.isNaN(f)) || (java.lang.Double.isNaN(direction))) {
            return java.lang.Float.NaN;
        }else
            if (f == direction) {
                return ((float) (direction));
            }else
                if (java.lang.Float.isInfinite(f)) {
                    return f < 0.0F ? -(java.lang.Float.MAX_VALUE) : java.lang.Float.MAX_VALUE;
                }else
                    if (f == 0.0F) {
                        return direction < 0 ? -(java.lang.Float.MIN_VALUE) : java.lang.Float.MIN_VALUE;
                    }



        final int bits = java.lang.Float.floatToIntBits(f);
        final int sign = bits & -2147483648;
        if ((direction < f) ^ (sign == 0)) {
            return java.lang.Float.intBitsToFloat((sign | ((bits & 2147483647) + 1)));
        }else {
            return java.lang.Float.intBitsToFloat((sign | ((bits & 2147483647) - 1)));
        }
    }

    public static double floor(double x) {
        long y;
        if (x != x) {
            return x;
        }
        if ((x >= (org.apache.commons.math4.util.FastMath.TWO_POWER_52)) || (x <= (-(org.apache.commons.math4.util.FastMath.TWO_POWER_52)))) {
            return x;
        }
        y = ((long) (x));
        if ((x < 0) && (y != x)) {
            y--;
        }
        if (y == 0) {
            return x * y;
        }
        return y;
    }

    public static double ceil(double x) {
        double y;
        if (x != x) {
            return x;
        }
        y = org.apache.commons.math4.util.FastMath.floor(x);
        if (y == x) {
            return y;
        }
        y += 1.0;
        if (y == 0) {
            return x * y;
        }
        return y;
    }

    public static double rint(double x) {
        double y = org.apache.commons.math4.util.FastMath.floor(x);
        double d = x - y;
        if (d > 0.5) {
            if (y == (-1.0)) {
                return -0.0;
            }
            return y + 1.0;
        }
        if (d < 0.5) {
            return y;
        }
        long z = ((long) (y));
        return (z & 1) == 0 ? y : y + 1.0;
    }

    public static long round(double x) {
        return ((long) (org.apache.commons.math4.util.FastMath.floor((x + 0.5))));
    }

    public static int round(final float x) {
        return ((int) (org.apache.commons.math4.util.FastMath.floor((x + 0.5F))));
    }

    public static int min(final int a, final int b) {
        return a <= b ? a : b;
    }

    public static long min(final long a, final long b) {
        return a <= b ? a : b;
    }

    public static float min(final float a, final float b) {
        if (a > b) {
            return b;
        }
        if (a < b) {
            return a;
        }
        if (a != b) {
            return java.lang.Float.NaN;
        }
        int bits = java.lang.Float.floatToRawIntBits(a);
        if (bits == -2147483648) {
            return a;
        }
        return b;
    }

    public static double min(final double a, final double b) {
        if (a > b) {
            return b;
        }
        if (a < b) {
            return a;
        }
        if (a != b) {
            return java.lang.Double.NaN;
        }
        long bits = java.lang.Double.doubleToRawLongBits(a);
        if (bits == -9223372036854775808L) {
            return a;
        }
        return b;
    }

    public static int max(final int a, final int b) {
        return a <= b ? b : a;
    }

    public static long max(final long a, final long b) {
        return a <= b ? b : a;
    }

    public static float max(final float a, final float b) {
        if (a > b) {
            return a;
        }
        if (a < b) {
            return b;
        }
        if (a != b) {
            return java.lang.Float.NaN;
        }
        int bits = java.lang.Float.floatToRawIntBits(a);
        if (bits == -2147483648) {
            return b;
        }
        return a;
    }

    public static double max(final double a, final double b) {
        if (a > b) {
            return a;
        }
        if (a < b) {
            return b;
        }
        if (a != b) {
            return java.lang.Double.NaN;
        }
        long bits = java.lang.Double.doubleToRawLongBits(a);
        if (bits == -9223372036854775808L) {
            return b;
        }
        return a;
    }

    public static double hypot(final double x, final double y) {
        if ((java.lang.Double.isInfinite(x)) || (java.lang.Double.isInfinite(y))) {
            return java.lang.Double.POSITIVE_INFINITY;
        }else
            if ((java.lang.Double.isNaN(x)) || (java.lang.Double.isNaN(y))) {
                return java.lang.Double.NaN;
            }else {
                final int expX = org.apache.commons.math4.util.FastMath.getExponent(x);
                final int expY = org.apache.commons.math4.util.FastMath.getExponent(y);
                if (expX > (expY + 27)) {
                    return org.apache.commons.math4.util.FastMath.abs(x);
                }else
                    if (expY > (expX + 27)) {
                        return org.apache.commons.math4.util.FastMath.abs(y);
                    }else {
                        final int middleExp = (expX + expY) / 2;
                        final double scaledX = org.apache.commons.math4.util.FastMath.scalb(x, (-middleExp));
                        final double scaledY = org.apache.commons.math4.util.FastMath.scalb(y, (-middleExp));
                        final double scaledH = org.apache.commons.math4.util.FastMath.sqrt(((scaledX * scaledX) + (scaledY * scaledY)));
                        return org.apache.commons.math4.util.FastMath.scalb(scaledH, middleExp);
                    }

            }

    }

    public static double IEEEremainder(double dividend, double divisor) {
        return java.lang.StrictMath.IEEEremainder(dividend, divisor);
    }

    public static int toIntExact(final long n) throws org.apache.commons.math4.exception.MathArithmeticException {
        if ((n < (java.lang.Integer.MIN_VALUE)) || (n > (java.lang.Integer.MAX_VALUE))) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW);
        }
        return ((int) (n));
    }

    public static int incrementExact(final int n) throws org.apache.commons.math4.exception.MathArithmeticException {
        if (n == (java.lang.Integer.MAX_VALUE)) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_ADDITION, n, 1);
        }
        return n + 1;
    }

    public static long incrementExact(final long n) throws org.apache.commons.math4.exception.MathArithmeticException {
        if (n == (java.lang.Long.MAX_VALUE)) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_ADDITION, n, 1);
        }
        return n + 1;
    }

    public static int decrementExact(final int n) throws org.apache.commons.math4.exception.MathArithmeticException {
        if (n == (java.lang.Integer.MIN_VALUE)) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_SUBTRACTION, n, 1);
        }
        return n - 1;
    }

    public static long decrementExact(final long n) throws org.apache.commons.math4.exception.MathArithmeticException {
        if (n == (java.lang.Long.MIN_VALUE)) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_SUBTRACTION, n, 1);
        }
        return n - 1;
    }

    public static int addExact(final int a, final int b) throws org.apache.commons.math4.exception.MathArithmeticException {
        final int sum = a + b;
        if (((a ^ b) >= 0) && ((sum ^ b) < 0)) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_ADDITION, a, b);
        }
        return sum;
    }

    public static long addExact(final long a, final long b) throws org.apache.commons.math4.exception.MathArithmeticException {
        final long sum = a + b;
        if (((a ^ b) >= 0) && ((sum ^ b) < 0)) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_ADDITION, a, b);
        }
        return sum;
    }

    public static int subtractExact(final int a, final int b) {
        final int sub = a - b;
        if (((a ^ b) < 0) && ((sub ^ b) >= 0)) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_SUBTRACTION, a, b);
        }
        return sub;
    }

    public static long subtractExact(final long a, final long b) {
        final long sub = a - b;
        if (((a ^ b) < 0) && ((sub ^ b) >= 0)) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_SUBTRACTION, a, b);
        }
        return sub;
    }

    public static int multiplyExact(final int a, final int b) {
        if ((((b > 0) && ((a > ((java.lang.Integer.MAX_VALUE) / b)) || (a < ((java.lang.Integer.MIN_VALUE) / b)))) || ((b < (-1)) && ((a > ((java.lang.Integer.MIN_VALUE) / b)) || (a < ((java.lang.Integer.MAX_VALUE) / b))))) || ((b == (-1)) && (a == (java.lang.Integer.MIN_VALUE)))) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_MULTIPLICATION, a, b);
        }
        return a * b;
    }

    public static long multiplyExact(final long a, final long b) {
        if ((((b > 0L) && ((a > ((java.lang.Long.MAX_VALUE) / b)) || (a < ((java.lang.Long.MIN_VALUE) / b)))) || ((b < (-1L)) && ((a > ((java.lang.Long.MIN_VALUE) / b)) || (a < ((java.lang.Long.MAX_VALUE) / b))))) || ((b == (-1L)) && (a == (java.lang.Long.MIN_VALUE)))) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.OVERFLOW_IN_MULTIPLICATION, a, b);
        }
        return a * b;
    }

    public static int floorDiv(final int a, final int b) throws org.apache.commons.math4.exception.MathArithmeticException {
        if (b == 0) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.ZERO_DENOMINATOR);
        }
        final int m = a % b;
        if (((a ^ b) >= 0) || (m == 0)) {
            return a / b;
        }else {
            return (a / b) - 1;
        }
    }

    public static long floorDiv(final long a, final long b) throws org.apache.commons.math4.exception.MathArithmeticException {
        if (b == 0L) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.ZERO_DENOMINATOR);
        }
        final long m = a % b;
        if (((a ^ b) >= 0L) || (m == 0L)) {
            return a / b;
        }else {
            return (a / b) - 1L;
        }
    }

    public static int floorMod(final int a, final int b) throws org.apache.commons.math4.exception.MathArithmeticException {
        if (b == 0) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.ZERO_DENOMINATOR);
        }
        final int m = a % b;
        if (((a ^ b) >= 0) || (m == 0)) {
            return m;
        }else {
            return b + m;
        }
    }

    public static long floorMod(final long a, final long b) {
        if (b == 0L) {
            throw new org.apache.commons.math4.exception.MathArithmeticException(org.apache.commons.math4.exception.util.LocalizedFormats.ZERO_DENOMINATOR);
        }
        final long m = a % b;
        if (((a ^ b) >= 0L) || (m == 0L)) {
            return m;
        }else {
            return b + m;
        }
    }

    public static double copySign(double magnitude, double sign) {
        final long m = java.lang.Double.doubleToRawLongBits(magnitude);
        final long s = java.lang.Double.doubleToRawLongBits(sign);
        if ((m ^ s) >= 0) {
            return magnitude;
        }
        return -magnitude;
    }

    public static float copySign(float magnitude, float sign) {
        final int m = java.lang.Float.floatToRawIntBits(magnitude);
        final int s = java.lang.Float.floatToRawIntBits(sign);
        if ((m ^ s) >= 0) {
            return magnitude;
        }
        return -magnitude;
    }

    public static int getExponent(final double d) {
        return ((int) (((java.lang.Double.doubleToRawLongBits(d)) >>> 52) & 2047)) - 1023;
    }

    public static int getExponent(final float f) {
        return (((java.lang.Float.floatToRawIntBits(f)) >>> 23) & 255) - 127;
    }

    public static void main(java.lang.String[] a) {
        java.io.PrintStream out = java.lang.System.out;
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "EXP_INT_TABLE_A", org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_LEN, org.apache.commons.math4.util.FastMath.ExpIntTable.EXP_INT_TABLE_A);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "EXP_INT_TABLE_B", org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_LEN, org.apache.commons.math4.util.FastMath.ExpIntTable.EXP_INT_TABLE_B);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "EXP_FRAC_TABLE_A", org.apache.commons.math4.util.FastMath.EXP_FRAC_TABLE_LEN, org.apache.commons.math4.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "EXP_FRAC_TABLE_B", org.apache.commons.math4.util.FastMath.EXP_FRAC_TABLE_LEN, org.apache.commons.math4.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "LN_MANT", org.apache.commons.math4.util.FastMath.LN_MANT_LEN, org.apache.commons.math4.util.FastMath.lnMant.LN_MANT);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "SINE_TABLE_A", org.apache.commons.math4.util.FastMath.SINE_TABLE_LEN, org.apache.commons.math4.util.FastMath.SINE_TABLE_A);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "SINE_TABLE_B", org.apache.commons.math4.util.FastMath.SINE_TABLE_LEN, org.apache.commons.math4.util.FastMath.SINE_TABLE_B);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "COSINE_TABLE_A", org.apache.commons.math4.util.FastMath.SINE_TABLE_LEN, org.apache.commons.math4.util.FastMath.COSINE_TABLE_A);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "COSINE_TABLE_B", org.apache.commons.math4.util.FastMath.SINE_TABLE_LEN, org.apache.commons.math4.util.FastMath.COSINE_TABLE_B);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "TANGENT_TABLE_A", org.apache.commons.math4.util.FastMath.SINE_TABLE_LEN, org.apache.commons.math4.util.FastMath.TANGENT_TABLE_A);
        org.apache.commons.math4.util.FastMathCalc.printarray(out, "TANGENT_TABLE_B", org.apache.commons.math4.util.FastMath.SINE_TABLE_LEN, org.apache.commons.math4.util.FastMath.TANGENT_TABLE_B);
    }

    private static class ExpIntTable {
        private static final double[] EXP_INT_TABLE_A;

        private static final double[] EXP_INT_TABLE_B;

        static {
            if (org.apache.commons.math4.util.FastMath.RECOMPUTE_TABLES_AT_RUNTIME) {
                EXP_INT_TABLE_A = new double[org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_LEN];
                EXP_INT_TABLE_B = new double[org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_LEN];
                final double[] tmp = new double[2];
                final double[] recip = new double[2];
                for (int i = 0; i < (org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX); i++) {
                    org.apache.commons.math4.util.FastMathCalc.expint(i, tmp);
                    org.apache.commons.math4.util.FastMath.ExpIntTable.EXP_INT_TABLE_A[(i + (org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX))] = tmp[0];
                    org.apache.commons.math4.util.FastMath.ExpIntTable.EXP_INT_TABLE_B[(i + (org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX))] = tmp[1];
                    if (i != 0) {
                        org.apache.commons.math4.util.FastMathCalc.splitReciprocal(tmp, recip);
                        org.apache.commons.math4.util.FastMath.ExpIntTable.EXP_INT_TABLE_A[((org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX) - i)] = recip[0];
                        org.apache.commons.math4.util.FastMath.ExpIntTable.EXP_INT_TABLE_B[((org.apache.commons.math4.util.FastMath.EXP_INT_TABLE_MAX_INDEX) - i)] = recip[1];
                    }
                }
            }else {
                EXP_INT_TABLE_A = org.apache.commons.math4.util.FastMathLiteralArrays.loadExpIntA();
                EXP_INT_TABLE_B = org.apache.commons.math4.util.FastMathLiteralArrays.loadExpIntB();
            }
        }
    }

    private static class ExpFracTable {
        private static final double[] EXP_FRAC_TABLE_A;

        private static final double[] EXP_FRAC_TABLE_B;

        static {
            if (org.apache.commons.math4.util.FastMath.RECOMPUTE_TABLES_AT_RUNTIME) {
                EXP_FRAC_TABLE_A = new double[org.apache.commons.math4.util.FastMath.EXP_FRAC_TABLE_LEN];
                EXP_FRAC_TABLE_B = new double[org.apache.commons.math4.util.FastMath.EXP_FRAC_TABLE_LEN];
                final double[] tmp = new double[2];
                final double factor = 1.0 / ((org.apache.commons.math4.util.FastMath.EXP_FRAC_TABLE_LEN) - 1);
                for (int i = 0; i < (org.apache.commons.math4.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A.length); i++) {
                    org.apache.commons.math4.util.FastMathCalc.slowexp((i * factor), tmp);
                    org.apache.commons.math4.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A[i] = tmp[0];
                    org.apache.commons.math4.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B[i] = tmp[1];
                }
            }else {
                EXP_FRAC_TABLE_A = org.apache.commons.math4.util.FastMathLiteralArrays.loadExpFracA();
                EXP_FRAC_TABLE_B = org.apache.commons.math4.util.FastMathLiteralArrays.loadExpFracB();
            }
        }
    }

    private static class lnMant {
        private static final double[][] LN_MANT;

        static {
            if (org.apache.commons.math4.util.FastMath.RECOMPUTE_TABLES_AT_RUNTIME) {
                LN_MANT = new double[org.apache.commons.math4.util.FastMath.LN_MANT_LEN][];
                for (int i = 0; i < (org.apache.commons.math4.util.FastMath.lnMant.LN_MANT.length); i++) {
                    final double d = java.lang.Double.longBitsToDouble(((((long) (i)) << 42) | 4607182418800017408L));
                    org.apache.commons.math4.util.FastMath.lnMant.LN_MANT[i] = org.apache.commons.math4.util.FastMathCalc.slowLog(d);
                }
            }else {
                LN_MANT = org.apache.commons.math4.util.FastMathLiteralArrays.loadLnMant();
            }
        }
    }

    private static class CodyWaite {
        private final int finalK;

        private final double finalRemA;

        private final double finalRemB;

        CodyWaite(double xa) {
            int k = ((int) (xa * 0.6366197723675814));
            double remA;
            double remB;
            while (true) {
                double a = (-k) * 1.570796251296997;
                remA = xa + a;
                remB = -((remA - xa) - a);
                a = (-k) * 7.549789948768648E-8;
                double b = remA;
                remA = a + b;
                remB += -((remA - b) - a);
                a = (-k) * 6.123233995736766E-17;
                b = remA;
                remA = a + b;
                remB += -((remA - b) - a);
                if (remA > 0) {
                    break;
                }
                --k;
            } 
            this.finalK = k;
            this.finalRemA = remA;
            this.finalRemB = remB;
        }

        int getK() {
            return finalK;
        }

        double getRemA() {
            return finalRemA;
        }

        double getRemB() {
            return finalRemB;
        }
    }
}
09:37:46.788 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
09:37:46.789 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
09:37:46.789 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1837 which is executed by 526 tests
1033054629
09:37:46.973 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:46.996 [pool-198-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:47.800 [pool-199-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:47.801 [pool-200-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:47.801 [pool-197-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:47.802 [pool-197-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:47.802 [pool-197-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1837.
09:37:47.802 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:47.826 [pool-202-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:48.634 [pool-203-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:48.635 [pool-204-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:48.636 [pool-201-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:48.636 [pool-201-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:48.636 [pool-201-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1837.
09:37:48.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
09:37:48.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1810 which is executed by 526 tests
1033054629
09:37:48.821 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:48.846 [pool-206-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:49.650 [pool-207-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:49.651 [pool-208-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:49.651 [pool-205-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:49.651 [pool-205-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:49.651 [pool-205-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1810.
09:37:49.651 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
09:37:49.652 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1795 which is executed by 526 tests
1033054629
09:37:49.836 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:49.861 [pool-210-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.718]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:50.685 [pool-211-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.718]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.718]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:50.686 [pool-212-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:50.687 [pool-209-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.718]]
09:37:50.687 [pool-209-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:50.687 [pool-209-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1795.
09:37:50.687 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
09:37:50.687 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1793 which is executed by 526 tests
1033054629
09:37:50.872 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:50.896 [pool-214-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:51.735 [pool-215-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:51.737 [pool-216-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:51.737 [pool-213-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:51.737 [pool-213-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:51.737 [pool-213-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1793.
09:37:51.737 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
09:37:51.737 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1792 which is executed by 526 tests
1033054629
09:37:51.962 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:51.986 [pool-218-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.681]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:52.807 [pool-219-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.681]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.681]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:52.809 [pool-220-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:52.809 [pool-217-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.681]]
09:37:52.809 [pool-217-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:52.809 [pool-217-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1792.
09:37:52.809 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
09:37:52.809 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1791 which is executed by 526 tests
1033054629
09:37:52.993 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:53.016 [pool-222-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:53.847 [pool-223-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:53.848 [pool-224-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:53.849 [pool-221-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:53.849 [pool-221-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:53.849 [pool-221-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1791.
09:37:53.849 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
09:37:53.849 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1790 which is executed by 526 tests
1033054629
09:37:54.031 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:54.055 [pool-226-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:54.859 [pool-227-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:54.861 [pool-228-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:54.861 [pool-225-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:54.861 [pool-225-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:54.861 [pool-225-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1790.
09:37:54.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
09:37:54.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1789 which is executed by 526 tests
1033054629
09:37:55.044 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:55.069 [pool-230-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-1.683, -1.362]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:55.869 [pool-231-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-1.683, -1.362]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-1.683, -1.362]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:55.870 [pool-232-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:55.870 [pool-229-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-1.683, -1.362]]
09:37:55.870 [pool-229-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:55.870 [pool-229-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1789.
09:37:55.870 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
09:37:55.870 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1787 which is executed by 526 tests
1033054629
09:37:56.054 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:56.078 [pool-234-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:56.871 [pool-235-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:56.873 [pool-236-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:56.873 [pool-233-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:56.873 [pool-233-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:56.873 [pool-233-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1787.
09:37:56.873 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
09:37:56.873 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1786 which is executed by 526 tests
1033054629
09:37:57.056 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:57.080 [pool-238-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0, -0.036]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:57.876 [pool-239-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0, -0.036]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0, -0.036]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:57.877 [pool-240-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:57.877 [pool-237-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0, -0.036]]
09:37:57.877 [pool-237-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:57.878 [pool-237-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1786.
09:37:57.878 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
09:37:57.878 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1785 which is executed by 526 tests
1033054629
09:37:58.061 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
09:37:58.061 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1784 which is executed by 526 tests
1033054629
09:37:58.244 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
09:37:58.245 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1783 which is executed by 526 tests
1033054629
09:37:58.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
09:37:58.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1781 which is executed by 526 tests
1033054629
09:37:58.612 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
09:37:58.612 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1780 which is executed by 526 tests
1033054629
09:37:58.795 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
09:37:58.795 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1754 which is executed by 526 tests
1033054629
09:37:58.978 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:59.002 [pool-242-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:59.846 [pool-243-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:37:59.847 [pool-244-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:37:59.848 [pool-241-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:59.848 [pool-241-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:37:59.848 [pool-241-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1754.
09:37:59.848 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
09:37:59.848 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1753 which is executed by 526 tests
1033054629
09:38:00.032 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:00.056 [pool-246-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:00.851 [pool-247-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:00.853 [pool-248-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:38:00.853 [pool-245-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:38:00.853 [pool-245-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:38:00.853 [pool-245-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1753.
09:38:00.853 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
09:38:00.853 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1752 which is executed by 526 tests
1033054629
09:38:01.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
09:38:01.036 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1751 which is executed by 526 tests
1033054629
09:38:01.232 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
09:38:01.233 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1748 which is executed by 526 tests
1033054629
09:38:01.416 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
09:38:01.416 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1747 which is executed by 526 tests
1033054629
09:38:01.599 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
09:38:01.599 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1746 which is executed by 526 tests
1033054629
09:38:01.783 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
09:38:01.783 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1745 which is executed by 526 tests
1033054629
09:38:01.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
09:38:01.966 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1742 which is executed by 526 tests
1033054629
09:38:02.149 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
09:38:02.149 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1741 which is executed by 526 tests
1033054629
09:38:02.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
09:38:02.333 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1740 which is executed by 526 tests
1033054629
09:38:02.517 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
09:38:02.517 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1739 which is executed by 526 tests
1033054629
09:38:02.699 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
09:38:02.699 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1736 which is executed by 526 tests
1033054629
09:38:02.881 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
09:38:02.881 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1735 which is executed by 526 tests
1033054629
09:38:03.063 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
09:38:03.063 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1724 which is executed by 551 tests
1033054629
09:38:03.246 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #97
09:38:03.246 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1722 which is executed by 551 tests
1033054629
09:38:03.428 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:03.452 [pool-250-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.421, -0.377]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:04.316 [pool-251-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.421, -0.377]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.421, -0.377]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:04.318 [pool-252-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:38:04.318 [pool-249-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.421, -0.377]]
09:38:04.318 [pool-249-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:38:04.318 [pool-249-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1722.
09:38:04.318 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #98
09:38:04.318 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1721 which is executed by 551 tests
1033054629
09:38:04.500 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:04.524 [pool-254-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.718]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:05.324 [pool-255-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.718]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.718]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:05.325 [pool-256-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:38:05.325 [pool-253-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.718]]
09:38:05.325 [pool-253-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:38:05.326 [pool-253-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1721.
09:38:05.326 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #99
09:38:05.326 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1720 which is executed by 551 tests
1033054629
09:38:05.509 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:05.533 [pool-258-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:06.342 [pool-259-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:06.343 [pool-260-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:38:06.343 [pool-257-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:38:06.343 [pool-257-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:38:06.343 [pool-257-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1720.
09:38:06.343 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #100
09:38:06.344 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1719 which is executed by 551 tests
1033054629
09:38:06.526 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:06.549 [pool-262-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:07.366 [pool-263-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:07.367 [pool-264-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:38:07.367 [pool-261-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:38:07.367 [pool-261-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:38:07.367 [pool-261-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1719.
09:38:07.367 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #101
09:38:07.367 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1718 which is executed by 551 tests
1033054629
09:38:07.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #102
09:38:07.549 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1716 which is executed by 551 tests
1033054629
09:38:07.731 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #103
09:38:07.731 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1706 which is executed by 551 tests
1033054629
09:38:07.913 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #104
09:38:07.913 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1704 which is executed by 551 tests
1033054629
09:38:08.095 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:08.119 [pool-266-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.751, -0.595]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:08.914 [pool-267-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.751, -0.595]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.751, -0.595]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:08.915 [pool-268-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:38:08.915 [pool-265-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.751, -0.595]]
09:38:08.915 [pool-265-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:38:08.915 [pool-265-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1704.
09:38:08.915 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #105
09:38:08.915 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1701 which is executed by 551 tests
1033054629
09:38:09.098 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:09.122 [pool-270-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:09.912 [pool-271-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:09.913 [pool-272-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:38:09.913 [pool-269-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:38:09.913 [pool-269-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:38:09.913 [pool-269-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1701.
09:38:09.913 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #106
09:38:09.914 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1700 which is executed by 551 tests
1033054629
09:38:10.095 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:10.119 [pool-274-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:10.915 [pool-275-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:10.916 [pool-276-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:38:10.916 [pool-273-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:38:10.916 [pool-273-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:38:10.917 [pool-273-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1700.
09:38:10.917 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #107
09:38:10.917 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1699 which is executed by 551 tests
1033054629
09:38:11.099 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:11.122 [pool-278-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:11.913 [pool-279-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:11.914 [pool-280-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:38:11.914 [pool-277-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:38:11.914 [pool-277-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:38:11.915 [pool-277-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:1699.
09:38:11.915 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #108
09:38:11.915 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1698 which is executed by 551 tests
1033054629
09:38:12.096 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #109
09:38:12.096 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:1696 which is executed by 551 tests
1033054629
09:38:12.278 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #110
09:38:12.278 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:3494 which is executed by 657 tests
1033054629
09:38:12.464 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:12.488 [pool-282-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:13.277 [pool-283-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (14 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:13.278 [pool-284-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:38:13.278 [pool-281-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:38:13.278 [pool-281-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:38:13.278 [pool-281-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:3494.
09:38:13.278 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:13.301 [pool-286-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:38:14.090 [pool-287-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:38:14.090 [pool-288-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

09:38:14.173 [pool-289-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (77 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

09:38:14.176 [pool-290-thread-1] INFO  f.i.l.r.n.s.ConstraintModelBuilder$1PassingListener - Tests run finished (3 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 0

09:41:34.177 [pool-285-thread-1] DEBUG xxl.java.junit.TestSuiteExecution - Timeout after 200 seconds. Infinite loop?
09:41:34.177 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.util.concurrent.TimeoutException
09:41:34.177 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #111
09:41:34.177 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:3578 which is executed by 707 tests
1033054629
09:41:34.385 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #112
09:41:34.386 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:3575 which is executed by 707 tests
1033054629
09:41:34.575 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:34.599 [pool-293-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:35.487 [pool-294-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:35.489 [pool-295-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:41:35.489 [pool-292-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:35.489 [pool-292-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:35.489 [pool-292-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:3575.
09:41:35.489 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:35.542 [pool-297-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:36.423 [pool-298-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:36.424 [pool-299-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:41:36.424 [pool-296-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:36.424 [pool-296-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:36.424 [pool-296-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:3575.
09:41:36.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #113
09:41:36.424 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:3574 which is executed by 707 tests
1033054629
09:41:36.624 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #114
09:41:36.625 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:3569 which is executed by 714 tests
1033054629
09:41:36.813 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:36.837 [pool-301-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:37.726 [pool-302-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:37.727 [pool-303-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:41:37.743 [pool-300-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:37.743 [pool-300-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:37.743 [pool-300-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:3569.
09:41:37.743 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:37.767 [pool-305-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:38.661 [pool-306-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [�, -0.8], values: [�, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:38.662 [pool-307-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [�, -0.8], values: [�, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [�, -0.8], values: [�, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:41:38.663 [pool-304-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:38.663 [pool-304-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [�, -0.8], values: [�, -0.717]]
09:41:38.663 [pool-304-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:3569.
09:41:38.663 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #115
09:41:38.663 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ArgUtils:45 which is executed by 925 tests
-1554378724
09:41:38.796 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:38.821 [pool-309-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:38.989 [pool-310-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:38.990 [pool-311-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:41:38.990 [pool-308-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:38.990 [pool-308-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:38.990 [pool-308-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.exception.util.ArgUtils:45.
09:41:38.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #116
09:41:38.991 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ArgUtils:49 which is executed by 1056 tests
-1554378724
09:41:39.135 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:39.160 [pool-313-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:39.324 [pool-314-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:39.325 [pool-315-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:41:39.325 [pool-312-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]]
09:41:39.325 [pool-312-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:39.325 [pool-312-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.exception.util.ArgUtils:49.
09:41:39.325 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #117
09:41:39.325 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ArgUtils:44 which is executed by 1056 tests
-1554378724
09:41:39.458 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:39.502 [pool-317-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:39.668 [pool-318-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:39.675 [pool-319-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:41:39.675 [pool-316-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]]
09:41:39.676 [pool-316-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:39.676 [pool-316-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.exception.util.ArgUtils:44.
09:41:39.676 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:39.716 [pool-321-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:39.881 [pool-322-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

java.lang.ClassCastException: java.lang.Double cannot be cast to [Ljava.lang.Object;
    at org.apache.commons.math4.exception.util.ArgUtils.flatten(ArgUtils.java:26)
    at org.apache.commons.math4.exception.util.ExceptionContext.addMessage(ExceptionContext.java:87)
    at org.apache.commons.math4.exception.MathIllegalArgumentException.<init>(MathIllegalArgumentException.java:45)
    at org.apache.commons.math4.exception.NoBracketingException.<init>(NoBracketingException.java:67)
    at org.apache.commons.math4.exception.NoBracketingException.<init>(NoBracketingException.java:50)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
09:41:39.882 [pool-323-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[java.lang.Double cannot be cast to [Ljava.lang.Object;]
java.lang.ClassCastException: java.lang.Double cannot be cast to [Ljava.lang.Object;    at org.apache.commons.math4.exception.util.ArgUtils.flatten(ArgUtils.java:26)
    at org.apache.commons.math4.exception.util.ExceptionContext.addMessage(ExceptionContext.java:87)
    at org.apache.commons.math4.exception.MathIllegalArgumentException.<init>(MathIllegalArgumentException.java:45)
    at org.apache.commons.math4.exception.NoBracketingException.<init>(NoBracketingException.java:67)
    at org.apache.commons.math4.exception.NoBracketingException.<init>(NoBracketingException.java:50)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)

09:41:39.882 [pool-320-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:39.882 [pool-320-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): java.lang.Double cannot be cast to [Ljava.lang.Object;]
09:41:39.882 [pool-320-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.exception.util.ArgUtils:44.
09:41:39.883 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #118
09:41:39.883 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:3565 which is executed by 1135 tests
1033054629
09:41:40.075 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:40.111 [pool-325-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (23 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:40.968 [pool-326-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:40.969 [pool-327-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:41:40.970 [pool-324-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:40.970 [pool-324-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:40.970 [pool-324-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:3565.
09:41:40.970 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:40.994 [pool-329-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:41.864 [pool-330-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:41.866 [pool-331-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:41:41.866 [pool-328-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:41.866 [pool-328-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:41.867 [pool-328-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:3565.
09:41:41.867 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #119
09:41:41.867 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.util.FastMath:3562 which is executed by 1200 tests
1033054629
09:41:42.056 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:42.082 [pool-333-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:42.975 [pool-334-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:42.979 [pool-335-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:41:42.982 [pool-332-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:42.982 [pool-332-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:42.982 [pool-332-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:3562.
09:41:42.982 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:43.007 [pool-337-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:43.898 [pool-338-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:43.900 [pool-339-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:41:43.900 [pool-336-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:43.900 [pool-336-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:43.900 [pool-336-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.util.FastMath:3562.
09:41:43.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #120
09:41:43.900 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:88 which is executed by 1272 tests
-310961535
09:41:44.058 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #121
09:41:44.058 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:87 which is executed by 1272 tests
-310961535
09:41:44.198 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:44.222 [pool-341-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:44.813 [pool-343-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (11 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

SLF4J: Failed toString() invocation on an object of type [java.util.ArrayList]
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:657)
	at java.util.ArrayList.get(ArrayList.java:433)
	at org.apache.commons.math4.exception.util.ExceptionContext.buildMessage(ExceptionContext.java:82)
	at org.apache.commons.math4.exception.util.ExceptionContext.getMessage(ExceptionContext.java:69)
	at org.apache.commons.math4.exception.util.ExceptionContext.getMessage(ExceptionContext.java:61)
	at org.apache.commons.math4.exception.MathIllegalArgumentException.getMessage(MathIllegalArgumentException.java:56)
	at org.junit.runner.notification.Failure.toString(Failure.java:59)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at org.slf4j.helpers.MessageFormatter.safeObjectAppend(MessageFormatter.java:304)
	at org.slf4j.helpers.MessageFormatter.deeplyAppendParameter(MessageFormatter.java:276)
	at org.slf4j.helpers.MessageFormatter.arrayFormat(MessageFormatter.java:230)
	at ch.qos.logback.classic.spi.LoggingEvent.<init>(LoggingEvent.java:115)
	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:439)
	at ch.qos.logback.classic.Logger.filterAndLog_1(Logger.java:413)
	at ch.qos.logback.classic.Logger.debug(Logger.java:506)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.isSynthesisPossible(ConstraintModelBuilder.java:162)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.collectSpecifications(ConstraintModelBuilder.java:87)
	at fr.inria.lille.repair.nopol.synth.SMTNopolSynthesizer.findAngelicValuesAndBuildPatch(SMTNopolSynthesizer.java:69)
	at fr.inria.lille.repair.nopol.NoPol.runNopolProcessor(NoPol.java:295)
	at fr.inria.lille.repair.nopol.NoPol.access$000(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol$1.call(NoPol.java:260)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
09:41:44.814 [pool-340-thread-1] DEBUG tests.output - Failing tests with false: 
[FAILED toString()]
09:41:44.814 [pool-340-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:44.815 [pool-340-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:87.
09:41:44.815 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #122
09:41:44.815 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:86 which is executed by 1272 tests
-310961535
09:41:44.967 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:44.993 [pool-345-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (22 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: 
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:45.192 [pool-346-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (16 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[]
org.apache.commons.math4.exception.NoBracketingException:     at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:45.194 [pool-347-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (2 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:41:45.194 [pool-344-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): ]
09:41:45.194 [pool-344-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:45.194 [pool-344-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.exception.util.ExceptionContext:86.
09:41:45.194 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #123
09:41:45.194 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ArgUtils:53 which is executed by 1273 tests
-1554378724
09:41:45.327 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #124
09:41:45.327 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ArgUtils:43 which is executed by 1273 tests
-1554378724
09:41:45.459 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:45.483 [pool-349-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:45.646 [pool-350-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:45.647 [pool-351-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:41:45.648 [pool-348-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]]
09:41:45.648 [pool-348-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:45.648 [pool-348-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.exception.util.ArgUtils:43.
09:41:45.648 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #125
09:41:45.648 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ArgUtils:42 which is executed by 1273 tests
-1554378724
09:41:45.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:45.804 [pool-353-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (20 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:45.968 [pool-354-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:45.969 [pool-355-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (1 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:41:45.969 [pool-352-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]]
09:41:45.969 [pool-352-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:45.969 [pool-352-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.exception.util.ArgUtils:42.
09:41:45.969 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:45.992 [pool-357-thread-1] INFO  xxl.java.junit.TestCasesListener - Tests run finished (21 ms)
<> Total tests run: 22
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:46.160 [pool-358-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (15 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
09:41:46.161 [pool-359-thread-1] INFO  f.i.l.c.t.SpecificationTestCasesListener - Tests run finished (0 ms)
<> Total tests run: 1
<> Ignored tests: 0
<> Failed tests: 1
~ testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest)
[function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
org.apache.commons.math4.exception.NoBracketingException: function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtils.bracket(UnivariateSolverUtils.java:353)
    at org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest.testBracketLoopConditionForB(UnivariateSolverUtilsTest.java:182)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)

09:41:46.162 [pool-356-thread-1] DEBUG tests.output - Failing tests with false: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [{0}, {1}], values: [{2}, {3}]]
09:41:46.162 [pool-356-thread-1] DEBUG tests.output - Failing tests with true: 
[testBracketLoopConditionForB(org.apache.commons.math4.analysis.solvers.UnivariateSolverUtilsTest): function values at endpoints do not have different signs, endpoints: [-1, -0.8], values: [-0.841, -0.717]]
09:41:46.162 [pool-356-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.commons.math4.exception.util.ArgUtils:42.
09:41:46.162 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #126
09:41:46.162 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.commons.math4.exception.util.ArgUtils:41 which is executed by 1273 tests
-1554378724
09:41:46.310 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
09:41:46.661 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 848
09:41:46.661 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 5602
09:41:46.662 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 83
09:41:46.662 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 1
09:41:46.662 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
09:41:46.662 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 5
09:41:46.662 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb SMT components: [14] [== of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2, == of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2]
09:41:46.662 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol -                   class java.lang.Boolean: 14
09:41:46.662 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
09:41:46.662 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 832592ms
09:41:46.662 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
NO_SYNTHESIS
Command exited with non-zero status 255
1264.05user 18.20system 13:55.07elapsed 153%CPU (0avgtext+0avgdata 4372908maxresident)k
53504inputs+9872outputs (22major+1573556minor)pagefaults 0swaps


Node: graphene-30.nancy.grid5000.fr



Date: Sat Dec 29 09:41:47 EST 2018

