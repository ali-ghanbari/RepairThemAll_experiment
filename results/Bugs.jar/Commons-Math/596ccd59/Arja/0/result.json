{
  "repair_end": "2018-12-29 10:51:25.222863", 
  "repair_begin": "2018-12-29 10:18:26.356791", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Delete", 
          "seed": "continue;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 322, 
          "faulty": "int i=0;", 
          "type": "InsertBefore", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_770/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:45:51.604773241 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -319,14 +318,14 @@\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n-            int i = 0;\n+            clusters = new ArrayList<CentroidCluster<T>>();\n+\t\t\tint i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n             for (final T point : points) {\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n                 i++;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Delete", 
          "seed": "membershipMatrix[i][j]=1.0 / sum;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_488/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:44:06.440487670 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -326,7 +325,6 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n                 i++;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Replace", 
          "seed": "saveMembershipMatrix(oldMatrix);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1388/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:49:19.485259756 -0500\n@@ -303,7 +303,7 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n+            saveMembershipMatrix(oldMatrix);\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 322, 
          "faulty": "int i=0;", 
          "type": "InsertBefore", 
          "seed": "j++;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 334, 
          "faulty": "MathArrays.scaleInPlace(1.0 / sum,arr);", 
          "type": "Delete", 
          "seed": "i++;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_758/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:45:43.296750334 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -319,7 +318,8 @@\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n-            int i = 0;\n+            j++;\n+\t\t\tint i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n             for (final T point : points) {\n@@ -331,7 +331,6 @@\n                 sum += u;\n                 i++;\n             }\n-            MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 319, 
          "faulty": "final List<CentroidCluster<T>> newClusters=new ArrayList<CentroidCluster<T>>(k);", 
          "type": "InsertBefore", 
          "seed": "this.membershipMatrix=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1421/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:49:26.537276502 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -316,7 +315,8 @@\n      */\n     private void updateClusterCenters() {\n         int j = 0;\n-        final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n+        this.membershipMatrix = null;\n+\t\tfinal List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n             int i = 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 338, 
          "faulty": "clusters.clear();", 
          "type": "Delete", 
          "seed": "this.k=k;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 301, 
          "faulty": "final int max=(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;", 
          "type": "InsertBefore", 
          "seed": "points=Collections.unmodifiableList(new ArrayList<T>(dataPoints));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1338/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:49:08.169232986 -0500\n@@ -298,12 +298,12 @@\n         }\n \n         int iteration = 0;\n-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n+        points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n+\t\tfinal int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -335,7 +335,6 @@\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n-        clusters.clear();\n         clusters = newClusters;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 326, 
          "faulty": "final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);", 
          "type": "InsertBefore", 
          "seed": "newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_965/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:47:16.600976079 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -323,7 +322,8 @@\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n             for (final T point : points) {\n-                final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n+                newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n+\t\t\t\tfinal double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n                     arr[idx] += u * pointArr[idx];\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 285, 
          "faulty": "final double[][] oldMatrix=new double[size][k];", 
          "type": "InsertBefore", 
          "seed": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1092/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:48:05.093086157 -0500\n@@ -282,7 +282,10 @@\n         points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n         clusters = new ArrayList<CentroidCluster<T>>();\n         membershipMatrix = new double[size][k];\n-        final double[][] oldMatrix = new double[size][k];\n+        if (size < k) {\n+\t\t\tthrow new NumberIsTooSmallException(size, k, false);\n+\t\t}\n+\t\tfinal double[][] oldMatrix = new double[size][k];\n \n         // if no points are provided, return an empty list of clusters\n         if (size == 0) {\n@@ -303,7 +306,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Replace", 
          "seed": "membershipMatrix[i][j]=1.0 / sum;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 338, 
          "faulty": "clusters.clear();", 
          "type": "InsertBefore", 
          "seed": "clusters.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_423/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:46.856435564 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -326,7 +325,7 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n+                    membershipMatrix[i][j] = 1.0 / sum;\n                 }\n                 sum += u;\n                 i++;\n@@ -336,6 +335,7 @@\n             j++;\n         }\n         clusters.clear();\n+\t\tclusters.clear();\n         clusters = newClusters;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Replace", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_251/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:42:55.660300984 -0500\n@@ -303,7 +303,7 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n+            difference = calculateMaxMembershipChange(oldMatrix);\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 277, 
          "faulty": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}", 
          "type": "InsertBefore", 
          "seed": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 325, 
          "faulty": "for (final T point : points) {\n  final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n  final double[] pointArr=point.getPoint();\n  for (int idx=0; idx < arr.length; idx++) {\n    arr[idx]+=u * pointArr[idx];\n  }\n  sum+=u;\n  i++;\n}", 
          "type": "Delete", 
          "seed": "this.k=k;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 335, 
          "faulty": "newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));", 
          "type": "Delete", 
          "seed": "for (int i=0; i < points.size(); i++) {\n  final T point=points.get(i);\n  double maxMembership=0.0;\n  int newCluster=-1;\n  for (int j=0; j < clusters.size(); j++) {\n    double sum=0.0;\n    final double distA=FastMath.abs(distance(point,clusters.get(j).getCenter()));\n    for (    final CentroidCluster<T> c : clusters) {\n      final double distB=FastMath.abs(distance(point,c.getCenter()));\n      sum+=FastMath.pow(distA / distB,2.0 / (fuzziness - 1.0));\n    }\n    membershipMatrix[i][j]=1.0 / sum;\n    if (membershipMatrix[i][j] > maxMembership) {\n      maxMembership=membershipMatrix[i][j];\n      newCluster=j;\n    }\n  }\n  clusters.get(newCluster).addPoint(point);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1599/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:25.541418555 -0500\n@@ -273,7 +273,10 @@\n \n         final int size = dataPoints.size();\n \n-        // number of clusters has to be smaller or equal the number of data points\n+        if (size < k) {\n+\t\t\tthrow new NumberIsTooSmallException(size, k, false);\n+\t\t}\n+\t\t// number of clusters has to be smaller or equal the number of data points\n         if (size < k) {\n             throw new NumberIsTooSmallException(size, k, false);\n         }\n@@ -303,7 +306,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -322,17 +324,7 @@\n             int i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n-            for (final T point : points) {\n-                final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n-                final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n-                sum += u;\n-                i++;\n-            }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n-            newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n         clusters.clear();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "InsertBefore", 
          "seed": "clusters.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "membershipMatrix=new double[size][k];"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_357/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:33.900401280 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -326,7 +325,8 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n+                    clusters.clear();\n+\t\t\t\t\tarr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n                 i++;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "membershipMatrix=new double[size][k];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 301, 
          "faulty": "final int max=(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;", 
          "type": "InsertBefore", 
          "seed": "points=Collections.unmodifiableList(new ArrayList<T>(dataPoints));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 332, 
          "faulty": "i++;", 
          "type": "Delete", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_141/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:42:08.376178832 -0500\n@@ -298,12 +298,12 @@\n         }\n \n         int iteration = 0;\n-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n+        points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n+\t\tfinal int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -329,7 +329,6 @@\n                     arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n-                i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 334, 
          "faulty": "MathArrays.scaleInPlace(1.0 / sum,arr);", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 331, 
          "faulty": "sum+=u;", 
          "type": "Replace", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1373/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:49:16.341252305 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -328,10 +327,9 @@\n                 for (int idx = 0; idx < arr.length; idx++) {\n                     arr[idx] += u * pointArr[idx];\n                 }\n-                sum += u;\n+                clusters = new ArrayList<CentroidCluster<T>>();\n                 i++;\n             }\n-            MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 322, 
          "faulty": "int i=0;", 
          "type": "InsertBefore", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 332, 
          "faulty": "i++;", 
          "type": "Delete", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_608/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:44:48.536600827 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -319,7 +318,8 @@\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n-            int i = 0;\n+            clusters = new ArrayList<CentroidCluster<T>>();\n+\t\t\tint i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n             for (final T point : points) {\n@@ -329,7 +329,6 @@\n                     arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n-                i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 285, 
          "faulty": "final double[][] oldMatrix=new double[size][k];", 
          "type": "InsertBefore", 
          "seed": "updateClusterCenters();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_528/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:44:26.480541344 -0500\n@@ -282,7 +282,8 @@\n         points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n         clusters = new ArrayList<CentroidCluster<T>>();\n         membershipMatrix = new double[size][k];\n-        final double[][] oldMatrix = new double[size][k];\n+        updateClusterCenters();\n+\t\tfinal double[][] oldMatrix = new double[size][k];\n \n         // if no points are provided, return an empty list of clusters\n         if (size == 0) {\n@@ -303,7 +304,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 320, 
          "faulty": "for (final CentroidCluster<T> cluster : clusters) {\n  final Clusterable center=cluster.getCenter();\n  int i=0;\n  double[] arr=new double[center.getPoint().length];\n  double sum=0.0;\n  for (  final T point : points) {\n    final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n    final double[] pointArr=point.getPoint();\n    for (int idx=0; idx < arr.length; idx++) {\n      arr[idx]+=u * pointArr[idx];\n    }\n    sum+=u;\n    i++;\n  }\n  MathArrays.scaleInPlace(1.0 / sum,arr);\n  newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n  j++;\n}", 
          "type": "Delete", 
          "seed": "this.epsilon=epsilon;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 300, 
          "faulty": "int iteration=0;", 
          "type": "InsertBefore", 
          "seed": "membershipMatrix=new double[size][k];"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1541/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:14.645392065 -0500\n@@ -297,13 +297,13 @@\n             clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));\n         }\n \n-        int iteration = 0;\n+        membershipMatrix = new double[size][k];\n+\t\tint iteration = 0;\n         final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -317,24 +317,6 @@\n     private void updateClusterCenters() {\n         int j = 0;\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n-        for (final CentroidCluster<T> cluster : clusters) {\n-            final Clusterable center = cluster.getCenter();\n-            int i = 0;\n-            double[] arr = new double[center.getPoint().length];\n-            double sum = 0.0;\n-            for (final T point : points) {\n-                final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n-                final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n-                sum += u;\n-                i++;\n-            }\n-            MathArrays.scaleInPlace(1.0 / sum, arr);\n-            newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n-            j++;\n-        }\n         clusters.clear();\n         clusters = newClusters;\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 295, 
          "faulty": "final int pointDimension=points.get(0).getPoint().length;", 
          "type": "InsertBefore", 
          "seed": "saveMembershipMatrix(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_223/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:42:49.644285327 -0500\n@@ -291,7 +291,8 @@\n \n         initializeMembershipMatrix();\n \n-        // there is at least one point\n+        saveMembershipMatrix(oldMatrix);\n+\t\t// there is at least one point\n         final int pointDimension = points.get(0).getPoint().length;\n         for (int i = 0; i < k; i++) {\n             clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));\n@@ -303,7 +304,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 331, 
          "faulty": "sum+=u;", 
          "type": "Replace", 
          "seed": "points=new ArrayList<T>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 338, 
          "faulty": "clusters.clear();", 
          "type": "InsertBefore", 
          "seed": "clusters.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_616/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:44:49.912604552 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -328,7 +327,7 @@\n                 for (int idx = 0; idx < arr.length; idx++) {\n                     arr[idx] += u * pointArr[idx];\n                 }\n-                sum += u;\n+                points = new ArrayList<T>();\n                 i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n@@ -336,6 +335,7 @@\n             j++;\n         }\n         clusters.clear();\n+\t\tclusters.clear();\n         clusters = newClusters;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 288, 
          "faulty": "if (size == 0) {\n  return clusters;\n}", 
          "type": "Delete", 
          "seed": "this.points=null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_310/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:13.300347085 -0500\n@@ -284,11 +284,6 @@\n         membershipMatrix = new double[size][k];\n         final double[][] oldMatrix = new double[size][k];\n \n-        // if no points are provided, return an empty list of clusters\n-        if (size == 0) {\n-            return clusters;\n-        }\n-\n         initializeMembershipMatrix();\n \n         // there is at least one point\n@@ -303,7 +298,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 322, 
          "faulty": "int i=0;", 
          "type": "InsertBefore", 
          "seed": "this.points=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "for (int i=0; i < k; i++) {\n  clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 335, 
          "faulty": "newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));", 
          "type": "Delete", 
          "seed": "for (final T point : points) {\n  final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n  final double[] pointArr=point.getPoint();\n  for (int idx=0; idx < arr.length; idx++) {\n    arr[idx]+=u * pointArr[idx];\n  }\n  sum+=u;\n  i++;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1229/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:48:39.889166653 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -319,7 +318,8 @@\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n-            int i = 0;\n+            this.points = null;\n+\t\t\tint i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n             for (final T point : points) {\n@@ -332,7 +332,6 @@\n                 i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n-            newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n         clusters.clear();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Delete", 
          "seed": "membershipMatrix[i][j]=1.0 / sum;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 301, 
          "faulty": "final int max=(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;", 
          "type": "InsertBefore", 
          "seed": "points=Collections.unmodifiableList(new ArrayList<T>(dataPoints));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_148/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:42:09.836182573 -0500\n@@ -298,7 +298,8 @@\n         }\n \n         int iteration = 0;\n-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n+        points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n+\t\tfinal int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n@@ -326,7 +327,6 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n                 i++;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 334, 
          "faulty": "MathArrays.scaleInPlace(1.0 / sum,arr);", 
          "type": "Delete", 
          "seed": "i++;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 327, 
          "faulty": "final double[] pointArr=point.getPoint();", 
          "type": "InsertBefore", 
          "seed": "points.add(point);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1131/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:48:19.385119068 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -324,14 +323,14 @@\n             double sum = 0.0;\n             for (final T point : points) {\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n-                final double[] pointArr = point.getPoint();\n+                points.add(point);\n+\t\t\t\tfinal double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n                     arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n                 i++;\n             }\n-            MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "for (int i=0; i < points.size(); i++) {\n  for (int j=0; j < k; j++) {\n    membershipMatrix[i][j]=random.nextDouble();\n  }\n  membershipMatrix[i]=MathArrays.normalizeArray(membershipMatrix[i],1.0);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 350, 
          "faulty": "int newCluster=-1;", 
          "type": "InsertBefore", 
          "seed": "membershipMatrix[i]=MathArrays.normalizeArray(membershipMatrix[i],1.0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 284, 
          "faulty": "membershipMatrix=new double[size][k];", 
          "type": "InsertBefore", 
          "seed": "points=Collections.unmodifiableList(new ArrayList<T>(dataPoints));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_614/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:44:49.684603934 -0500\n@@ -281,7 +281,8 @@\n         // copy the input collection to an unmodifiable list with indexed access\n         points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n         clusters = new ArrayList<CentroidCluster<T>>();\n-        membershipMatrix = new double[size][k];\n+        points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n+\t\tmembershipMatrix = new double[size][k];\n         final double[][] oldMatrix = new double[size][k];\n \n         // if no points are provided, return an empty list of clusters\n@@ -303,7 +304,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -347,7 +347,9 @@\n         for (int i = 0; i < points.size(); i++) {\n             final T point = points.get(i);\n             double maxMembership = 0.0;\n-            int newCluster = -1;\n+            membershipMatrix[i] = MathArrays.normalizeArray(\n+\t\t\t\t\tmembershipMatrix[i], 1.0);\n+\t\t\tint newCluster = -1;\n             for (int j = 0; j < clusters.size(); j++) {\n                 double sum = 0.0;\n                 final double distA = FastMath.abs(distance(point, clusters.get(j).getCenter()));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 339, 
          "faulty": "clusters=newClusters;", 
          "type": "Replace", 
          "seed": "updateMembershipMatrix();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1554/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:17.305398521 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -336,7 +335,7 @@\n             j++;\n         }\n         clusters.clear();\n-        clusters = newClusters;\n+        updateMembershipMatrix();\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 338, 
          "faulty": "clusters.clear();", 
          "type": "InsertBefore", 
          "seed": "clusters=newClusters;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 328, 
          "faulty": "for (int idx=0; idx < arr.length; idx++) {\n  arr[idx]+=u * pointArr[idx];\n}", 
          "type": "Replace", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1779/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:51:21.381556100 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -325,9 +324,9 @@\n             for (final T point : points) {\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n+                if (fuzziness <= 1.0d) {\n+\t\t\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t\t\t}\n                 sum += u;\n                 i++;\n             }\n@@ -335,7 +334,8 @@\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n-        clusters.clear();\n+        clusters = newClusters;\n+\t\tclusters.clear();\n         clusters = newClusters;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Delete", 
          "seed": "for (final CentroidCluster<T> cluster : clusters) {\n  final Clusterable center=cluster.getCenter();\n  int i=0;\n  double[] arr=new double[center.getPoint().length];\n  double sum=0.0;\n  for (  final T point : points) {\n    final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n    final double[] pointArr=point.getPoint();\n    for (int idx=0; idx < arr.length; idx++) {\n      arr[idx]+=u * pointArr[idx];\n    }\n    sum+=u;\n    i++;\n  }\n  MathArrays.scaleInPlace(1.0 / sum,arr);\n  newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n  j++;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 300, 
          "faulty": "int iteration=0;", 
          "type": "InsertBefore", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_275/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:42:59.924312101 -0500\n@@ -297,7 +297,10 @@\n             clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));\n         }\n \n-        int iteration = 0;\n+        if (fuzziness <= 1.0d) {\n+\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t}\n+\t\tint iteration = 0;\n         final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n@@ -326,7 +329,6 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n                 i++;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 331, 
          "faulty": "sum+=u;", 
          "type": "Replace", 
          "seed": "updateMembershipMatrix();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1592/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:24.433415856 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -328,7 +327,7 @@\n                 for (int idx = 0; idx < arr.length; idx++) {\n                     arr[idx] += u * pointArr[idx];\n                 }\n-                sum += u;\n+                updateMembershipMatrix();\n                 i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 288, 
          "faulty": "if (size == 0) {\n  return clusters;\n}", 
          "type": "Delete", 
          "seed": "this.random=random;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 339, 
          "faulty": "clusters=newClusters;", 
          "type": "Replace", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 331, 
          "faulty": "sum+=u;", 
          "type": "InsertBefore", 
          "seed": "this.membershipMatrix=null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1491/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:04.745368098 -0500\n@@ -284,11 +284,6 @@\n         membershipMatrix = new double[size][k];\n         final double[][] oldMatrix = new double[size][k];\n \n-        // if no points are provided, return an empty list of clusters\n-        if (size == 0) {\n-            return clusters;\n-        }\n-\n         initializeMembershipMatrix();\n \n         // there is at least one point\n@@ -303,7 +298,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -328,7 +322,8 @@\n                 for (int idx = 0; idx < arr.length; idx++) {\n                     arr[idx] += u * pointArr[idx];\n                 }\n-                sum += u;\n+                this.membershipMatrix = null;\n+\t\t\t\tsum += u;\n                 i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n@@ -336,7 +331,9 @@\n             j++;\n         }\n         clusters.clear();\n-        clusters = newClusters;\n+        if (fuzziness <= 1.0d) {\n+\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t}\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 339, 
          "faulty": "clusters=newClusters;", 
          "type": "Delete", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 338, 
          "faulty": "clusters.clear();", 
          "type": "InsertBefore", 
          "seed": "clusters.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_776/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:45:52.704776278 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -336,7 +335,7 @@\n             j++;\n         }\n         clusters.clear();\n-        clusters = newClusters;\n+\t\tclusters.clear();\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 288, 
          "faulty": "if (size == 0) {\n  return clusters;\n}", 
          "type": "InsertBefore", 
          "seed": "initializeMembershipMatrix();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_876/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:46:31.648876269 -0500\n@@ -284,7 +284,8 @@\n         membershipMatrix = new double[size][k];\n         final double[][] oldMatrix = new double[size][k];\n \n-        // if no points are provided, return an empty list of clusters\n+        initializeMembershipMatrix();\n+\t\t// if no points are provided, return an empty list of clusters\n         if (size == 0) {\n             return clusters;\n         }\n@@ -303,7 +304,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 328, 
          "faulty": "for (int idx=0; idx < arr.length; idx++) {\n  arr[idx]+=u * pointArr[idx];\n}", 
          "type": "Replace", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 332, 
          "faulty": "i++;", 
          "type": "Delete", 
          "seed": "this.maxIterations=maxIterations;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_364/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:35.156404598 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -325,11 +324,10 @@\n             for (final T point : points) {\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n+                if (fuzziness <= 1.0d) {\n+\t\t\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t\t\t}\n                 sum += u;\n-                i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 322, 
          "faulty": "int i=0;", 
          "type": "InsertBefore", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 301, 
          "faulty": "final int max=(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;", 
          "type": "InsertBefore", 
          "seed": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_985/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:47:26.260997810 -0500\n@@ -298,12 +298,14 @@\n         }\n \n         int iteration = 0;\n-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n+        if (size < k) {\n+\t\t\tthrow new NumberIsTooSmallException(size, k, false);\n+\t\t}\n+\t\tfinal int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -319,7 +321,8 @@\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n-            int i = 0;\n+            clusters = new ArrayList<CentroidCluster<T>>();\n+\t\t\tint i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n             for (final T point : points) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "this.random=random;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 320, 
          "faulty": "for (final CentroidCluster<T> cluster : clusters) {\n  final Clusterable center=cluster.getCenter();\n  int i=0;\n  double[] arr=new double[center.getPoint().length];\n  double sum=0.0;\n  for (  final T point : points) {\n    final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n    final double[] pointArr=point.getPoint();\n    for (int idx=0; idx < arr.length; idx++) {\n      arr[idx]+=u * pointArr[idx];\n    }\n    sum+=u;\n    i++;\n  }\n  MathArrays.scaleInPlace(1.0 / sum,arr);\n  newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n  j++;\n}", 
          "type": "Delete", 
          "seed": "this.epsilon=epsilon;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 284, 
          "faulty": "membershipMatrix=new double[size][k];", 
          "type": "InsertBefore", 
          "seed": "if (size == 0) {\n  return clusters;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_994/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:47:28.069001888 -0500\n@@ -281,7 +281,10 @@\n         // copy the input collection to an unmodifiable list with indexed access\n         points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n         clusters = new ArrayList<CentroidCluster<T>>();\n-        membershipMatrix = new double[size][k];\n+        if (size == 0) {\n+\t\t\treturn clusters;\n+\t\t}\n+\t\tmembershipMatrix = new double[size][k];\n         final double[][] oldMatrix = new double[size][k];\n \n         // if no points are provided, return an empty list of clusters\n@@ -303,7 +306,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -317,24 +319,6 @@\n     private void updateClusterCenters() {\n         int j = 0;\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n-        for (final CentroidCluster<T> cluster : clusters) {\n-            final Clusterable center = cluster.getCenter();\n-            int i = 0;\n-            double[] arr = new double[center.getPoint().length];\n-            double sum = 0.0;\n-            for (final T point : points) {\n-                final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n-                final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n-                sum += u;\n-                i++;\n-            }\n-            MathArrays.scaleInPlace(1.0 / sum, arr);\n-            newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n-            j++;\n-        }\n         clusters.clear();\n         clusters = newClusters;\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Delete", 
          "seed": "membershipMatrix[i][j]=1.0 / sum;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 332, 
          "faulty": "i++;", 
          "type": "Replace", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_110/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:41:55.872146880 -0500\n@@ -326,10 +326,9 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n-                i++;\n+                break;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 335, 
          "faulty": "newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));", 
          "type": "Delete", 
          "seed": "MathArrays.scaleInPlace(1.0 / sum,arr);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_536/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:44:33.956561458 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -332,7 +331,6 @@\n                 i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n-            newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n         clusters.clear();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 336, 
          "faulty": "j++;", 
          "type": "Delete", 
          "seed": "this.random=random;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 332, 
          "faulty": "i++;", 
          "type": "Delete", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1039/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:47:48.645048543 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -329,11 +328,9 @@\n                     arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n-                i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n-            j++;\n         }\n         clusters.clear();\n         clusters = newClusters;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Delete", 
          "seed": "membershipMatrix[i][j]=1.0 / sum;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 325, 
          "faulty": "for (final T point : points) {\n  final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n  final double[] pointArr=point.getPoint();\n  for (int idx=0; idx < arr.length; idx++) {\n    arr[idx]+=u * pointArr[idx];\n  }\n  sum+=u;\n  i++;\n}", 
          "type": "Delete", 
          "seed": "this.maxIterations=maxIterations;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1425/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:49:27.193278062 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -322,15 +321,6 @@\n             int i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n-            for (final T point : points) {\n-                final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n-                final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n-                sum += u;\n-                i++;\n-            }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 322, 
          "faulty": "int i=0;", 
          "type": "InsertBefore", 
          "seed": "this.points=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "continue;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_457/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:44:00.060470658 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -319,7 +318,8 @@\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n-            int i = 0;\n+            this.points = null;\n+\t\t\tint i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n             for (final T point : points) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 339, 
          "faulty": "clusters=newClusters;", 
          "type": "Delete", 
          "seed": "updateMembershipMatrix();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 331, 
          "faulty": "sum+=u;", 
          "type": "Replace", 
          "seed": "updateMembershipMatrix();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_340/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:24.772377219 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -328,7 +327,7 @@\n                 for (int idx = 0; idx < arr.length; idx++) {\n                     arr[idx] += u * pointArr[idx];\n                 }\n-                sum += u;\n+                updateMembershipMatrix();\n                 i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n@@ -336,7 +335,6 @@\n             j++;\n         }\n         clusters.clear();\n-        clusters = newClusters;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 334, 
          "faulty": "MathArrays.scaleInPlace(1.0 / sum,arr);", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 328, 
          "faulty": "for (int idx=0; idx < arr.length; idx++) {\n  arr[idx]+=u * pointArr[idx];\n}", 
          "type": "InsertBefore", 
          "seed": "for (int idx=0; idx < arr.length; idx++) {\n  arr[idx]+=u * pointArr[idx];\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 292, 
          "faulty": "initializeMembershipMatrix();", 
          "type": "Delete", 
          "seed": "for (int i=0; i < points.size(); i++) {\n  final T point=points.get(i);\n  double maxMembership=0.0;\n  int newCluster=-1;\n  for (int j=0; j < clusters.size(); j++) {\n    double sum=0.0;\n    final double distA=FastMath.abs(distance(point,clusters.get(j).getCenter()));\n    for (    final CentroidCluster<T> c : clusters) {\n      final double distB=FastMath.abs(distance(point,c.getCenter()));\n      sum+=FastMath.pow(distA / distB,2.0 / (fuzziness - 1.0));\n    }\n    membershipMatrix[i][j]=1.0 / sum;\n    if (membershipMatrix[i][j] > maxMembership) {\n      maxMembership=membershipMatrix[i][j];\n      newCluster=j;\n    }\n  }\n  clusters.get(newCluster).addPoint(point);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1639/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:33.793438692 -0500\n@@ -289,8 +289,6 @@\n             return clusters;\n         }\n \n-        initializeMembershipMatrix();\n-\n         // there is at least one point\n         final int pointDimension = points.get(0).getPoint().length;\n         for (int i = 0; i < k; i++) {\n@@ -303,7 +301,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -326,12 +323,14 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n+\t\t\t\t\tarr[idx] += u * pointArr[idx];\n+\t\t\t\t}\n+\t\t\t\tfor (int idx = 0; idx < arr.length; idx++) {\n                     arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n                 i++;\n             }\n-            MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 305, 
          "faulty": "saveMembershipMatrix(oldMatrix);", 
          "type": "InsertBefore", 
          "seed": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1589/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:23.985414765 -0500\n@@ -302,8 +302,10 @@\n         double difference = 0.0;\n \n         do {\n-            saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n+            if (size < k) {\n+\t\t\t\tthrow new NumberIsTooSmallException(size, k, false);\n+\t\t\t}\n+\t\t\tsaveMembershipMatrix(oldMatrix);\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 350, 
          "faulty": "int newCluster=-1;", 
          "type": "InsertBefore", 
          "seed": "for (int j=0; j < k; j++) {\n  membershipMatrix[i][j]=random.nextDouble();\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 334, 
          "faulty": "MathArrays.scaleInPlace(1.0 / sum,arr);", 
          "type": "Delete", 
          "seed": "for (int i=0; i < points.size(); i++) {\n  final T point=points.get(i);\n  double maxMembership=0.0;\n  int newCluster=-1;\n  for (int j=0; j < clusters.size(); j++) {\n    double sum=0.0;\n    final double distA=FastMath.abs(distance(point,clusters.get(j).getCenter()));\n    for (    final CentroidCluster<T> c : clusters) {\n      final double distB=FastMath.abs(distance(point,c.getCenter()));\n      sum+=FastMath.pow(distA / distB,2.0 / (fuzziness - 1.0));\n    }\n    membershipMatrix[i][j]=1.0 / sum;\n    if (membershipMatrix[i][j] > maxMembership) {\n      maxMembership=membershipMatrix[i][j];\n      newCluster=j;\n    }\n  }\n  clusters.get(newCluster).addPoint(point);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1595/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:24.885416956 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -331,7 +330,6 @@\n                 sum += u;\n                 i++;\n             }\n-            MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n@@ -347,7 +345,10 @@\n         for (int i = 0; i < points.size(); i++) {\n             final T point = points.get(i);\n             double maxMembership = 0.0;\n-            int newCluster = -1;\n+            for (int j = 0; j < k; j++) {\n+\t\t\t\tmembershipMatrix[i][j] = random.nextDouble();\n+\t\t\t}\n+\t\t\tint newCluster = -1;\n             for (int j = 0; j < clusters.size(); j++) {\n                 double sum = 0.0;\n                 final double distA = FastMath.abs(distance(point, clusters.get(j).getCenter()));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 300, 
          "faulty": "int iteration=0;", 
          "type": "InsertBefore", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 318, 
          "faulty": "int j=0;", 
          "type": "InsertBefore", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_787/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:45:54.916782389 -0500\n@@ -297,13 +297,15 @@\n             clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));\n         }\n \n-        int iteration = 0;\n+        if (fuzziness <= 1.0d) {\n+\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t}\n+\t\tint iteration = 0;\n         final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -315,7 +317,10 @@\n      * Update the cluster centers.\n      */\n     private void updateClusterCenters() {\n-        int j = 0;\n+        if (fuzziness <= 1.0d) {\n+\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t}\n+\t\tint j = 0;\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 301, 
          "faulty": "final int max=(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;", 
          "type": "InsertBefore", 
          "seed": "updateMembershipMatrix();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 328, 
          "faulty": "for (int idx=0; idx < arr.length; idx++) {\n  arr[idx]+=u * pointArr[idx];\n}", 
          "type": "Delete", 
          "seed": "this.maxIterations=maxIterations;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_170/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:42:26.248224756 -0500\n@@ -298,7 +298,8 @@\n         }\n \n         int iteration = 0;\n-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n+        updateMembershipMatrix();\n+\t\tfinal int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n@@ -325,9 +326,6 @@\n             for (final T point : points) {\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n                 sum += u;\n                 i++;\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "continue;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 331, 
          "faulty": "sum+=u;", 
          "type": "InsertBefore", 
          "seed": "updateMembershipMatrix();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 335, 
          "faulty": "newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));", 
          "type": "Delete", 
          "seed": "for (final T point : points) {\n  final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n  final double[] pointArr=point.getPoint();\n  for (int idx=0; idx < arr.length; idx++) {\n    arr[idx]+=u * pointArr[idx];\n  }\n  sum+=u;\n  i++;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_878/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:46:31.932876894 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -328,11 +327,11 @@\n                 for (int idx = 0; idx < arr.length; idx++) {\n                     arr[idx] += u * pointArr[idx];\n                 }\n-                sum += u;\n+                updateMembershipMatrix();\n+\t\t\t\tsum += u;\n                 i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n-            newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n         clusters.clear();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 319, 
          "faulty": "final List<CentroidCluster<T>> newClusters=new ArrayList<CentroidCluster<T>>(k);", 
          "type": "InsertBefore", 
          "seed": "this.membershipMatrix=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Replace", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1512/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:08.785377866 -0500\n@@ -303,7 +303,7 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n+            difference = calculateMaxMembershipChange(oldMatrix);\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -316,7 +316,8 @@\n      */\n     private void updateClusterCenters() {\n         int j = 0;\n-        final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n+        this.membershipMatrix = null;\n+\t\tfinal List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n             int i = 0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 328, 
          "faulty": "for (int idx=0; idx < arr.length; idx++) {\n  arr[idx]+=u * pointArr[idx];\n}", 
          "type": "Replace", 
          "seed": "points.add(point);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_749/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:45:41.680745885 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -325,9 +324,7 @@\n             for (final T point : points) {\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n+                points.add(point);\n                 sum += u;\n                 i++;\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 322, 
          "faulty": "int i=0;", 
          "type": "InsertBefore", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_442/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:57.588464076 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -319,7 +318,8 @@\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n-            int i = 0;\n+            clusters = new ArrayList<CentroidCluster<T>>();\n+\t\t\tint i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n             for (final T point : points) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 334, 
          "faulty": "MathArrays.scaleInPlace(1.0 / sum,arr);", 
          "type": "Delete", 
          "seed": "break;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_316/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:14.300349707 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -331,7 +330,6 @@\n                 sum += u;\n                 i++;\n             }\n-            MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 339, 
          "faulty": "clusters=newClusters;", 
          "type": "Delete", 
          "seed": "updateMembershipMatrix();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 325, 
          "faulty": "for (final T point : points) {\n  final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n  final double[] pointArr=point.getPoint();\n  for (int idx=0; idx < arr.length; idx++) {\n    arr[idx]+=u * pointArr[idx];\n  }\n  sum+=u;\n  i++;\n}", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_555/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:44:37.892572068 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -322,21 +321,11 @@\n             int i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n-            for (final T point : points) {\n-                final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n-                final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n-                sum += u;\n-                i++;\n-            }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n         clusters.clear();\n-        clusters = newClusters;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 284, 
          "faulty": "membershipMatrix=new double[size][k];", 
          "type": "InsertBefore", 
          "seed": "if (size == 0) {\n  return clusters;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 332, 
          "faulty": "i++;", 
          "type": "Replace", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1260/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:48:46.589182295 -0500\n@@ -281,7 +281,10 @@\n         // copy the input collection to an unmodifiable list with indexed access\n         points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n         clusters = new ArrayList<CentroidCluster<T>>();\n-        membershipMatrix = new double[size][k];\n+        if (size == 0) {\n+\t\t\treturn clusters;\n+\t\t}\n+\t\tmembershipMatrix = new double[size][k];\n         final double[][] oldMatrix = new double[size][k];\n \n         // if no points are provided, return an empty list of clusters\n@@ -303,7 +306,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -329,7 +331,9 @@\n                     arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n-                i++;\n+                if (fuzziness <= 1.0d) {\n+\t\t\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t\t\t}\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "for (int i=0; i < k; i++) {\n  clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 285, 
          "faulty": "final double[][] oldMatrix=new double[size][k];", 
          "type": "InsertBefore", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 336, 
          "faulty": "j++;", 
          "type": "Delete", 
          "seed": "for (final CentroidCluster<T> cluster : clusters) {\n  final Clusterable center=cluster.getCenter();\n  int i=0;\n  double[] arr=new double[center.getPoint().length];\n  double sum=0.0;\n  for (  final T point : points) {\n    final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n    final double[] pointArr=point.getPoint();\n    for (int idx=0; idx < arr.length; idx++) {\n      arr[idx]+=u * pointArr[idx];\n    }\n    sum+=u;\n    i++;\n  }\n  MathArrays.scaleInPlace(1.0 / sum,arr);\n  newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n  j++;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1359/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:49:13.665245972 -0500\n@@ -282,7 +282,8 @@\n         points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n         clusters = new ArrayList<CentroidCluster<T>>();\n         membershipMatrix = new double[size][k];\n-        final double[][] oldMatrix = new double[size][k];\n+        updateClusterCenters();\n+\t\tfinal double[][] oldMatrix = new double[size][k];\n \n         // if no points are provided, return an empty list of clusters\n         if (size == 0) {\n@@ -303,7 +304,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -333,7 +333,6 @@\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n-            j++;\n         }\n         clusters.clear();\n         clusters = newClusters;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Delete", 
          "seed": "clusters.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 301, 
          "faulty": "final int max=(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;", 
          "type": "InsertBefore", 
          "seed": "updateMembershipMatrix();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_59/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:41:26.824073229 -0500\n@@ -298,7 +298,8 @@\n         }\n \n         int iteration = 0;\n-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n+        updateMembershipMatrix();\n+\t\tfinal int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n@@ -326,7 +327,6 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n                 i++;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "continue;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 292, 
          "faulty": "initializeMembershipMatrix();", 
          "type": "Delete", 
          "seed": "this.random=random;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_427/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:53.336452767 -0500\n@@ -289,8 +289,6 @@\n             return clusters;\n         }\n \n-        initializeMembershipMatrix();\n-\n         // there is at least one point\n         final int pointDimension = points.get(0).getPoint().length;\n         for (int i = 0; i < k; i++) {\n@@ -303,7 +301,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 332, 
          "faulty": "i++;", 
          "type": "Delete", 
          "seed": "this.maxIterations=maxIterations;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_61/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:41:27.092073904 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -329,7 +328,6 @@\n                     arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n-                i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 338, 
          "faulty": "clusters.clear();", 
          "type": "InsertBefore", 
          "seed": "clusters.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_260/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:42:57.428305592 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -336,6 +335,7 @@\n             j++;\n         }\n         clusters.clear();\n+\t\tclusters.clear();\n         clusters = newClusters;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Replace", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 338, 
          "faulty": "clusters.clear();", 
          "type": "Delete", 
          "seed": "for (int i=0; i < points.size(); i++) {\n  for (int j=0; j < k; j++) {\n    membershipMatrix[i][j]=random.nextDouble();\n  }\n  membershipMatrix[i]=MathArrays.normalizeArray(membershipMatrix[i],1.0);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 332, 
          "faulty": "i++;", 
          "type": "Replace", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_326/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:16.216354733 -0500\n@@ -303,7 +303,7 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n+            difference = calculateMaxMembershipChange(oldMatrix);\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -329,13 +329,14 @@\n                     arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n-                i++;\n+                if (fuzziness <= 1.0d) {\n+\t\t\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t\t\t}\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n-        clusters.clear();\n         clusters = newClusters;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 327, 
          "faulty": "final double[] pointArr=point.getPoint();", 
          "type": "InsertBefore", 
          "seed": "MathArrays.scaleInPlace(1.0 / sum,arr);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1613/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:28.269425205 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -324,7 +323,8 @@\n             double sum = 0.0;\n             for (final T point : points) {\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n-                final double[] pointArr = point.getPoint();\n+                MathArrays.scaleInPlace(1.0 / sum, arr);\n+\t\t\t\tfinal double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n                     arr[idx] += u * pointArr[idx];\n                 }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Delete", 
          "seed": "clusters.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Replace", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 338, 
          "faulty": "clusters.clear();", 
          "type": "Delete", 
          "seed": "this.random=random;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 301, 
          "faulty": "final int max=(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;", 
          "type": "InsertBefore", 
          "seed": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_129/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:41:59.904157168 -0500\n@@ -298,12 +298,15 @@\n         }\n \n         int iteration = 0;\n-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n+        if (size < k) {\n+\t\t\tthrow new NumberIsTooSmallException(size, k, false);\n+\t\t}\n+\t\tfinal int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n+            difference = calculateMaxMembershipChange(oldMatrix);\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -326,7 +329,6 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n                 i++;\n@@ -335,7 +337,6 @@\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n-        clusters.clear();\n         clusters = newClusters;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Delete", 
          "seed": "clusters.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Replace", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_346/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:26.036380546 -0500\n@@ -303,7 +303,7 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n+            difference = calculateMaxMembershipChange(oldMatrix);\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -326,7 +326,6 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n                 i++;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 301, 
          "faulty": "final int max=(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;", 
          "type": "InsertBefore", 
          "seed": "points=Collections.unmodifiableList(new ArrayList<T>(dataPoints));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_567/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:44:40.188578263 -0500\n@@ -298,12 +298,12 @@\n         }\n \n         int iteration = 0;\n-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n+        points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n+\t\tfinal int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Replace", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 318, 
          "faulty": "int j=0;", 
          "type": "InsertBefore", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1205/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:48:35.209155754 -0500\n@@ -303,7 +303,7 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n+            difference = calculateMaxMembershipChange(oldMatrix);\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -315,7 +315,10 @@\n      * Update the cluster centers.\n      */\n     private void updateClusterCenters() {\n-        int j = 0;\n+        if (fuzziness <= 1.0d) {\n+\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t}\n+\t\tint j = 0;\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 336, 
          "faulty": "j++;", 
          "type": "Delete", 
          "seed": "this.random=random;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 301, 
          "faulty": "final int max=(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;", 
          "type": "InsertBefore", 
          "seed": "points=Collections.unmodifiableList(new ArrayList<T>(dataPoints));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1643/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:34.497440414 -0500\n@@ -298,12 +298,12 @@\n         }\n \n         int iteration = 0;\n-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n+        points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n+\t\tfinal int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -333,7 +333,6 @@\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n-            j++;\n         }\n         clusters.clear();\n         clusters = newClusters;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 300, 
          "faulty": "int iteration=0;", 
          "type": "InsertBefore", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 326, 
          "faulty": "final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);", 
          "type": "InsertBefore", 
          "seed": "newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_400/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:42.200423225 -0500\n@@ -297,13 +297,15 @@\n             clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));\n         }\n \n-        int iteration = 0;\n+        if (fuzziness <= 1.0d) {\n+\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t}\n+\t\tint iteration = 0;\n         final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -323,7 +325,8 @@\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n             for (final T point : points) {\n-                final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n+                newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n+\t\t\t\tfinal double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n                     arr[idx] += u * pointArr[idx];\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 322, 
          "faulty": "int i=0;", 
          "type": "InsertBefore", 
          "seed": "updateMembershipMatrix();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 336, 
          "faulty": "j++;", 
          "type": "Delete", 
          "seed": "for (int j=0; j < k; j++) {\n  membershipMatrix[i][j]=random.nextDouble();\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_598/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:44:46.528595393 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -319,7 +318,8 @@\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n-            int i = 0;\n+            updateMembershipMatrix();\n+\t\t\tint i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n             for (final T point : points) {\n@@ -333,7 +333,6 @@\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n-            j++;\n         }\n         clusters.clear();\n         clusters = newClusters;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 331, 
          "faulty": "sum+=u;", 
          "type": "InsertBefore", 
          "seed": "points=new ArrayList<T>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_560/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:44:38.796574506 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -328,7 +327,8 @@\n                 for (int idx = 0; idx < arr.length; idx++) {\n                     arr[idx] += u * pointArr[idx];\n                 }\n-                sum += u;\n+                points = new ArrayList<T>();\n+\t\t\t\tsum += u;\n                 i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "InsertBefore", 
          "seed": "membershipMatrix[i][j]=1.0 / sum;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1687/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:49.789477916 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -326,7 +325,8 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n+                    membershipMatrix[i][j] = 1.0 / sum;\n+\t\t\t\t\tarr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n                 i++;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Replace", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 325, 
          "faulty": "for (final T point : points) {\n  final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n  final double[] pointArr=point.getPoint();\n  for (int idx=0; idx < arr.length; idx++) {\n    arr[idx]+=u * pointArr[idx];\n  }\n  sum+=u;\n  i++;\n}", 
          "type": "InsertBefore", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1602/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:26.013419704 -0500\n@@ -303,7 +303,7 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n+            difference = calculateMaxMembershipChange(oldMatrix);\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -322,7 +322,8 @@\n             int i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n-            for (final T point : points) {\n+            clusters = new ArrayList<CentroidCluster<T>>();\n+\t\t\tfor (final T point : points) {\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 350, 
          "faulty": "int newCluster=-1;", 
          "type": "InsertBefore", 
          "seed": "for (int j=0; j < k; j++) {\n  membershipMatrix[i][j]=random.nextDouble();\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 338, 
          "faulty": "clusters.clear();", 
          "type": "InsertBefore", 
          "seed": "clusters.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_896/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:46:38.116890497 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -336,6 +335,7 @@\n             j++;\n         }\n         clusters.clear();\n+\t\tclusters.clear();\n         clusters = newClusters;\n     }\n \n@@ -347,7 +347,10 @@\n         for (int i = 0; i < points.size(); i++) {\n             final T point = points.get(i);\n             double maxMembership = 0.0;\n-            int newCluster = -1;\n+            for (int j = 0; j < k; j++) {\n+\t\t\t\tmembershipMatrix[i][j] = random.nextDouble();\n+\t\t\t}\n+\t\t\tint newCluster = -1;\n             for (int j = 0; j < clusters.size(); j++) {\n                 double sum = 0.0;\n                 final double distA = FastMath.abs(distance(point, clusters.get(j).getCenter()));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Replace", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 285, 
          "faulty": "final double[][] oldMatrix=new double[size][k];", 
          "type": "InsertBefore", 
          "seed": "updateClusterCenters();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_888/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:46:35.228884139 -0500\n@@ -282,7 +282,8 @@\n         points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n         clusters = new ArrayList<CentroidCluster<T>>();\n         membershipMatrix = new double[size][k];\n-        final double[][] oldMatrix = new double[size][k];\n+        updateClusterCenters();\n+\t\tfinal double[][] oldMatrix = new double[size][k];\n \n         // if no points are provided, return an empty list of clusters\n         if (size == 0) {\n@@ -303,7 +304,7 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n+            difference = calculateMaxMembershipChange(oldMatrix);\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Replace", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 300, 
          "faulty": "int iteration=0;", 
          "type": "InsertBefore", 
          "seed": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 335, 
          "faulty": "newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));", 
          "type": "Replace", 
          "seed": "points=new ArrayList<T>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_410/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:44.088428227 -0500\n@@ -297,13 +297,16 @@\n             clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));\n         }\n \n-        int iteration = 0;\n+        if (size < k) {\n+\t\t\tthrow new NumberIsTooSmallException(size, k, false);\n+\t\t}\n+\t\tint iteration = 0;\n         final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n+            difference = calculateMaxMembershipChange(oldMatrix);\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -332,7 +335,7 @@\n                 i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n-            newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n+            points = new ArrayList<T>();\n             j++;\n         }\n         clusters.clear();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 336, 
          "faulty": "j++;", 
          "type": "Delete", 
          "seed": "for (int j=0; j < k; j++) {\n  membershipMatrix[i][j]=random.nextDouble();\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_295/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:04.372323716 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -333,7 +332,6 @@\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n-            j++;\n         }\n         clusters.clear();\n         clusters = newClusters;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 322, 
          "faulty": "int i=0;", 
          "type": "InsertBefore", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_671/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:45:13.732669297 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -319,7 +318,10 @@\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n-            int i = 0;\n+            if (fuzziness <= 1.0d) {\n+\t\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t\t}\n+\t\t\tint i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n             for (final T point : points) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "for (int i=0; i < k; i++) {\n  clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 339, 
          "faulty": "clusters=newClusters;", 
          "type": "Replace", 
          "seed": "j++;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1572/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:20.417406083 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -336,7 +335,7 @@\n             j++;\n         }\n         clusters.clear();\n-        clusters = newClusters;\n+        j++;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Delete", 
          "seed": "clusters.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 331, 
          "faulty": "sum+=u;", 
          "type": "InsertBefore", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_204/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:42:39.884259998 -0500\n@@ -326,9 +326,11 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n                 }\n-                sum += u;\n+                if (fuzziness <= 1.0d) {\n+\t\t\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t\t\t}\n+\t\t\t\tsum += u;\n                 i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 334, 
          "faulty": "MathArrays.scaleInPlace(1.0 / sum,arr);", 
          "type": "Replace", 
          "seed": "i++;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_313/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:13.784348354 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -331,7 +330,7 @@\n                 sum += u;\n                 i++;\n             }\n-            MathArrays.scaleInPlace(1.0 / sum, arr);\n+            i++;\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Delete", 
          "seed": "membershipMatrix[i][j]=1.0 / sum;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 277, 
          "faulty": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}", 
          "type": "InsertBefore", 
          "seed": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_996/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:47:28.297002403 -0500\n@@ -273,7 +273,10 @@\n \n         final int size = dataPoints.size();\n \n-        // number of clusters has to be smaller or equal the number of data points\n+        if (size < k) {\n+\t\t\tthrow new NumberIsTooSmallException(size, k, false);\n+\t\t}\n+\t\t// number of clusters has to be smaller or equal the number of data points\n         if (size < k) {\n             throw new NumberIsTooSmallException(size, k, false);\n         }\n@@ -303,7 +306,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -326,7 +328,6 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n                 i++;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 277, 
          "faulty": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_538/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:44:34.180562062 -0500\n@@ -273,11 +273,6 @@\n \n         final int size = dataPoints.size();\n \n-        // number of clusters has to be smaller or equal the number of data points\n-        if (size < k) {\n-            throw new NumberIsTooSmallException(size, k, false);\n-        }\n-\n         // copy the input collection to an unmodifiable list with indexed access\n         points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n         clusters = new ArrayList<CentroidCluster<T>>();\n@@ -303,7 +298,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 288, 
          "faulty": "if (size == 0) {\n  return clusters;\n}", 
          "type": "InsertBefore", 
          "seed": "initializeMembershipMatrix();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 292, 
          "faulty": "initializeMembershipMatrix();", 
          "type": "Delete", 
          "seed": "this.epsilon=epsilon;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1697/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:51.781482817 -0500\n@@ -284,13 +284,12 @@\n         membershipMatrix = new double[size][k];\n         final double[][] oldMatrix = new double[size][k];\n \n-        // if no points are provided, return an empty list of clusters\n+        initializeMembershipMatrix();\n+\t\t// if no points are provided, return an empty list of clusters\n         if (size == 0) {\n             return clusters;\n         }\n \n-        initializeMembershipMatrix();\n-\n         // there is at least one point\n         final int pointDimension = points.get(0).getPoint().length;\n         for (int i = 0; i < k; i++) {\n@@ -303,7 +302,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 339, 
          "faulty": "clusters=newClusters;", 
          "type": "Replace", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_574/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:44:41.524581870 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -336,7 +335,9 @@\n             j++;\n         }\n         clusters.clear();\n-        clusters = newClusters;\n+        if (fuzziness <= 1.0d) {\n+\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t}\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 288, 
          "faulty": "if (size == 0) {\n  return clusters;\n}", 
          "type": "InsertBefore", 
          "seed": "initializeMembershipMatrix();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 335, 
          "faulty": "newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));", 
          "type": "Delete", 
          "seed": "for (final T point : points) {\n  final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n  final double[] pointArr=point.getPoint();\n  for (int idx=0; idx < arr.length; idx++) {\n    arr[idx]+=u * pointArr[idx];\n  }\n  sum+=u;\n  i++;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1523/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:10.781382700 -0500\n@@ -284,7 +284,8 @@\n         membershipMatrix = new double[size][k];\n         final double[][] oldMatrix = new double[size][k];\n \n-        // if no points are provided, return an empty list of clusters\n+        initializeMembershipMatrix();\n+\t\t// if no points are provided, return an empty list of clusters\n         if (size == 0) {\n             return clusters;\n         }\n@@ -303,7 +304,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -332,7 +332,6 @@\n                 i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n-            newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n         clusters.clear();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "for (int i=0; i < k; i++) {\n  clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 288, 
          "faulty": "if (size == 0) {\n  return clusters;\n}", 
          "type": "InsertBefore", 
          "seed": "initializeMembershipMatrix();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 326, 
          "faulty": "final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);", 
          "type": "InsertBefore", 
          "seed": "j++;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 338, 
          "faulty": "clusters.clear();", 
          "type": "InsertBefore", 
          "seed": "clusters.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_686/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:45:22.324692771 -0500\n@@ -284,7 +284,8 @@\n         membershipMatrix = new double[size][k];\n         final double[][] oldMatrix = new double[size][k];\n \n-        // if no points are provided, return an empty list of clusters\n+        initializeMembershipMatrix();\n+\t\t// if no points are provided, return an empty list of clusters\n         if (size == 0) {\n             return clusters;\n         }\n@@ -303,7 +304,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -323,7 +323,8 @@\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n             for (final T point : points) {\n-                final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n+                j++;\n+\t\t\t\tfinal double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n                     arr[idx] += u * pointArr[idx];\n@@ -336,6 +337,7 @@\n             j++;\n         }\n         clusters.clear();\n+\t\tclusters.clear();\n         clusters = newClusters;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "continue;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 320, 
          "faulty": "for (final CentroidCluster<T> cluster : clusters) {\n  final Clusterable center=cluster.getCenter();\n  int i=0;\n  double[] arr=new double[center.getPoint().length];\n  double sum=0.0;\n  for (  final T point : points) {\n    final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n    final double[] pointArr=point.getPoint();\n    for (int idx=0; idx < arr.length; idx++) {\n      arr[idx]+=u * pointArr[idx];\n    }\n    sum+=u;\n    i++;\n  }\n  MathArrays.scaleInPlace(1.0 / sum,arr);\n  newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n  j++;\n}", 
          "type": "Delete", 
          "seed": "this.epsilon=epsilon;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_318/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:14.532350315 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -317,24 +316,6 @@\n     private void updateClusterCenters() {\n         int j = 0;\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n-        for (final CentroidCluster<T> cluster : clusters) {\n-            final Clusterable center = cluster.getCenter();\n-            int i = 0;\n-            double[] arr = new double[center.getPoint().length];\n-            double sum = 0.0;\n-            for (final T point : points) {\n-                final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n-                final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n-                sum += u;\n-                i++;\n-            }\n-            MathArrays.scaleInPlace(1.0 / sum, arr);\n-            newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n-            j++;\n-        }\n         clusters.clear();\n         clusters = newClusters;\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 322, 
          "faulty": "int i=0;", 
          "type": "InsertBefore", 
          "seed": "updateMembershipMatrix();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "continue;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 325, 
          "faulty": "for (final T point : points) {\n  final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n  final double[] pointArr=point.getPoint();\n  for (int idx=0; idx < arr.length; idx++) {\n    arr[idx]+=u * pointArr[idx];\n  }\n  sum+=u;\n  i++;\n}", 
          "type": "Delete", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_450/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:58.944467685 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -319,18 +318,10 @@\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n-            int i = 0;\n+            updateMembershipMatrix();\n+\t\t\tint i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n-            for (final T point : points) {\n-                final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n-                final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n-                sum += u;\n-                i++;\n-            }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 284, 
          "faulty": "membershipMatrix=new double[size][k];", 
          "type": "InsertBefore", 
          "seed": "if (size == 0) {\n  return clusters;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_266/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:42:58.536308480 -0500\n@@ -281,7 +281,10 @@\n         // copy the input collection to an unmodifiable list with indexed access\n         points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n         clusters = new ArrayList<CentroidCluster<T>>();\n-        membershipMatrix = new double[size][k];\n+        if (size == 0) {\n+\t\t\treturn clusters;\n+\t\t}\n+\t\tmembershipMatrix = new double[size][k];\n         final double[][] oldMatrix = new double[size][k];\n \n         // if no points are provided, return an empty list of clusters\n@@ -303,7 +306,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 339, 
          "faulty": "clusters=newClusters;", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_504/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:44:09.908496934 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -336,7 +335,6 @@\n             j++;\n         }\n         clusters.clear();\n-        clusters = newClusters;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 338, 
          "faulty": "clusters.clear();", 
          "type": "Delete", 
          "seed": "clusters.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 332, 
          "faulty": "i++;", 
          "type": "Delete", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1269/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:48:48.201186066 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -329,13 +328,11 @@\n                     arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n-                i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n-        clusters.clear();\n         clusters = newClusters;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 285, 
          "faulty": "final double[][] oldMatrix=new double[size][k];", 
          "type": "InsertBefore", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 325, 
          "faulty": "for (final T point : points) {\n  final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n  final double[] pointArr=point.getPoint();\n  for (int idx=0; idx < arr.length; idx++) {\n    arr[idx]+=u * pointArr[idx];\n  }\n  sum+=u;\n  i++;\n}", 
          "type": "Delete", 
          "seed": "this.k=k;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1325/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:49:05.493226675 -0500\n@@ -282,7 +282,8 @@\n         points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n         clusters = new ArrayList<CentroidCluster<T>>();\n         membershipMatrix = new double[size][k];\n-        final double[][] oldMatrix = new double[size][k];\n+        updateClusterCenters();\n+\t\tfinal double[][] oldMatrix = new double[size][k];\n \n         // if no points are provided, return an empty list of clusters\n         if (size == 0) {\n@@ -303,7 +304,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -322,15 +322,6 @@\n             int i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n-            for (final T point : points) {\n-                final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n-                final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n-                sum += u;\n-                i++;\n-            }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 302, 
          "faulty": "double difference=0.0;", 
          "type": "InsertBefore", 
          "seed": "initializeMembershipMatrix();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1510/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:08.537377267 -0500\n@@ -299,11 +299,11 @@\n \n         int iteration = 0;\n         final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n-        double difference = 0.0;\n+        initializeMembershipMatrix();\n+\t\tdouble difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 302, 
          "faulty": "double difference=0.0;", 
          "type": "InsertBefore", 
          "seed": "updateMembershipMatrix();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_793/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:45:56.024785452 -0500\n@@ -299,11 +299,11 @@\n \n         int iteration = 0;\n         final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n-        double difference = 0.0;\n+        updateMembershipMatrix();\n+\t\tdouble difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 335, 
          "faulty": "newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));", 
          "type": "Replace", 
          "seed": "points=new ArrayList<T>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1086/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:48:03.957083550 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -332,7 +331,7 @@\n                 i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n-            newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n+            points = new ArrayList<T>();\n             j++;\n         }\n         clusters.clear();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 334, 
          "faulty": "MathArrays.scaleInPlace(1.0 / sum,arr);", 
          "type": "Replace", 
          "seed": "i++;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 325, 
          "faulty": "for (final T point : points) {\n  final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n  final double[] pointArr=point.getPoint();\n  for (int idx=0; idx < arr.length; idx++) {\n    arr[idx]+=u * pointArr[idx];\n  }\n  sum+=u;\n  i++;\n}", 
          "type": "Delete", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1570/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:20.189405528 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -322,16 +321,7 @@\n             int i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n-            for (final T point : points) {\n-                final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n-                final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n-                sum += u;\n-                i++;\n-            }\n-            MathArrays.scaleInPlace(1.0 / sum, arr);\n+            i++;\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 301, 
          "faulty": "final int max=(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;", 
          "type": "InsertBefore", 
          "seed": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_354/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:33.440400066 -0500\n@@ -298,12 +298,14 @@\n         }\n \n         int iteration = 0;\n-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n+        if (size < k) {\n+\t\t\tthrow new NumberIsTooSmallException(size, k, false);\n+\t\t}\n+\t\tfinal int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 320, 
          "faulty": "for (final CentroidCluster<T> cluster : clusters) {\n  final Clusterable center=cluster.getCenter();\n  int i=0;\n  double[] arr=new double[center.getPoint().length];\n  double sum=0.0;\n  for (  final T point : points) {\n    final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n    final double[] pointArr=point.getPoint();\n    for (int idx=0; idx < arr.length; idx++) {\n      arr[idx]+=u * pointArr[idx];\n    }\n    sum+=u;\n    i++;\n  }\n  MathArrays.scaleInPlace(1.0 / sum,arr);\n  newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n  j++;\n}", 
          "type": "Delete", 
          "seed": "this.epsilon=epsilon;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 288, 
          "faulty": "if (size == 0) {\n  return clusters;\n}", 
          "type": "Delete", 
          "seed": "this.membershipMatrix=null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1515/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:09.221378922 -0500\n@@ -284,11 +284,6 @@\n         membershipMatrix = new double[size][k];\n         final double[][] oldMatrix = new double[size][k];\n \n-        // if no points are provided, return an empty list of clusters\n-        if (size == 0) {\n-            return clusters;\n-        }\n-\n         initializeMembershipMatrix();\n \n         // there is at least one point\n@@ -303,7 +298,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -317,24 +311,6 @@\n     private void updateClusterCenters() {\n         int j = 0;\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n-        for (final CentroidCluster<T> cluster : clusters) {\n-            final Clusterable center = cluster.getCenter();\n-            int i = 0;\n-            double[] arr = new double[center.getPoint().length];\n-            double sum = 0.0;\n-            for (final T point : points) {\n-                final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n-                final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n-                sum += u;\n-                i++;\n-            }\n-            MathArrays.scaleInPlace(1.0 / sum, arr);\n-            newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n-            j++;\n-        }\n         clusters.clear();\n         clusters = newClusters;\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "points=new ArrayList<T>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 300, 
          "faulty": "int iteration=0;", 
          "type": "InsertBefore", 
          "seed": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_465/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:44:01.648474889 -0500\n@@ -297,13 +297,15 @@\n             clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));\n         }\n \n-        int iteration = 0;\n+        if (size < k) {\n+\t\t\tthrow new NumberIsTooSmallException(size, k, false);\n+\t\t}\n+\t\tint iteration = 0;\n         final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 277, 
          "faulty": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}", 
          "type": "InsertBefore", 
          "seed": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Replace", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 328, 
          "faulty": "for (int idx=0; idx < arr.length; idx++) {\n  arr[idx]+=u * pointArr[idx];\n}", 
          "type": "Replace", 
          "seed": "points.add(point);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_740/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:45:39.880740933 -0500\n@@ -273,7 +273,10 @@\n \n         final int size = dataPoints.size();\n \n-        // number of clusters has to be smaller or equal the number of data points\n+        if (size < k) {\n+\t\t\tthrow new NumberIsTooSmallException(size, k, false);\n+\t\t}\n+\t\t// number of clusters has to be smaller or equal the number of data points\n         if (size < k) {\n             throw new NumberIsTooSmallException(size, k, false);\n         }\n@@ -303,7 +306,7 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n+            difference = calculateMaxMembershipChange(oldMatrix);\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -325,9 +328,7 @@\n             for (final T point : points) {\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n+                points.add(point);\n                 sum += u;\n                 i++;\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "continue;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 325, 
          "faulty": "for (final T point : points) {\n  final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n  final double[] pointArr=point.getPoint();\n  for (int idx=0; idx < arr.length; idx++) {\n    arr[idx]+=u * pointArr[idx];\n  }\n  sum+=u;\n  i++;\n}", 
          "type": "InsertBefore", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_579/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:44:42.484584462 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -322,7 +321,8 @@\n             int i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n-            for (final T point : points) {\n+            clusters = new ArrayList<CentroidCluster<T>>();\n+\t\t\tfor (final T point : points) {\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 277, 
          "faulty": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}", 
          "type": "InsertBefore", 
          "seed": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 332, 
          "faulty": "i++;", 
          "type": "Delete", 
          "seed": "this.points=null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1284/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:48:51.029192686 -0500\n@@ -273,7 +273,10 @@\n \n         final int size = dataPoints.size();\n \n-        // number of clusters has to be smaller or equal the number of data points\n+        if (size < k) {\n+\t\t\tthrow new NumberIsTooSmallException(size, k, false);\n+\t\t}\n+\t\t// number of clusters has to be smaller or equal the number of data points\n         if (size < k) {\n             throw new NumberIsTooSmallException(size, k, false);\n         }\n@@ -303,7 +306,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -329,7 +331,6 @@\n                     arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n-                i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 300, 
          "faulty": "int iteration=0;", 
          "type": "InsertBefore", 
          "seed": "membershipMatrix=new double[size][k];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 301, 
          "faulty": "final int max=(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;", 
          "type": "InsertBefore", 
          "seed": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1035/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:47:47.989047048 -0500\n@@ -297,13 +297,16 @@\n             clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));\n         }\n \n-        int iteration = 0;\n-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n+        membershipMatrix = new double[size][k];\n+\t\tint iteration = 0;\n+        if (size < k) {\n+\t\t\tthrow new NumberIsTooSmallException(size, k, false);\n+\t\t}\n+\t\tfinal int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 302, 
          "faulty": "double difference=0.0;", 
          "type": "InsertBefore", 
          "seed": "initializeMembershipMatrix();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 339, 
          "faulty": "clusters=newClusters;", 
          "type": "Replace", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1507/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:08.093376192 -0500\n@@ -299,11 +299,11 @@\n \n         int iteration = 0;\n         final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n-        double difference = 0.0;\n+        initializeMembershipMatrix();\n+\t\tdouble difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -336,7 +336,7 @@\n             j++;\n         }\n         clusters.clear();\n-        clusters = newClusters;\n+        clusters = new ArrayList<CentroidCluster<T>>();\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 277, 
          "faulty": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}", 
          "type": "Delete", 
          "seed": "for (int i=0; i < points.size(); i++) {\n  final T point=points.get(i);\n  double maxMembership=0.0;\n  int newCluster=-1;\n  for (int j=0; j < clusters.size(); j++) {\n    double sum=0.0;\n    final double distA=FastMath.abs(distance(point,clusters.get(j).getCenter()));\n    for (    final CentroidCluster<T> c : clusters) {\n      final double distB=FastMath.abs(distance(point,c.getCenter()));\n      sum+=FastMath.pow(distA / distB,2.0 / (fuzziness - 1.0));\n    }\n    membershipMatrix[i][j]=1.0 / sum;\n    if (membershipMatrix[i][j] > maxMembership) {\n      maxMembership=membershipMatrix[i][j];\n      newCluster=j;\n    }\n  }\n  clusters.get(newCluster).addPoint(point);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "continue;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 284, 
          "faulty": "membershipMatrix=new double[size][k];", 
          "type": "InsertBefore", 
          "seed": "if (size == 0) {\n  return clusters;\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_454/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:59.624469496 -0500\n@@ -273,15 +273,13 @@\n \n         final int size = dataPoints.size();\n \n-        // number of clusters has to be smaller or equal the number of data points\n-        if (size < k) {\n-            throw new NumberIsTooSmallException(size, k, false);\n-        }\n-\n         // copy the input collection to an unmodifiable list with indexed access\n         points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n         clusters = new ArrayList<CentroidCluster<T>>();\n-        membershipMatrix = new double[size][k];\n+        if (size == 0) {\n+\t\t\treturn clusters;\n+\t\t}\n+\t\tmembershipMatrix = new double[size][k];\n         final double[][] oldMatrix = new double[size][k];\n \n         // if no points are provided, return an empty list of clusters\n@@ -303,7 +301,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Replace", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 334, 
          "faulty": "MathArrays.scaleInPlace(1.0 / sum,arr);", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 331, 
          "faulty": "sum+=u;", 
          "type": "Replace", 
          "seed": "points=new ArrayList<T>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1136/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:48:20.281121139 -0500\n@@ -303,7 +303,7 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n+            difference = calculateMaxMembershipChange(oldMatrix);\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -328,10 +328,9 @@\n                 for (int idx = 0; idx < arr.length; idx++) {\n                     arr[idx] += u * pointArr[idx];\n                 }\n-                sum += u;\n+                points = new ArrayList<T>();\n                 i++;\n             }\n-            MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 322, 
          "faulty": "int i=0;", 
          "type": "InsertBefore", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 336, 
          "faulty": "j++;", 
          "type": "Delete", 
          "seed": "this.random=random;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 335, 
          "faulty": "newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));", 
          "type": "Delete", 
          "seed": "points=new ArrayList<T>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_731/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:45:38.072735961 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -319,7 +318,8 @@\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n-            int i = 0;\n+            clusters = new ArrayList<CentroidCluster<T>>();\n+\t\t\tint i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n             for (final T point : points) {\n@@ -332,8 +332,6 @@\n                 i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n-            newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n-            j++;\n         }\n         clusters.clear();\n         clusters = newClusters;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 320, 
          "faulty": "for (final CentroidCluster<T> cluster : clusters) {\n  final Clusterable center=cluster.getCenter();\n  int i=0;\n  double[] arr=new double[center.getPoint().length];\n  double sum=0.0;\n  for (  final T point : points) {\n    final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n    final double[] pointArr=point.getPoint();\n    for (int idx=0; idx < arr.length; idx++) {\n      arr[idx]+=u * pointArr[idx];\n    }\n    sum+=u;\n    i++;\n  }\n  MathArrays.scaleInPlace(1.0 / sum,arr);\n  newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n  j++;\n}", 
          "type": "Delete", 
          "seed": "this.epsilon=epsilon;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 301, 
          "faulty": "final int max=(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;", 
          "type": "InsertBefore", 
          "seed": "points=Collections.unmodifiableList(new ArrayList<T>(dataPoints));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 335, 
          "faulty": "newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));", 
          "type": "Delete", 
          "seed": "for (int i=0; i < points.size(); i++) {\n  for (int j=0; j < k; j++) {\n    membershipMatrix[i][j]=random.nextDouble();\n  }\n  membershipMatrix[i]=MathArrays.normalizeArray(membershipMatrix[i],1.0);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1294/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:48:53.121197588 -0500\n@@ -298,12 +298,12 @@\n         }\n \n         int iteration = 0;\n-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n+        points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n+\t\tfinal int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -317,24 +317,6 @@\n     private void updateClusterCenters() {\n         int j = 0;\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n-        for (final CentroidCluster<T> cluster : clusters) {\n-            final Clusterable center = cluster.getCenter();\n-            int i = 0;\n-            double[] arr = new double[center.getPoint().length];\n-            double sum = 0.0;\n-            for (final T point : points) {\n-                final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n-                final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n-                sum += u;\n-                i++;\n-            }\n-            MathArrays.scaleInPlace(1.0 / sum, arr);\n-            newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n-            j++;\n-        }\n         clusters.clear();\n         clusters = newClusters;\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Delete", 
          "seed": "membershipMatrix[i][j]=1.0 / sum;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 334, 
          "faulty": "MathArrays.scaleInPlace(1.0 / sum,arr);", 
          "type": "Delete", 
          "seed": "break;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 332, 
          "faulty": "i++;", 
          "type": "Delete", 
          "seed": "membershipMatrix[i][j]=random.nextDouble();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_982/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:47:25.796996763 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -326,12 +325,9 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n-                i++;\n             }\n-            MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_112/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:41:56.108147482 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Replace", 
          "seed": "membershipMatrix[i][j]=1.0 / sum;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 339, 
          "faulty": "clusters=newClusters;", 
          "type": "Delete", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1323/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:49:05.265226137 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -326,7 +325,7 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n+                    membershipMatrix[i][j] = 1.0 / sum;\n                 }\n                 sum += u;\n                 i++;\n@@ -336,7 +335,6 @@\n             j++;\n         }\n         clusters.clear();\n-        clusters = newClusters;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 295, 
          "faulty": "final int pointDimension=points.get(0).getPoint().length;", 
          "type": "InsertBefore", 
          "seed": "saveMembershipMatrix(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 339, 
          "faulty": "clusters=newClusters;", 
          "type": "Delete", 
          "seed": "updateMembershipMatrix();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_153/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:42:10.800185043 -0500\n@@ -291,7 +291,8 @@\n \n         initializeMembershipMatrix();\n \n-        // there is at least one point\n+        saveMembershipMatrix(oldMatrix);\n+\t\t// there is at least one point\n         final int pointDimension = points.get(0).getPoint().length;\n         for (int i = 0; i < k; i++) {\n             clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));\n@@ -303,7 +304,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -336,7 +336,6 @@\n             j++;\n         }\n         clusters.clear();\n-        clusters = newClusters;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 338, 
          "faulty": "clusters.clear();", 
          "type": "InsertBefore", 
          "seed": "clusters.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 292, 
          "faulty": "initializeMembershipMatrix();", 
          "type": "Delete", 
          "seed": "this.epsilon=epsilon;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_272/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:42:59.464310901 -0500\n@@ -289,8 +289,6 @@\n             return clusters;\n         }\n \n-        initializeMembershipMatrix();\n-\n         // there is at least one point\n         final int pointDimension = points.get(0).getPoint().length;\n         for (int i = 0; i < k; i++) {\n@@ -303,7 +301,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -336,6 +333,7 @@\n             j++;\n         }\n         clusters.clear();\n+\t\tclusters.clear();\n         clusters = newClusters;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 285, 
          "faulty": "final double[][] oldMatrix=new double[size][k];", 
          "type": "InsertBefore", 
          "seed": "initializeMembershipMatrix();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1049/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:47:50.449052654 -0500\n@@ -282,7 +282,8 @@\n         points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n         clusters = new ArrayList<CentroidCluster<T>>();\n         membershipMatrix = new double[size][k];\n-        final double[][] oldMatrix = new double[size][k];\n+        initializeMembershipMatrix();\n+\t\tfinal double[][] oldMatrix = new double[size][k];\n \n         // if no points are provided, return an empty list of clusters\n         if (size == 0) {\n@@ -303,7 +304,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 325, 
          "faulty": "for (final T point : points) {\n  final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n  final double[] pointArr=point.getPoint();\n  for (int idx=0; idx < arr.length; idx++) {\n    arr[idx]+=u * pointArr[idx];\n  }\n  sum+=u;\n  i++;\n}", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 327, 
          "faulty": "final double[] pointArr=point.getPoint();", 
          "type": "InsertBefore", 
          "seed": "continue;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1001/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:47:34.989017529 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -322,15 +321,6 @@\n             int i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n-            for (final T point : points) {\n-                final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n-                final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n-                sum += u;\n-                i++;\n-            }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 300, 
          "faulty": "int iteration=0;", 
          "type": "InsertBefore", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_756/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:45:43.068749706 -0500\n@@ -297,13 +297,15 @@\n             clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));\n         }\n \n-        int iteration = 0;\n+        if (fuzziness <= 1.0d) {\n+\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t}\n+\t\tint iteration = 0;\n         final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 332, 
          "faulty": "i++;", 
          "type": "Replace", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_395/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:41.316420886 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -329,7 +328,9 @@\n                     arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n-                i++;\n+                if (fuzziness <= 1.0d) {\n+\t\t\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t\t\t}\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Delete", 
          "seed": "continue;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 339, 
          "faulty": "clusters=newClusters;", 
          "type": "Replace", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1198/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:48:33.889152683 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -326,7 +325,6 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n                 i++;\n@@ -336,7 +334,9 @@\n             j++;\n         }\n         clusters.clear();\n-        clusters = newClusters;\n+        if (fuzziness <= 1.0d) {\n+\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t}\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Replace", 
          "seed": "clusters.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 320, 
          "faulty": "for (final CentroidCluster<T> cluster : clusters) {\n  final Clusterable center=cluster.getCenter();\n  int i=0;\n  double[] arr=new double[center.getPoint().length];\n  double sum=0.0;\n  for (  final T point : points) {\n    final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n    final double[] pointArr=point.getPoint();\n    for (int idx=0; idx < arr.length; idx++) {\n      arr[idx]+=u * pointArr[idx];\n    }\n    sum+=u;\n    i++;\n  }\n  MathArrays.scaleInPlace(1.0 / sum,arr);\n  newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n  j++;\n}", 
          "type": "Delete", 
          "seed": "this.epsilon=epsilon;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_446/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:58.264465875 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -317,24 +316,6 @@\n     private void updateClusterCenters() {\n         int j = 0;\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n-        for (final CentroidCluster<T> cluster : clusters) {\n-            final Clusterable center = cluster.getCenter();\n-            int i = 0;\n-            double[] arr = new double[center.getPoint().length];\n-            double sum = 0.0;\n-            for (final T point : points) {\n-                final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n-                final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n-                sum += u;\n-                i++;\n-            }\n-            MathArrays.scaleInPlace(1.0 / sum, arr);\n-            newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n-            j++;\n-        }\n         clusters.clear();\n         clusters = newClusters;\n     }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 322, 
          "faulty": "int i=0;", 
          "type": "InsertBefore", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 336, 
          "faulty": "j++;", 
          "type": "Delete", 
          "seed": "for (int j=0; j < k; j++) {\n  membershipMatrix[i][j]=random.nextDouble();\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1047/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:47:50.221052135 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -319,7 +318,8 @@\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n-            int i = 0;\n+            clusters = new ArrayList<CentroidCluster<T>>();\n+\t\t\tint i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n             for (final T point : points) {\n@@ -333,7 +333,6 @@\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n-            j++;\n         }\n         clusters.clear();\n         clusters = newClusters;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 300, 
          "faulty": "int iteration=0;", 
          "type": "InsertBefore", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 302, 
          "faulty": "double difference=0.0;", 
          "type": "InsertBefore", 
          "seed": "initializeMembershipMatrix();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_475/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:44:03.728480433 -0500\n@@ -297,13 +297,16 @@\n             clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));\n         }\n \n-        int iteration = 0;\n+        if (fuzziness <= 1.0d) {\n+\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t}\n+\t\tint iteration = 0;\n         final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n-        double difference = 0.0;\n+        initializeMembershipMatrix();\n+\t\tdouble difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 323, 
          "faulty": "double[] arr=new double[center.getPoint().length];", 
          "type": "InsertBefore", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "continue;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 332, 
          "faulty": "i++;", 
          "type": "Delete", 
          "seed": "this.points=null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1264/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:48:47.281183914 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -320,7 +319,8 @@\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n             int i = 0;\n-            double[] arr = new double[center.getPoint().length];\n+            clusters = new ArrayList<CentroidCluster<T>>();\n+\t\t\tdouble[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n             for (final T point : points) {\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n@@ -329,7 +329,6 @@\n                     arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n-                i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Replace", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 288, 
          "faulty": "if (size == 0) {\n  return clusters;\n}", 
          "type": "Delete", 
          "seed": "this.points=null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1012/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:47:43.025035755 -0500\n@@ -284,11 +284,6 @@\n         membershipMatrix = new double[size][k];\n         final double[][] oldMatrix = new double[size][k];\n \n-        // if no points are provided, return an empty list of clusters\n-        if (size == 0) {\n-            return clusters;\n-        }\n-\n         initializeMembershipMatrix();\n \n         // there is at least one point\n@@ -303,7 +298,7 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n+            difference = calculateMaxMembershipChange(oldMatrix);\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 277, 
          "faulty": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}", 
          "type": "InsertBefore", 
          "seed": "points=Collections.unmodifiableList(new ArrayList<T>(dataPoints));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 335, 
          "faulty": "newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));", 
          "type": "Delete", 
          "seed": "for (int i=0; i < points.size(); i++) {\n  for (int j=0; j < k; j++) {\n    membershipMatrix[i][j]=random.nextDouble();\n  }\n  membershipMatrix[i]=MathArrays.normalizeArray(membershipMatrix[i],1.0);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1670/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:46.141468949 -0500\n@@ -273,7 +273,8 @@\n \n         final int size = dataPoints.size();\n \n-        // number of clusters has to be smaller or equal the number of data points\n+        points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n+\t\t// number of clusters has to be smaller or equal the number of data points\n         if (size < k) {\n             throw new NumberIsTooSmallException(size, k, false);\n         }\n@@ -303,7 +304,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -332,7 +332,6 @@\n                 i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n-            newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n         clusters.clear();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 328, 
          "faulty": "for (int idx=0; idx < arr.length; idx++) {\n  arr[idx]+=u * pointArr[idx];\n}", 
          "type": "InsertBefore", 
          "seed": "for (int idx=0; idx < arr.length; idx++) {\n  arr[idx]+=u * pointArr[idx];\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_361/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:34.724403457 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -326,6 +325,9 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n+\t\t\t\t\tarr[idx] += u * pointArr[idx];\n+\t\t\t\t}\n+\t\t\t\tfor (int idx = 0; idx < arr.length; idx++) {\n                     arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Delete", 
          "seed": "membershipMatrix[i][j]=1.0 / sum;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Replace", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 328, 
          "faulty": "for (int idx=0; idx < arr.length; idx++) {\n  arr[idx]+=u * pointArr[idx];\n}", 
          "type": "Replace", 
          "seed": "points.add(point);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 332, 
          "faulty": "i++;", 
          "type": "Replace", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_229/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:42:50.924288655 -0500\n@@ -303,7 +303,7 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n+            difference = calculateMaxMembershipChange(oldMatrix);\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -325,11 +325,11 @@\n             for (final T point : points) {\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n+                points.add(point);\n                 sum += u;\n-                i++;\n+                if (fuzziness <= 1.0d) {\n+\t\t\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t\t\t}\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 325, 
          "faulty": "for (final T point : points) {\n  final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n  final double[] pointArr=point.getPoint();\n  for (int idx=0; idx < arr.length; idx++) {\n    arr[idx]+=u * pointArr[idx];\n  }\n  sum+=u;\n  i++;\n}", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_235/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:42:52.092291694 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -322,15 +321,6 @@\n             int i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n-            for (final T point : points) {\n-                final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n-                final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n-                sum += u;\n-                i++;\n-            }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 277, 
          "faulty": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}", 
          "type": "Delete", 
          "seed": "points=Collections.unmodifiableList(new ArrayList<T>(dataPoints));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 338, 
          "faulty": "clusters.clear();", 
          "type": "InsertBefore", 
          "seed": "clusters.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_797/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:45:56.696787309 -0500\n@@ -273,11 +273,6 @@\n \n         final int size = dataPoints.size();\n \n-        // number of clusters has to be smaller or equal the number of data points\n-        if (size < k) {\n-            throw new NumberIsTooSmallException(size, k, false);\n-        }\n-\n         // copy the input collection to an unmodifiable list with indexed access\n         points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n         clusters = new ArrayList<CentroidCluster<T>>();\n@@ -303,7 +298,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -336,6 +330,7 @@\n             j++;\n         }\n         clusters.clear();\n+\t\tclusters.clear();\n         clusters = newClusters;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Delete", 
          "seed": "membershipMatrix[i][j]=1.0 / sum;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_269/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:42:58.996309680 -0500\n@@ -326,7 +326,6 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n                 i++;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Delete", 
          "seed": "membershipMatrix[i][j]=1.0 / sum;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 328, 
          "faulty": "for (int idx=0; idx < arr.length; idx++) {\n  arr[idx]+=u * pointArr[idx];\n}", 
          "type": "Replace", 
          "seed": "points.add(point);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1488/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:04.309367044 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -325,9 +324,7 @@\n             for (final T point : points) {\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n+                points.add(point);\n                 sum += u;\n                 i++;\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 322, 
          "faulty": "int i=0;", 
          "type": "InsertBefore", 
          "seed": "updateMembershipMatrix();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "continue;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1071/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:48:00.857076443 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -319,7 +318,8 @@\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n-            int i = 0;\n+            updateMembershipMatrix();\n+\t\t\tint i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n             for (final T point : points) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 301, 
          "faulty": "final int max=(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;", 
          "type": "InsertBefore", 
          "seed": "membershipMatrix=new double[size][k];"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1062/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:47:53.133058778 -0500\n@@ -298,12 +298,12 @@\n         }\n \n         int iteration = 0;\n-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n+        membershipMatrix = new double[size][k];\n+\t\tfinal int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Replace", 
          "seed": "clusters.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_822/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:46:07.912818375 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -326,7 +325,7 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n+                    clusters.clear();\n                 }\n                 sum += u;\n                 i++;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Replace", 
          "seed": "membershipMatrix=new double[size][k];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 339, 
          "faulty": "clusters=newClusters;", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 301, 
          "faulty": "final int max=(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;", 
          "type": "InsertBefore", 
          "seed": "points=Collections.unmodifiableList(new ArrayList<T>(dataPoints));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 332, 
          "faulty": "i++;", 
          "type": "Replace", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_107/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:41:55.360145575 -0500\n@@ -298,12 +298,13 @@\n         }\n \n         int iteration = 0;\n-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n+        points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n+\t\tfinal int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n+            membershipMatrix = new double[size][k];\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -329,14 +330,15 @@\n                     arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n-                i++;\n+                if (fuzziness <= 1.0d) {\n+\t\t\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t\t\t}\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n         clusters.clear();\n-        clusters = newClusters;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 300, 
          "faulty": "int iteration=0;", 
          "type": "InsertBefore", 
          "seed": "membershipMatrix=new double[size][k];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 335, 
          "faulty": "newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));", 
          "type": "Delete", 
          "seed": "points=new ArrayList<T>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1362/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:49:14.121247050 -0500\n@@ -297,13 +297,13 @@\n             clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));\n         }\n \n-        int iteration = 0;\n+        membershipMatrix = new double[size][k];\n+\t\tint iteration = 0;\n         final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -332,7 +332,6 @@\n                 i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n-            newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n         clusters.clear();\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 302, 
          "faulty": "double difference=0.0;", 
          "type": "InsertBefore", 
          "seed": "initializeMembershipMatrix();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 292, 
          "faulty": "initializeMembershipMatrix();", 
          "type": "Delete", 
          "seed": "this.k=k;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1565/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:19.517403895 -0500\n@@ -289,8 +289,6 @@\n             return clusters;\n         }\n \n-        initializeMembershipMatrix();\n-\n         // there is at least one point\n         final int pointDimension = points.get(0).getPoint().length;\n         for (int i = 0; i < k; i++) {\n@@ -299,11 +297,11 @@\n \n         int iteration = 0;\n         final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n-        double difference = 0.0;\n+        initializeMembershipMatrix();\n+\t\tdouble difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 339, 
          "faulty": "clusters=newClusters;", 
          "type": "Delete", 
          "seed": "updateMembershipMatrix();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 332, 
          "faulty": "i++;", 
          "type": "Delete", 
          "seed": "this.maxIterations=maxIterations;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_70/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:41:29.136079061 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -329,14 +328,12 @@\n                     arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n-                i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n         clusters.clear();\n-        clusters = newClusters;\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "continue;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 288, 
          "faulty": "if (size == 0) {\n  return clusters;\n}", 
          "type": "InsertBefore", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 292, 
          "faulty": "initializeMembershipMatrix();", 
          "type": "Delete", 
          "seed": "this.random=random;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_975/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:47:24.424993672 -0500\n@@ -284,13 +284,12 @@\n         membershipMatrix = new double[size][k];\n         final double[][] oldMatrix = new double[size][k];\n \n-        // if no points are provided, return an empty list of clusters\n+        updateClusterCenters();\n+\t\t// if no points are provided, return an empty list of clusters\n         if (size == 0) {\n             return clusters;\n         }\n \n-        initializeMembershipMatrix();\n-\n         // there is at least one point\n         final int pointDimension = points.get(0).getPoint().length;\n         for (int i = 0; i < k; i++) {\n@@ -303,7 +302,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 334, 
          "faulty": "MathArrays.scaleInPlace(1.0 / sum,arr);", 
          "type": "InsertBefore", 
          "seed": "newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_513/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:44:17.552517388 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -331,7 +330,8 @@\n                 sum += u;\n                 i++;\n             }\n-            MathArrays.scaleInPlace(1.0 / sum, arr);\n+            newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n+\t\t\tMathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 338, 
          "faulty": "clusters.clear();", 
          "type": "Delete", 
          "seed": "clusters.clear();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_383/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:38.972414683 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -335,7 +334,6 @@\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n-        clusters.clear();\n         clusters = newClusters;\n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 350, 
          "faulty": "int newCluster=-1;", 
          "type": "InsertBefore", 
          "seed": "for (int j=0; j < k; j++) {\n  membershipMatrix[i][j]=random.nextDouble();\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 292, 
          "faulty": "initializeMembershipMatrix();", 
          "type": "Delete", 
          "seed": "this.epsilon=epsilon;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_378/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:38.064412282 -0500\n@@ -289,8 +289,6 @@\n             return clusters;\n         }\n \n-        initializeMembershipMatrix();\n-\n         // there is at least one point\n         final int pointDimension = points.get(0).getPoint().length;\n         for (int i = 0; i < k; i++) {\n@@ -303,7 +301,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -347,7 +344,10 @@\n         for (int i = 0; i < points.size(); i++) {\n             final T point = points.get(i);\n             double maxMembership = 0.0;\n-            int newCluster = -1;\n+            for (int j = 0; j < k; j++) {\n+\t\t\t\tmembershipMatrix[i][j] = random.nextDouble();\n+\t\t\t}\n+\t\t\tint newCluster = -1;\n             for (int j = 0; j < clusters.size(); j++) {\n                 double sum = 0.0;\n                 final double distA = FastMath.abs(distance(point, clusters.get(j).getCenter()));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 300, 
          "faulty": "int iteration=0;", 
          "type": "InsertBefore", 
          "seed": "membershipMatrix=new double[size][k];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 334, 
          "faulty": "MathArrays.scaleInPlace(1.0 / sum,arr);", 
          "type": "Delete", 
          "seed": "for (int i=0; i < points.size(); i++) {\n  final T point=points.get(i);\n  double maxMembership=0.0;\n  int newCluster=-1;\n  for (int j=0; j < clusters.size(); j++) {\n    double sum=0.0;\n    final double distA=FastMath.abs(distance(point,clusters.get(j).getCenter()));\n    for (    final CentroidCluster<T> c : clusters) {\n      final double distB=FastMath.abs(distance(point,c.getCenter()));\n      sum+=FastMath.pow(distA / distB,2.0 / (fuzziness - 1.0));\n    }\n    membershipMatrix[i][j]=1.0 / sum;\n    if (membershipMatrix[i][j] > maxMembership) {\n      maxMembership=membershipMatrix[i][j];\n      newCluster=j;\n    }\n  }\n  clusters.get(newCluster).addPoint(point);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1712/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:54.917490542 -0500\n@@ -297,13 +297,13 @@\n             clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));\n         }\n \n-        int iteration = 0;\n+        membershipMatrix = new double[size][k];\n+\t\tint iteration = 0;\n         final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -331,7 +331,6 @@\n                 sum += u;\n                 i++;\n             }\n-            MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n             j++;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 277, 
          "faulty": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}", 
          "type": "InsertBefore", 
          "seed": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1218/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:48:37.869161946 -0500\n@@ -273,7 +273,10 @@\n \n         final int size = dataPoints.size();\n \n-        // number of clusters has to be smaller or equal the number of data points\n+        if (size < k) {\n+\t\t\tthrow new NumberIsTooSmallException(size, k, false);\n+\t\t}\n+\t\t// number of clusters has to be smaller or equal the number of data points\n         if (size < k) {\n             throw new NumberIsTooSmallException(size, k, false);\n         }\n@@ -303,7 +306,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 322, 
          "faulty": "int i=0;", 
          "type": "InsertBefore", 
          "seed": "j++;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_673/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:45:13.960669919 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -319,7 +318,8 @@\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n-            int i = 0;\n+            j++;\n+\t\t\tint i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n             for (final T point : points) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 325, 
          "faulty": "for (final T point : points) {\n  final double u=FastMath.pow(membershipMatrix[i][j],fuzziness);\n  final double[] pointArr=point.getPoint();\n  for (int idx=0; idx < arr.length; idx++) {\n    arr[idx]+=u * pointArr[idx];\n  }\n  sum+=u;\n  i++;\n}", 
          "type": "InsertBefore", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 331, 
          "faulty": "sum+=u;", 
          "type": "Replace", 
          "seed": "points=new ArrayList<T>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1272/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:48:48.633187076 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -322,13 +321,14 @@\n             int i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n-            for (final T point : points) {\n+            clusters = new ArrayList<CentroidCluster<T>>();\n+\t\t\tfor (final T point : points) {\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n                     arr[idx] += u * pointArr[idx];\n                 }\n-                sum += u;\n+                points = new ArrayList<T>();\n                 i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 339, 
          "faulty": "clusters=newClusters;", 
          "type": "Replace", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1403/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:49:22.709267405 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -336,7 +335,7 @@\n             j++;\n         }\n         clusters.clear();\n-        clusters = newClusters;\n+        clusters = new ArrayList<CentroidCluster<T>>();\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 322, 
          "faulty": "int i=0;", 
          "type": "InsertBefore", 
          "seed": "clusters.clear();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1568/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:50:19.965404984 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -319,7 +318,8 @@\n         final List<CentroidCluster<T>> newClusters = new ArrayList<CentroidCluster<T>>(k);\n         for (final CentroidCluster<T> cluster : clusters) {\n             final Clusterable center = cluster.getCenter();\n-            int i = 0;\n+            clusters.clear();\n+\t\t\tint i = 0;\n             double[] arr = new double[center.getPoint().length];\n             double sum = 0.0;\n             for (final T point : points) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Replace", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 301, 
          "faulty": "final int max=(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;", 
          "type": "InsertBefore", 
          "seed": "points=Collections.unmodifiableList(new ArrayList<T>(dataPoints));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 332, 
          "faulty": "i++;", 
          "type": "Replace", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_220/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:42:49.188284142 -0500\n@@ -298,12 +298,13 @@\n         }\n \n         int iteration = 0;\n-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n+        points = Collections.unmodifiableList(new ArrayList<T>(dataPoints));\n+\t\tfinal int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n+            difference = calculateMaxMembershipChange(oldMatrix);\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -329,7 +330,9 @@\n                     arr[idx] += u * pointArr[idx];\n                 }\n                 sum += u;\n-                i++;\n+                if (fuzziness <= 1.0d) {\n+\t\t\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t\t\t}\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n             newClusters.add(new CentroidCluster<T>(new DoublePoint(arr)));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 300, 
          "faulty": "int iteration=0;", 
          "type": "InsertBefore", 
          "seed": "membershipMatrix=new double[size][k];"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_676/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:45:20.256687116 -0500\n@@ -297,13 +297,13 @@\n             clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));\n         }\n \n-        int iteration = 0;\n+        membershipMatrix = new double[size][k];\n+\t\tint iteration = 0;\n         final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "updateClusterCenters();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 331, 
          "faulty": "sum+=u;", 
          "type": "Replace", 
          "seed": "points=new ArrayList<T>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_307/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:12.860345931 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -328,7 +327,7 @@\n                 for (int idx = 0; idx < arr.length; idx++) {\n                     arr[idx] += u * pointArr[idx];\n                 }\n-                sum += u;\n+                points = new ArrayList<T>();\n                 i++;\n             }\n             MathArrays.scaleInPlace(1.0 / sum, arr);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Replace", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 301, 
          "faulty": "final int max=(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;", 
          "type": "InsertBefore", 
          "seed": "if (size < k) {\n  throw new NumberIsTooSmallException(size,k,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_389/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:40.124417731 -0500\n@@ -298,12 +298,15 @@\n         }\n \n         int iteration = 0;\n-        final int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n+        if (size < k) {\n+\t\t\tthrow new NumberIsTooSmallException(size, k, false);\n+\t\t}\n+\t\tfinal int max = (maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;\n         double difference = 0.0;\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n+            difference = calculateMaxMembershipChange(oldMatrix);\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "difference=calculateMaxMembershipChange(oldMatrix);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 350, 
          "faulty": "int newCluster=-1;", 
          "type": "InsertBefore", 
          "seed": "for (int j=0; j < k; j++) {\n  membershipMatrix[i][j]=random.nextDouble();\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_402/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:42.432423840 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -347,7 +346,10 @@\n         for (int i = 0; i < points.size(); i++) {\n             final T point = points.get(i);\n             double maxMembership = 0.0;\n-            int newCluster = -1;\n+            for (int j = 0; j < k; j++) {\n+\t\t\t\tmembershipMatrix[i][j] = random.nextDouble();\n+\t\t\t}\n+\t\t\tint newCluster = -1;\n             for (int j = 0; j < clusters.size(); j++) {\n                 double sum = 0.0;\n                 final double distA = FastMath.abs(distance(point, clusters.get(j).getCenter()));\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 328, 
          "faulty": "for (int idx=0; idx < arr.length; idx++) {\n  arr[idx]+=u * pointArr[idx];\n}", 
          "type": "Replace", 
          "seed": "if (fuzziness <= 1.0d) {\n  throw new NumberIsTooSmallException(fuzziness,1.0,false);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_333/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:43:17.596358355 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -325,9 +324,9 @@\n             for (final T point : points) {\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n-                for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n-                }\n+                if (fuzziness <= 1.0d) {\n+\t\t\t\t\tthrow new NumberIsTooSmallException(fuzziness, 1.0, false);\n+\t\t\t\t}\n                 sum += u;\n                 i++;\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 329, 
          "faulty": "arr[idx]+=u * pointArr[idx];", 
          "type": "Replace", 
          "seed": "membershipMatrix[i][j]=1.0 / sum;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java", 
          "line": 306, 
          "faulty": "updateClusterCenters();", 
          "type": "Delete", 
          "seed": "clusters=new ArrayList<CentroidCluster<T>>();"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:17:44.059193000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/patches_34b6/Patch_1226/patched/tmp/Arja_Bug_dot_jar_Commons-Math_596ccd59/src/main/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClusterer.java\t2018-12-29 04:48:39.441165609 -0500\n@@ -303,7 +303,6 @@\n \n         do {\n             saveMembershipMatrix(oldMatrix);\n-            updateClusterCenters();\n             updateMembershipMatrix();\n             difference = calculateMaxMembershipChange(oldMatrix);\n         } while (difference > epsilon && ++iteration < max);\n@@ -326,7 +325,7 @@\n                 final double u = FastMath.pow(membershipMatrix[i][j], fuzziness);\n                 final double[] pointArr = point.getPoint();\n                 for (int idx = 0; idx < arr.length; idx++) {\n-                    arr[idx] += u * pointArr[idx];\n+                    membershipMatrix[i][j] = 1.0 / sum;\n                 }\n                 sum += u;\n                 i++;\n\n\n"
    }
  ]
}