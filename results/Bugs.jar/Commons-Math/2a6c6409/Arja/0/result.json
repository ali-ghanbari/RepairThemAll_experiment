{
  "repair_end": "2018-12-29 12:00:55.479749", 
  "repair_begin": "2018-12-29 11:27:06.930213", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "InsertBefore", 
          "seed": "plus=new BSPTree<S>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_989/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:53:10.922015788 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_989/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:53:10.922015788 -0500\n@@ -158,7 +158,8 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n+            plus = new BSPTree<S>();\n+\t\t\tcut          = null;\n             plus         = null;\n             minus        = null;\n             return false;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Delete", 
          "seed": "if (ot.nan) {\n  return -1;\n}\n else if (negInf || ot.posInf) {\n  return -1;\n}\n else if (posInf || ot.negInf) {\n  return +1;\n}\n else {\n  if (offset < ot.offset) {\n    encode(ot.offset);\n  }\n else   if (offset > ot.offset) {\n    ot.encode(offset);\n  }\n  final int limit=FastMath.min(encoding.length,ot.encoding.length);\n  for (int i=0; i < limit; ++i) {\n    if (encoding[i] < ot.encoding[i]) {\n      return -1;\n    }\n else     if (encoding[i] > ot.encoding[i]) {\n      return +1;\n    }\n  }\n  if (encoding.length < ot.encoding.length) {\n    return -1;\n  }\n else   if (encoding.length > ot.encoding.length) {\n    return +1;\n  }\n else {\n    return 0;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1079/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:54:04.794211096 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1079/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:54:04.798211113 -0500\n@@ -253,7 +253,6 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "InsertBefore", 
          "seed": "if (posInf && negInf) {\n  posInf=false;\n  negInf=false;\n  nan=true;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_763/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:51:14.009622178 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_763/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:51:14.013622191 -0500\n@@ -253,7 +253,12 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                if (posInf && negInf) {\n+\t\t\t\t\tposInf = false;\n+\t\t\t\t\tnegInf = false;\n+\t\t\t\t\tnan = true;\n+\t\t\t\t}\n+\t\t\t\treturn +1;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_242/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:46:54.716690223 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "loop.add(selectedSegment);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_484/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:48:54.729135312 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                loop.add(selectedSegment);\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "InsertBefore", 
          "seed": "this.components=components.clone();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_577/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:49:42.557305345 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_577/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:49:42.557305345 -0500\n@@ -259,7 +259,8 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n+                    this.components = components.clone();\n+\t\t\t\t\tot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Replace", 
          "seed": "return +1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_363/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:47:54.548915898 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_363/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:47:54.552915912 -0500\n@@ -259,7 +259,7 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n+                    return +1;\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "this.parent=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1423/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:57:17.370978206 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1423/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:57:17.374978221 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Replace", 
          "seed": "if (cut != null) {\n  plus.parent=null;\n  minus.parent=null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1348/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:56:31.098802278 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1348/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:56:31.098802278 -0500\n@@ -158,7 +158,10 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n+            if (cut != null) {\n+\t\t\t\tplus.parent = null;\n+\t\t\t\tminus.parent = null;\n+\t\t\t}\n             plus         = null;\n             minus        = null;\n             return false;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Replace", 
          "seed": "if (components.length == ot.components.length) {\n  if (nan) {\n    return +1;\n  }\n else   if (ot.nan) {\n    return -1;\n  }\n else   if (negInf || ot.posInf) {\n    return -1;\n  }\n else   if (posInf || ot.negInf) {\n    return +1;\n  }\n else {\n    if (offset < ot.offset) {\n      encode(ot.offset);\n    }\n else     if (offset > ot.offset) {\n      ot.encode(offset);\n    }\n    final int limit=FastMath.min(encoding.length,ot.encoding.length);\n    for (int i=0; i < limit; ++i) {\n      if (encoding[i] < ot.encoding[i]) {\n        return -1;\n      }\n else       if (encoding[i] > ot.encoding[i]) {\n        return +1;\n      }\n    }\n    if (encoding.length < ot.encoding.length) {\n      return -1;\n    }\n else     if (encoding.length > ot.encoding.length) {\n      return +1;\n    }\n else {\n      return 0;\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_355/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:47:51.316903916 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_355/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:47:51.320903930 -0500\n@@ -259,7 +259,39 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n+                    if (components.length == ot.components.length) {\n+\t\t\t\t\t\tif (nan) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t} else if (ot.nan) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (negInf || ot.posInf) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (posInf || ot.negInf) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tif (offset < ot.offset) {\n+\t\t\t\t\t\t\t\tencode(ot.offset);\n+\t\t\t\t\t\t\t} else if (offset > ot.offset) {\n+\t\t\t\t\t\t\t\tot.encode(offset);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tfinal int limit = FastMath.min(encoding.length,\n+\t\t\t\t\t\t\t\t\tot.encoding.length);\n+\t\t\t\t\t\t\tfor (int i = 0; i < limit; ++i) {\n+\t\t\t\t\t\t\t\tif (encoding[i] < ot.encoding[i]) {\n+\t\t\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t\t\t} else if (encoding[i] > ot.encoding[i]) {\n+\t\t\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tif (encoding.length < ot.encoding.length) {\n+\t\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t\t} else if (encoding.length > ot.encoding.length) {\n+\t\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\treturn 0;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_3/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:44:18.220093757 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 525, 
          "faulty": "return (((Plane)other).w).dotProduct(w) > 0.0;", 
          "type": "InsertBefore", 
          "seed": "u=w.orthogonal();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:26:39.398599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_393/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:48:08.580967673 -0500\n@@ -522,7 +522,8 @@\n      * the same orientation\n      */\n     public boolean sameOrientationAs(final Hyperplane<Euclidean3D> other) {\n-        return (((Plane) other).w).dotProduct(w) > 0.0;\n+        u = w.orthogonal();\n+\t\treturn (((Plane) other).w).dotProduct(w) > 0.0;\n     }\n \n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_393/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:48:08.584967688 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 161, 
          "faulty": "return new Plane(this);", 
          "type": "Replace", 
          "seed": "return new Plane(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_215/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:46:41.236638150 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 242, 
          "faulty": "return Order.MINUS_SUB_PLUS;", 
          "type": "Replace", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Replace", 
          "seed": "if (nan) {\n  return +1;\n}\n else if (ot.nan) {\n  return -1;\n}\n else if (negInf || ot.posInf) {\n  return -1;\n}\n else if (posInf || ot.negInf) {\n  return +1;\n}\n else {\n  if (offset < ot.offset) {\n    encode(ot.offset);\n  }\n else   if (offset > ot.offset) {\n    ot.encode(offset);\n  }\n  final int limit=FastMath.min(encoding.length,ot.encoding.length);\n  for (int i=0; i < limit; ++i) {\n    if (encoding[i] < ot.encoding[i]) {\n      return -1;\n    }\n else     if (encoding[i] > ot.encoding[i]) {\n      return +1;\n    }\n  }\n  if (encoding.length < ot.encoding.length) {\n    return -1;\n  }\n else   if (encoding.length > ot.encoding.length) {\n    return +1;\n  }\n else {\n    return 0;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_705/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:50:46.473527766 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_705/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:50:46.473527766 -0500\n@@ -259,7 +259,37 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n+                    if (nan) {\n+\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t} else if (ot.nan) {\n+\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t} else if (negInf || ot.posInf) {\n+\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t} else if (posInf || ot.negInf) {\n+\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tif (offset < ot.offset) {\n+\t\t\t\t\t\t\tencode(ot.offset);\n+\t\t\t\t\t\t} else if (offset > ot.offset) {\n+\t\t\t\t\t\t\tot.encode(offset);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tfinal int limit = FastMath.min(encoding.length,\n+\t\t\t\t\t\t\t\tot.encoding.length);\n+\t\t\t\t\t\tfor (int i = 0; i < limit; ++i) {\n+\t\t\t\t\t\t\tif (encoding[i] < ot.encoding[i]) {\n+\t\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t\t} else if (encoding[i] > ot.encoding[i]) {\n+\t\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tif (encoding.length < ot.encoding.length) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (encoding.length > ot.encoding.length) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\treturn 0;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 466, 
          "faulty": "return new SubPlane(this,new PolygonsSet(tolerance));", 
          "type": "InsertBefore", 
          "seed": "origin=new Vector3D(-originOffset,w);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java", 
          "line": 654, 
          "faulty": "pending=new double[]{getAngle(start),Double.POSITIVE_INFINITY};", 
          "type": "Replace", 
          "seed": "if (end != null) {\n  pending=new double[]{getAngle(start),getAngle(end)};\n  current=end;\n}\n else {\n  pending=new double[]{getAngle(start),Double.POSITIVE_INFINITY};\n  current=null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:26:39.398599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1200/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:55:08.014474215 -0500\n@@ -463,7 +463,8 @@\n      * @return a region covering the whole hyperplane\n      */\n     public SubPlane wholeHyperplane() {\n-        return new SubPlane(this, new PolygonsSet(tolerance));\n+        origin = new Vector3D(-originOffset, w);\n+\t\treturn new SubPlane(this, new PolygonsSet(tolerance));\n     }\n \n     /** Build a region covering the whole space.\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1200/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:55:08.014474215 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java\t2018-12-29 05:26:39.390599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1200/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java\t2018-12-29 05:55:08.014474215 -0500\n@@ -650,10 +650,14 @@\n \n             } else {\n \n-                // the final interval is open toward infinity\n-                pending = new double[] {\n-                    getAngle(start), Double.POSITIVE_INFINITY\n-                };\n+                if (end != null) {\n+\t\t\t\t\tpending = new double[] { getAngle(start), getAngle(end) };\n+\t\t\t\t\tcurrent = end;\n+\t\t\t\t} else {\n+\t\t\t\t\tpending = new double[] { getAngle(start),\n+\t\t\t\t\t\t\tDouble.POSITIVE_INFINITY };\n+\t\t\t\t\tcurrent = null;\n+\t\t\t\t}\n \n                 // there won't be any other intervals\n                 current = null;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 162, 
          "faulty": "plus=null;", 
          "type": "Delete", 
          "seed": "if (cut != null) {\n  cut=cut.split(hyperplane).getMinus();\n  plus.chopOffPlus(hyperplane);\n  minus.chopOffPlus(hyperplane);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 496, 
          "faulty": "return originOffset + (sameOrientationAs(plane) ? -plane.originOffset : plane.originOffset);", 
          "type": "InsertBefore", 
          "seed": "u=w.orthogonal();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:26:39.398599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_584/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:49:45.749316574 -0500\n@@ -493,7 +493,8 @@\n      * @return offset of the plane\n      */\n     public double getOffset(final Plane plane) {\n-        return originOffset + (sameOrientationAs(plane) ? -plane.originOffset : plane.originOffset);\n+        u = w.orthogonal();\n+\t\treturn originOffset + (sameOrientationAs(plane) ? -plane.originOffset : plane.originOffset);\n     }\n \n     /** Get the offset (oriented distance) of a vector.\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_584/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:49:45.749316574 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_584/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:49:45.753316588 -0500\n@@ -159,7 +159,6 @@\n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n-            plus         = null;\n             minus        = null;\n             return false;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 162, 
          "faulty": "plus=null;", 
          "type": "Delete", 
          "seed": "cut=chopped;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_177/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:46:13.948531159 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_177/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:46:13.948531159 -0500\n@@ -159,7 +159,6 @@\n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n-            plus         = null;\n             minus        = null;\n             return false;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 266, 
          "faulty": "return tolerance;", 
          "type": "InsertBefore", 
          "seed": "this.v=v;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:26:39.398599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_247/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:46:56.876698522 -0500\n@@ -263,7 +263,8 @@\n      * @since 3.3\n      */\n     public double getTolerance() {\n-        return tolerance;\n+        this.v = v;\n+\t\treturn tolerance;\n     }\n \n     /** Revert the plane.\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_247/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:46:56.880698538 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 474, 
          "faulty": "return new PolyhedronsSet(tolerance);", 
          "type": "InsertBefore", 
          "seed": "setFrame();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 525, 
          "faulty": "return (((Plane)other).w).dotProduct(w) > 0.0;", 
          "type": "InsertBefore", 
          "seed": "u=w.orthogonal();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:26:39.398599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_884/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:52:17.137836002 -0500\n@@ -471,7 +471,8 @@\n      * PolyhedronsSet PolyhedronsSet} instance)\n      */\n     public PolyhedronsSet wholeSpace() {\n-        return new PolyhedronsSet(tolerance);\n+        setFrame();\n+\t\treturn new PolyhedronsSet(tolerance);\n     }\n \n     /** Check if the instance contains a point.\n@@ -522,7 +523,8 @@\n      * the same orientation\n      */\n     public boolean sameOrientationAs(final Hyperplane<Euclidean3D> other) {\n-        return (((Plane) other).w).dotProduct(w) > 0.0;\n+        u = w.orthogonal();\n+\t\treturn (((Plane) other).w).dotProduct(w) > 0.0;\n     }\n \n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_884/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:52:17.137836002 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 466, 
          "faulty": "return new SubPlane(this,new PolygonsSet(tolerance));", 
          "type": "InsertBefore", 
          "seed": "origin=new Vector3D(-originOffset,w);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:26:39.398599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_589/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:49:47.893324109 -0500\n@@ -463,7 +463,8 @@\n      * @return a region covering the whole hyperplane\n      */\n     public SubPlane wholeHyperplane() {\n-        return new SubPlane(this, new PolygonsSet(tolerance));\n+        origin = new Vector3D(-originOffset, w);\n+\t\treturn new SubPlane(this, new PolygonsSet(tolerance));\n     }\n \n     /** Build a region covering the whole space.\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_589/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:49:47.893324109 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "InsertBefore", 
          "seed": "lsb=Integer.MAX_VALUE;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1331/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:56:22.614769546 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1331/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:56:22.614769546 -0500\n@@ -253,7 +253,8 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                lsb = Integer.MAX_VALUE;\n+\t\t\t\treturn +1;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "InsertBefore", 
          "seed": "if (components.length == ot.components.length) {\n  if (nan) {\n    return +1;\n  }\n else   if (ot.nan) {\n    return -1;\n  }\n else   if (negInf || ot.posInf) {\n    return -1;\n  }\n else   if (posInf || ot.negInf) {\n    return +1;\n  }\n else {\n    if (offset < ot.offset) {\n      encode(ot.offset);\n    }\n else     if (offset > ot.offset) {\n      ot.encode(offset);\n    }\n    final int limit=FastMath.min(encoding.length,ot.encoding.length);\n    for (int i=0; i < limit; ++i) {\n      if (encoding[i] < ot.encoding[i]) {\n        return -1;\n      }\n else       if (encoding[i] > ot.encoding[i]) {\n        return +1;\n      }\n    }\n    if (encoding.length < ot.encoding.length) {\n      return -1;\n    }\n else     if (encoding.length > ot.encoding.length) {\n      return +1;\n    }\n else {\n      return 0;\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1247/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:55:31.738569715 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1247/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:55:31.742569731 -0500\n@@ -253,7 +253,40 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                if (components.length == ot.components.length) {\n+\t\t\t\t\tif (nan) {\n+\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t} else if (ot.nan) {\n+\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t} else if (negInf || ot.posInf) {\n+\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t} else if (posInf || ot.negInf) {\n+\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tif (offset < ot.offset) {\n+\t\t\t\t\t\t\tencode(ot.offset);\n+\t\t\t\t\t\t} else if (offset > ot.offset) {\n+\t\t\t\t\t\t\tot.encode(offset);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tfinal int limit = FastMath.min(encoding.length,\n+\t\t\t\t\t\t\t\tot.encoding.length);\n+\t\t\t\t\t\tfor (int i = 0; i < limit; ++i) {\n+\t\t\t\t\t\t\tif (encoding[i] < ot.encoding[i]) {\n+\t\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t\t} else if (encoding[i] > ot.encoding[i]) {\n+\t\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tif (encoding.length < ot.encoding.length) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (encoding.length > ot.encoding.length) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\treturn 0;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\treturn +1;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (nan) {\n  return +1;\n}\n else if (ot.nan) {\n  return -1;\n}\n else if (negInf || ot.posInf) {\n  return -1;\n}\n else if (posInf || ot.negInf) {\n  return +1;\n}\n else {\n  if (offset < ot.offset) {\n    encode(ot.offset);\n  }\n else   if (offset > ot.offset) {\n    ot.encode(offset);\n  }\n  final int limit=FastMath.min(encoding.length,ot.encoding.length);\n  for (int i=0; i < limit; ++i) {\n    if (encoding[i] < ot.encoding[i]) {\n      return -1;\n    }\n else     if (encoding[i] > ot.encoding[i]) {\n      return +1;\n    }\n  }\n  if (encoding.length < ot.encoding.length) {\n    return -1;\n  }\n else   if (encoding.length > ot.encoding.length) {\n    return +1;\n  }\n else {\n    return 0;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_478/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:48:52.157126068 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_478/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:48:52.161126082 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_236/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:46:52.100680156 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 05:26:39.338598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_236/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 05:46:52.104680172 -0500\n@@ -134,7 +134,7 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        return getMessage(Locale.US);\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 216, 
          "faulty": "getTree(true).visit(new FacetsContributionVisitor());", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_280/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:47:13.516762054 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:26:39.398599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_280/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:47:13.516762054 -0500\n@@ -212,7 +212,8 @@\n     @Override\n     protected void computeGeometricalProperties() {\n \n-        // compute the contribution of all boundary facets\n+        setSize(0);\n+\t\t// compute the contribution of all boundary facets\n         getTree(true).visit(new FacetsContributionVisitor());\n \n         if (getSize() < 0) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Replace", 
          "seed": "this.components=components.clone();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "InsertBefore", 
          "seed": "if (components.length == ot.components.length) {\n  if (nan) {\n    return +1;\n  }\n else   if (ot.nan) {\n    return -1;\n  }\n else   if (negInf || ot.posInf) {\n    return -1;\n  }\n else   if (posInf || ot.negInf) {\n    return +1;\n  }\n else {\n    if (offset < ot.offset) {\n      encode(ot.offset);\n    }\n else     if (offset > ot.offset) {\n      ot.encode(offset);\n    }\n    final int limit=FastMath.min(encoding.length,ot.encoding.length);\n    for (int i=0; i < limit; ++i) {\n      if (encoding[i] < ot.encoding[i]) {\n        return -1;\n      }\n else       if (encoding[i] > ot.encoding[i]) {\n        return +1;\n      }\n    }\n    if (encoding.length < ot.encoding.length) {\n      return -1;\n    }\n else     if (encoding.length > ot.encoding.length) {\n      return +1;\n    }\n else {\n      return 0;\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1182/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:54:58.838436836 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1182/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:54:58.838436836 -0500\n@@ -253,13 +253,46 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                if (components.length == ot.components.length) {\n+\t\t\t\t\tif (nan) {\n+\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t} else if (ot.nan) {\n+\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t} else if (negInf || ot.posInf) {\n+\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t} else if (posInf || ot.negInf) {\n+\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tif (offset < ot.offset) {\n+\t\t\t\t\t\t\tencode(ot.offset);\n+\t\t\t\t\t\t} else if (offset > ot.offset) {\n+\t\t\t\t\t\t\tot.encode(offset);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tfinal int limit = FastMath.min(encoding.length,\n+\t\t\t\t\t\t\t\tot.encoding.length);\n+\t\t\t\t\t\tfor (int i = 0; i < limit; ++i) {\n+\t\t\t\t\t\t\tif (encoding[i] < ot.encoding[i]) {\n+\t\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t\t} else if (encoding[i] > ot.encoding[i]) {\n+\t\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tif (encoding.length < ot.encoding.length) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (encoding.length > ot.encoding.length) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\treturn 0;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\treturn +1;\n             } else {\n \n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n+                    this.components = components.clone();\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java", 
          "line": 659, 
          "faulty": "current=null;", 
          "type": "InsertBefore", 
          "seed": "while (end != null && !isIntervalEnd(end)) {\n  end=nextInternalNode(end);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_937/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:52:44.357927235 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java\t2018-12-29 05:26:39.390599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_937/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java\t2018-12-29 05:52:44.357927235 -0500\n@@ -655,7 +655,10 @@\n                     getAngle(start), Double.POSITIVE_INFINITY\n                 };\n \n-                // there won't be any other intervals\n+                while (end != null && !isIntervalEnd(end)) {\n+\t\t\t\t\tend = nextInternalNode(end);\n+\t\t\t\t}\n+\t\t\t\t// there won't be any other intervals\n                 current = null;\n \n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 525, 
          "faulty": "return (((Plane)other).w).dotProduct(w) > 0.0;", 
          "type": "InsertBefore", 
          "seed": "u=w.orthogonal();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:26:39.398599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1064/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:53:57.894181521 -0500\n@@ -522,7 +522,8 @@\n      * the same orientation\n      */\n     public boolean sameOrientationAs(final Hyperplane<Euclidean3D> other) {\n-        return (((Plane) other).w).dotProduct(w) > 0.0;\n+        u = w.orthogonal();\n+\t\treturn (((Plane) other).w).dotProduct(w) > 0.0;\n     }\n \n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1064/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:53:57.898181539 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 05:26:39.338598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1064/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 05:53:57.898181539 -0500\n@@ -125,7 +125,8 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        context = new HashMap<String, Object>();\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Replace", 
          "seed": "if (cut != null) {\n  plus.parent=null;\n  minus.parent=null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "InsertBefore", 
          "seed": "plus=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 266, 
          "faulty": "return tolerance;", 
          "type": "InsertBefore", 
          "seed": "this.v=v;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:26:39.398599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_385/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:48:04.732953514 -0500\n@@ -263,7 +263,8 @@\n      * @since 3.3\n      */\n     public double getTolerance() {\n-        return tolerance;\n+        this.v = v;\n+\t\treturn tolerance;\n     }\n \n     /** Revert the plane.\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_385/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:48:04.732953514 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_385/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:48:04.732953514 -0500\n@@ -158,9 +158,13 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n+            if (cut != null) {\n+\t\t\t\tplus.parent = null;\n+\t\t\t\tminus.parent = null;\n+\t\t\t}\n             plus         = null;\n-            minus        = null;\n+            plus = null;\n+\t\t\tminus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 466, 
          "faulty": "return new SubPlane(this,new PolygonsSet(tolerance));", 
          "type": "Replace", 
          "seed": "return new SubPlane(this,new PolygonsSet(tolerance));"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1610/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:59:03.095366750 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 525, 
          "faulty": "return (((Plane)other).w).dotProduct(w) > 0.0;", 
          "type": "InsertBefore", 
          "seed": "setFrame();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:26:39.398599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_436/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:48:31.113050005 -0500\n@@ -522,7 +522,8 @@\n      * the same orientation\n      */\n     public boolean sameOrientationAs(final Hyperplane<Euclidean3D> other) {\n-        return (((Plane) other).w).dotProduct(w) > 0.0;\n+        setFrame();\n+\t\treturn (((Plane) other).w).dotProduct(w) > 0.0;\n     }\n \n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_436/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:48:31.117050020 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Replace", 
          "seed": "if (nan) {\n  return +1;\n}\n else if (ot.nan) {\n  return -1;\n}\n else if (negInf || ot.posInf) {\n  return -1;\n}\n else if (posInf || ot.negInf) {\n  return +1;\n}\n else {\n  if (offset < ot.offset) {\n    encode(ot.offset);\n  }\n else   if (offset > ot.offset) {\n    ot.encode(offset);\n  }\n  final int limit=FastMath.min(encoding.length,ot.encoding.length);\n  for (int i=0; i < limit; ++i) {\n    if (encoding[i] < ot.encoding[i]) {\n      return -1;\n    }\n else     if (encoding[i] > ot.encoding[i]) {\n      return +1;\n    }\n  }\n  if (encoding.length < ot.encoding.length) {\n    return -1;\n  }\n else   if (encoding.length > ot.encoding.length) {\n    return +1;\n  }\n else {\n    return 0;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1263/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:55:39.822601903 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1263/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:55:39.822601903 -0500\n@@ -259,7 +259,37 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n+                    if (nan) {\n+\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t} else if (ot.nan) {\n+\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t} else if (negInf || ot.posInf) {\n+\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t} else if (posInf || ot.negInf) {\n+\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tif (offset < ot.offset) {\n+\t\t\t\t\t\t\tencode(ot.offset);\n+\t\t\t\t\t\t} else if (offset > ot.offset) {\n+\t\t\t\t\t\t\tot.encode(offset);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tfinal int limit = FastMath.min(encoding.length,\n+\t\t\t\t\t\t\t\tot.encoding.length);\n+\t\t\t\t\t\tfor (int i = 0; i < limit; ++i) {\n+\t\t\t\t\t\t\tif (encoding[i] < ot.encoding[i]) {\n+\t\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t\t} else if (encoding[i] > ot.encoding[i]) {\n+\t\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tif (encoding.length < ot.encoding.length) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (encoding.length > ot.encoding.length) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\treturn 0;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 161, 
          "faulty": "return new Plane(this);", 
          "type": "Replace", 
          "seed": "return new Plane(this);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 266, 
          "faulty": "return tolerance;", 
          "type": "InsertBefore", 
          "seed": "this.v=v;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:26:39.398599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_358/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:47:52.396907921 -0500\n@@ -263,7 +263,8 @@\n      * @since 3.3\n      */\n     public double getTolerance() {\n-        return tolerance;\n+        this.v = v;\n+\t\treturn tolerance;\n     }\n \n     /** Revert the plane.\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_358/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:47:52.400907936 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Replace", 
          "seed": "plus=new BSPTree<S>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1732/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 06:00:06.599593343 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1732/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 06:00:06.599593343 -0500\n@@ -158,7 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n+            plus = new BSPTree<S>();\n             plus         = null;\n             minus        = null;\n             return false;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Replace", 
          "seed": "plus=new BSPTree<S>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 525, 
          "faulty": "return (((Plane)other).w).dotProduct(w) > 0.0;", 
          "type": "InsertBefore", 
          "seed": "u=w.orthogonal();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:26:39.398599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1542/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:58:27.911239220 -0500\n@@ -522,7 +522,8 @@\n      * the same orientation\n      */\n     public boolean sameOrientationAs(final Hyperplane<Euclidean3D> other) {\n-        return (((Plane) other).w).dotProduct(w) > 0.0;\n+        u = w.orthogonal();\n+\t\treturn (((Plane) other).w).dotProduct(w) > 0.0;\n     }\n \n }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1542/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:58:27.911239220 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1542/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:58:27.911239220 -0500\n@@ -158,7 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n+            plus = new BSPTree<S>();\n             plus         = null;\n             minus        = null;\n             return false;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Replace", 
          "seed": "this.components=components.clone();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_696/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:50:42.253513227 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_696/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:50:42.253513227 -0500\n@@ -259,7 +259,7 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n+                    this.components = components.clone();\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Replace", 
          "seed": "if (components.length == ot.components.length) {\n  if (nan) {\n    return +1;\n  }\n else   if (ot.nan) {\n    return -1;\n  }\n else   if (negInf || ot.posInf) {\n    return -1;\n  }\n else   if (posInf || ot.negInf) {\n    return +1;\n  }\n else {\n    if (offset < ot.offset) {\n      encode(ot.offset);\n    }\n else     if (offset > ot.offset) {\n      ot.encode(offset);\n    }\n    final int limit=FastMath.min(encoding.length,ot.encoding.length);\n    for (int i=0; i < limit; ++i) {\n      if (encoding[i] < ot.encoding[i]) {\n        return -1;\n      }\n else       if (encoding[i] > ot.encoding[i]) {\n        return +1;\n      }\n    }\n    if (encoding.length < ot.encoding.length) {\n      return -1;\n    }\n else     if (encoding.length > ot.encoding.length) {\n      return +1;\n    }\n else {\n      return 0;\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java", 
          "line": 66, 
          "faulty": "final double global=otherPlane.getOffset(thisPlane);", 
          "type": "InsertBefore", 
          "seed": "if (inter == null) {\n  final double global=otherPlane.getOffset(thisPlane);\n  return (global < -1.0e-10) ? Side.MINUS : ((global > 1.0e-10) ? Side.PLUS : Side.HYPER);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1077/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:54:04.238208720 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java\t2018-12-29 05:26:39.402599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1077/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java\t2018-12-29 05:54:04.238208720 -0500\n@@ -61,7 +61,12 @@\n         final double tolerance = thisPlane.getTolerance();\n \n         if (inter == null) {\n-            // the hyperplanes are parallel,\n+            if (inter == null) {\n+\t\t\t\tfinal double global = otherPlane.getOffset(thisPlane);\n+\t\t\t\treturn (global < -1.0e-10) ? Side.MINUS\n+\t\t\t\t\t\t: ((global > 1.0e-10) ? Side.PLUS : Side.HYPER);\n+\t\t\t}\n+\t\t\t// the hyperplanes are parallel,\n             // any point can be used to check their relative position\n             final double global = otherPlane.getOffset(thisPlane);\n             return (global < -1.0e-10) ? Side.MINUS : ((global > 1.0e-10) ? Side.PLUS : Side.HYPER);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1077/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:54:04.242208736 -0500\n@@ -259,7 +259,39 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n+                    if (components.length == ot.components.length) {\n+\t\t\t\t\t\tif (nan) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t} else if (ot.nan) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (negInf || ot.posInf) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (posInf || ot.negInf) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tif (offset < ot.offset) {\n+\t\t\t\t\t\t\t\tencode(ot.offset);\n+\t\t\t\t\t\t\t} else if (offset > ot.offset) {\n+\t\t\t\t\t\t\t\tot.encode(offset);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tfinal int limit = FastMath.min(encoding.length,\n+\t\t\t\t\t\t\t\t\tot.encoding.length);\n+\t\t\t\t\t\t\tfor (int i = 0; i < limit; ++i) {\n+\t\t\t\t\t\t\t\tif (encoding[i] < ot.encoding[i]) {\n+\t\t\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t\t\t} else if (encoding[i] > ot.encoding[i]) {\n+\t\t\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tif (encoding.length < ot.encoding.length) {\n+\t\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t\t} else if (encoding.length > ot.encoding.length) {\n+\t\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\treturn 0;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_489/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:48:56.877143024 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "InsertBefore", 
          "seed": "plus=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_732/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:50:59.193571474 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_732/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:50:59.193571474 -0500\n@@ -160,7 +160,8 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n+            plus = null;\n+\t\t\tminus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Replace", 
          "seed": "plus=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 474, 
          "faulty": "return new PolyhedronsSet(tolerance);", 
          "type": "InsertBefore", 
          "seed": "v=Vector3D.crossProduct(w,u);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:26:39.398599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_756/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:51:10.797611204 -0500\n@@ -471,7 +471,8 @@\n      * PolyhedronsSet PolyhedronsSet} instance)\n      */\n     public PolyhedronsSet wholeSpace() {\n-        return new PolyhedronsSet(tolerance);\n+        v = Vector3D.crossProduct(w, u);\n+\t\treturn new PolyhedronsSet(tolerance);\n     }\n \n     /** Check if the instance contains a point.\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_756/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:51:10.797611204 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_756/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:51:10.801611217 -0500\n@@ -160,7 +160,7 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n+            plus = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "InsertBefore", 
          "seed": "if (offset < ot.offset) {\n  encode(ot.offset);\n}\n else if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_753/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:51:09.685607402 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_753/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:51:09.685607402 -0500\n@@ -253,7 +253,12 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                if (offset < ot.offset) {\n+\t\t\t\t\tencode(ot.offset);\n+\t\t\t\t} else if (offset > ot.offset) {\n+\t\t\t\t\tot.encode(offset);\n+\t\t\t\t}\n+\t\t\t\treturn +1;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (cut != null) {\n  plus.parent=null;\n  minus.parent=null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_950/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:52:50.761948625 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_950/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:52:50.765948639 -0500\n@@ -158,7 +158,6 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n             minus        = null;\n             return false;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 242, 
          "faulty": "return Order.MINUS_SUB_PLUS;", 
          "type": "Replace", 
          "seed": "return Order.MINUS_SUB_PLUS;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_330/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:47:39.588860245 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java", 
          "line": 66, 
          "faulty": "final double global=otherPlane.getOffset(thisPlane);", 
          "type": "InsertBefore", 
          "seed": "if (inter == null) {\n  final double global=otherPlane.getOffset(thisPlane);\n  return (global < -1.0e-10) ? Side.MINUS : ((global > 1.0e-10) ? Side.PLUS : Side.HYPER);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_153/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:46:01.524481696 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java\t2018-12-29 05:26:39.402599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_153/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java\t2018-12-29 05:46:01.528481712 -0500\n@@ -61,7 +61,12 @@\n         final double tolerance = thisPlane.getTolerance();\n \n         if (inter == null) {\n-            // the hyperplanes are parallel,\n+            if (inter == null) {\n+\t\t\t\tfinal double global = otherPlane.getOffset(thisPlane);\n+\t\t\t\treturn (global < -1.0e-10) ? Side.MINUS\n+\t\t\t\t\t\t: ((global > 1.0e-10) ? Side.PLUS : Side.HYPER);\n+\t\t\t}\n+\t\t\t// the hyperplanes are parallel,\n             // any point can be used to check their relative position\n             final double global = otherPlane.getOffset(thisPlane);\n             return (global < -1.0e-10) ? Side.MINUS : ((global > 1.0e-10) ? Side.PLUS : Side.HYPER);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 474, 
          "faulty": "return new PolyhedronsSet(tolerance);", 
          "type": "InsertBefore", 
          "seed": "v=Vector3D.crossProduct(w,u);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:26:39.398599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_374/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:47:59.920935766 -0500\n@@ -471,7 +471,8 @@\n      * PolyhedronsSet PolyhedronsSet} instance)\n      */\n     public PolyhedronsSet wholeSpace() {\n-        return new PolyhedronsSet(tolerance);\n+        v = Vector3D.crossProduct(w, u);\n+\t\treturn new PolyhedronsSet(tolerance);\n     }\n \n     /** Check if the instance contains a point.\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_374/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:47:59.920935766 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 161, 
          "faulty": "return new Plane(this);", 
          "type": "InsertBefore", 
          "seed": "origin=new Vector3D(-originOffset,w);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:26:39.398599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_673/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:50:30.597472970 -0500\n@@ -158,7 +158,8 @@\n      * @return a new hyperplane, copy of the instance\n      */\n     public Plane copySelf() {\n-        return new Plane(this);\n+        origin = new Vector3D(-originOffset, w);\n+\t\treturn new Plane(this);\n     }\n \n     /** Reset the instance as if built from a point and a normal.\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_673/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:50:30.597472970 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 525, 
          "faulty": "return (((Plane)other).w).dotProduct(w) > 0.0;", 
          "type": "Replace", 
          "seed": "return (((Plane)other).w).dotProduct(w) > 0.0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_622/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:50:03.873380079 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_511/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:49:08.029182945 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java", 
          "line": 659, 
          "faulty": "current=null;", 
          "type": "InsertBefore", 
          "seed": "while (start != null && !isIntervalStart(start)) {\n  start=nextInternalNode(start);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_459/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:48:43.061093285 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java\t2018-12-29 05:26:39.390599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_459/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java\t2018-12-29 05:48:43.061093285 -0500\n@@ -655,7 +655,10 @@\n                     getAngle(start), Double.POSITIVE_INFINITY\n                 };\n \n-                // there won't be any other intervals\n+                while (start != null && !isIntervalStart(start)) {\n+\t\t\t\t\tstart = nextInternalNode(start);\n+\t\t\t\t}\n+\t\t\t\t// there won't be any other intervals\n                 current = null;\n \n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Replace", 
          "seed": "if (cut != null) {\n  plus.parent=null;\n  minus.parent=null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_606/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:49:55.897352185 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_606/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:49:55.897352185 -0500\n@@ -160,7 +160,10 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n+            if (cut != null) {\n+\t\t\t\tplus.parent = null;\n+\t\t\t\tminus.parent = null;\n+\t\t\t}\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 216, 
          "faulty": "getTree(true).visit(new FacetsContributionVisitor());", 
          "type": "InsertBefore", 
          "seed": "setSize(0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 474, 
          "faulty": "return new PolyhedronsSet(tolerance);", 
          "type": "InsertBefore", 
          "seed": "v=Vector3D.crossProduct(w,u);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:26:39.398599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_469/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:48:47.845110544 -0500\n@@ -471,7 +471,8 @@\n      * PolyhedronsSet PolyhedronsSet} instance)\n      */\n     public PolyhedronsSet wholeSpace() {\n-        return new PolyhedronsSet(tolerance);\n+        v = Vector3D.crossProduct(w, u);\n+\t\treturn new PolyhedronsSet(tolerance);\n     }\n \n     /** Check if the instance contains a point.\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_469/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:48:47.849110558 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:26:39.398599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_469/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-29 05:48:47.849110558 -0500\n@@ -212,7 +212,8 @@\n     @Override\n     protected void computeGeometricalProperties() {\n \n-        // compute the contribution of all boundary facets\n+        setSize(0);\n+\t\t// compute the contribution of all boundary facets\n         getTree(true).visit(new FacetsContributionVisitor());\n \n         if (getSize() < 0) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Replace", 
          "seed": "plus=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_376/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:48:00.464937776 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_376/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:48:00.464937776 -0500\n@@ -160,7 +160,7 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n+            plus = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "InsertBefore", 
          "seed": "if (components.length == ot.components.length) {\n  if (nan) {\n    return +1;\n  }\n else   if (ot.nan) {\n    return -1;\n  }\n else   if (negInf || ot.posInf) {\n    return -1;\n  }\n else   if (posInf || ot.negInf) {\n    return +1;\n  }\n else {\n    if (offset < ot.offset) {\n      encode(ot.offset);\n    }\n else     if (offset > ot.offset) {\n      ot.encode(offset);\n    }\n    final int limit=FastMath.min(encoding.length,ot.encoding.length);\n    for (int i=0; i < limit; ++i) {\n      if (encoding[i] < ot.encoding[i]) {\n        return -1;\n      }\n else       if (encoding[i] > ot.encoding[i]) {\n        return +1;\n      }\n    }\n    if (encoding.length < ot.encoding.length) {\n      return -1;\n    }\n else     if (encoding.length > ot.encoding.length) {\n      return +1;\n    }\n else {\n      return 0;\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1045/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:53:48.470140826 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1045/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:53:48.470140826 -0500\n@@ -253,7 +253,40 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                if (components.length == ot.components.length) {\n+\t\t\t\t\tif (nan) {\n+\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t} else if (ot.nan) {\n+\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t} else if (negInf || ot.posInf) {\n+\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t} else if (posInf || ot.negInf) {\n+\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tif (offset < ot.offset) {\n+\t\t\t\t\t\t\tencode(ot.offset);\n+\t\t\t\t\t\t} else if (offset > ot.offset) {\n+\t\t\t\t\t\t\tot.encode(offset);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tfinal int limit = FastMath.min(encoding.length,\n+\t\t\t\t\t\t\t\tot.encoding.length);\n+\t\t\t\t\t\tfor (int i = 0; i < limit; ++i) {\n+\t\t\t\t\t\t\tif (encoding[i] < ot.encoding[i]) {\n+\t\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t\t} else if (encoding[i] > ot.encoding[i]) {\n+\t\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tif (encoding.length < ot.encoding.length) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (encoding.length > ot.encoding.length) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\treturn 0;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\treturn +1;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java", 
          "line": 654, 
          "faulty": "pending=new double[]{getAngle(start),Double.POSITIVE_INFINITY};", 
          "type": "Replace", 
          "seed": "if (end != null) {\n  pending=new double[]{getAngle(start),getAngle(end)};\n  current=end;\n}\n else {\n  pending=new double[]{getAngle(start),Double.POSITIVE_INFINITY};\n  current=null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_345/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:47:47.040888028 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java\t2018-12-29 05:26:39.390599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_345/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java\t2018-12-29 05:47:47.044888043 -0500\n@@ -650,10 +650,14 @@\n \n             } else {\n \n-                // the final interval is open toward infinity\n-                pending = new double[] {\n-                    getAngle(start), Double.POSITIVE_INFINITY\n-                };\n+                if (end != null) {\n+\t\t\t\t\tpending = new double[] { getAngle(start), getAngle(end) };\n+\t\t\t\t\tcurrent = end;\n+\t\t\t\t} else {\n+\t\t\t\t\tpending = new double[] { getAngle(start),\n+\t\t\t\t\t\t\tDouble.POSITIVE_INFINITY };\n+\t\t\t\t\tcurrent = null;\n+\t\t\t\t}\n \n                 // there won't be any other intervals\n                 current = null;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Replace", 
          "seed": "if (cut != null) {\n  cut=cut.split(hyperplane).getPlus();\n  plus.chopOffMinus(hyperplane);\n  minus.chopOffMinus(hyperplane);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1720/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 06:00:00.723572548 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1720/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 06:00:00.723572548 -0500\n@@ -158,7 +158,11 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n+            if (cut != null) {\n+\t\t\t\tcut = cut.split(hyperplane).getPlus();\n+\t\t\t\tplus.chopOffMinus(hyperplane);\n+\t\t\t\tminus.chopOffMinus(hyperplane);\n+\t\t\t}\n             plus         = null;\n             minus        = null;\n             return false;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "return -1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java", 
          "line": 66, 
          "faulty": "final double global=otherPlane.getOffset(thisPlane);", 
          "type": "InsertBefore", 
          "seed": "if (inter == null) {\n  final double global=otherPlane.getOffset(thisPlane);\n  return (global < -1.0e-10) ? Side.MINUS : ((global > 1.0e-10) ? Side.PLUS : Side.HYPER);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1398/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:57:04.582930000 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java\t2018-12-29 05:26:39.402599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1398/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java\t2018-12-29 05:57:04.586930016 -0500\n@@ -61,7 +61,12 @@\n         final double tolerance = thisPlane.getTolerance();\n \n         if (inter == null) {\n-            // the hyperplanes are parallel,\n+            if (inter == null) {\n+\t\t\t\tfinal double global = otherPlane.getOffset(thisPlane);\n+\t\t\t\treturn (global < -1.0e-10) ? Side.MINUS\n+\t\t\t\t\t\t: ((global > 1.0e-10) ? Side.PLUS : Side.HYPER);\n+\t\t\t}\n+\t\t\t// the hyperplanes are parallel,\n             // any point can be used to check their relative position\n             final double global = otherPlane.getOffset(thisPlane);\n             return (global < -1.0e-10) ? Side.MINUS : ((global > 1.0e-10) ? Side.PLUS : Side.HYPER);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1398/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:57:04.586930016 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Replace", 
          "seed": "this.components=components.clone();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 162, 
          "faulty": "plus=null;", 
          "type": "Delete", 
          "seed": "cut=chopped;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_257/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:47:01.724717104 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_257/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:47:01.728717121 -0500\n@@ -259,7 +259,7 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n+                    this.components = components.clone();\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_257/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:47:01.728717121 -0500\n@@ -159,7 +159,6 @@\n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n-            plus         = null;\n             minus        = null;\n             return false;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "Replace", 
          "seed": "return context.getLocalizedMessage();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_801/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:51:33.873689829 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 05:26:39.330598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_801/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-29 05:51:33.873689829 -0500\n@@ -77,7 +77,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        return context.getLocalizedMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "InsertBefore", 
          "seed": "if (offset < ot.offset) {\n  encode(ot.offset);\n}\n else if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 162, 
          "faulty": "plus=null;", 
          "type": "Replace", 
          "seed": "this.cut=cut;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_721/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:50:54.493555343 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_721/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:50:54.497555357 -0500\n@@ -253,7 +253,12 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                if (offset < ot.offset) {\n+\t\t\t\t\tencode(ot.offset);\n+\t\t\t\t} else if (offset > ot.offset) {\n+\t\t\t\t\tot.encode(offset);\n+\t\t\t\t}\n+\t\t\t\treturn +1;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_721/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:50:54.497555357 -0500\n@@ -159,7 +159,7 @@\n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n-            plus         = null;\n+            this.cut = cut;\n             minus        = null;\n             return false;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Replace", 
          "seed": "if (cut != null) {\n  plus.parent=null;\n  minus.parent=null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 474, 
          "faulty": "return new PolyhedronsSet(tolerance);", 
          "type": "InsertBefore", 
          "seed": "v=Vector3D.crossProduct(w,u);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:26:39.398599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1215/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-29 05:55:15.378504029 -0500\n@@ -471,7 +471,8 @@\n      * PolyhedronsSet PolyhedronsSet} instance)\n      */\n     public PolyhedronsSet wholeSpace() {\n-        return new PolyhedronsSet(tolerance);\n+        v = Vector3D.crossProduct(w, u);\n+\t\treturn new PolyhedronsSet(tolerance);\n     }\n \n     /** Check if the instance contains a point.\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1215/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:55:15.382504046 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_1215/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:55:15.382504046 -0500\n@@ -158,7 +158,10 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n+            if (cut != null) {\n+\t\t\t\tplus.parent = null;\n+\t\t\t\tminus.parent = null;\n+\t\t\t}\n             plus         = null;\n             minus        = null;\n             return false;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Replace", 
          "seed": "if (components.length == ot.components.length) {\n  if (nan) {\n    return +1;\n  }\n else   if (ot.nan) {\n    return -1;\n  }\n else   if (negInf || ot.posInf) {\n    return -1;\n  }\n else   if (posInf || ot.negInf) {\n    return +1;\n  }\n else {\n    if (offset < ot.offset) {\n      encode(ot.offset);\n    }\n else     if (offset > ot.offset) {\n      ot.encode(offset);\n    }\n    final int limit=FastMath.min(encoding.length,ot.encoding.length);\n    for (int i=0; i < limit; ++i) {\n      if (encoding[i] < ot.encoding[i]) {\n        return -1;\n      }\n else       if (encoding[i] > ot.encoding[i]) {\n        return +1;\n      }\n    }\n    if (encoding.length < ot.encoding.length) {\n      return -1;\n    }\n else     if (encoding.length > ot.encoding.length) {\n      return +1;\n    }\n else {\n      return 0;\n    }\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_888/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:52:18.733841366 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 05:26:39.338598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_888/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 05:52:18.733841366 -0500\n@@ -134,7 +134,7 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        return getMessage(Locale.US);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:26:39.426600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_888/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-29 05:52:18.733841366 -0500\n@@ -259,7 +259,39 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n+                    if (components.length == ot.components.length) {\n+\t\t\t\t\t\tif (nan) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t} else if (ot.nan) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (negInf || ot.posInf) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (posInf || ot.negInf) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tif (offset < ot.offset) {\n+\t\t\t\t\t\t\t\tencode(ot.offset);\n+\t\t\t\t\t\t\t} else if (offset > ot.offset) {\n+\t\t\t\t\t\t\t\tot.encode(offset);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tfinal int limit = FastMath.min(encoding.length,\n+\t\t\t\t\t\t\t\t\tot.encoding.length);\n+\t\t\t\t\t\t\tfor (int i = 0; i < limit; ++i) {\n+\t\t\t\t\t\t\t\tif (encoding[i] < ot.encoding[i]) {\n+\t\t\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t\t\t} else if (encoding[i] > ot.encoding[i]) {\n+\t\t\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tif (encoding.length < ot.encoding.length) {\n+\t\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t\t} else if (encoding.length > ot.encoding.length) {\n+\t\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\treturn 0;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 162, 
          "faulty": "plus=null;", 
          "type": "Replace", 
          "seed": "this.cut=cut;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_348/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:47:48.116892029 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_348/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:47:48.116892029 -0500\n@@ -159,7 +159,7 @@\n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n-            plus         = null;\n+            this.cut = cut;\n             minus        = null;\n             return false;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java", 
          "line": 66, 
          "faulty": "final double global=otherPlane.getOffset(thisPlane);", 
          "type": "InsertBefore", 
          "seed": "if (inter == null) {\n  final double global=otherPlane.getOffset(thisPlane);\n  return (global < -1.0e-10) ? Side.MINUS : ((global > 1.0e-10) ? Side.PLUS : Side.HYPER);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 162, 
          "faulty": "plus=null;", 
          "type": "Delete", 
          "seed": "cut=chopped;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_593/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:49:49.545329911 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java\t2018-12-29 05:26:39.402599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_593/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java\t2018-12-29 05:49:49.549329925 -0500\n@@ -61,7 +61,12 @@\n         final double tolerance = thisPlane.getTolerance();\n \n         if (inter == null) {\n-            // the hyperplanes are parallel,\n+            if (inter == null) {\n+\t\t\t\tfinal double global = otherPlane.getOffset(thisPlane);\n+\t\t\t\treturn (global < -1.0e-10) ? Side.MINUS\n+\t\t\t\t\t\t: ((global > 1.0e-10) ? Side.PLUS : Side.HYPER);\n+\t\t\t}\n+\t\t\t// the hyperplanes are parallel,\n             // any point can be used to check their relative position\n             final double global = otherPlane.getOffset(thisPlane);\n             return (global < -1.0e-10) ? Side.MINUS : ((global > 1.0e-10) ? Side.PLUS : Side.HYPER);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:26:39.418600000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_593/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-29 05:49:49.549329925 -0500\n@@ -159,7 +159,6 @@\n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n-            plus         = null;\n             minus        = null;\n             return false;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:26:39.406599000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_728/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-29 05:50:57.633566123 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 05:26:39.338598000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/patches_089n/Patch_728/patched/tmp/Arja_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-29 05:50:57.633566123 -0500\n@@ -125,7 +125,8 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        context = new HashMap<String, Object>();\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n\n\n"
    }
  ]
}