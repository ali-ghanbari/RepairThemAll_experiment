{
  "repair_end": "2018-12-31 03:14:24.610291", 
  "repair_begin": "2018-12-31 02:39:30.889136", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 216, 
          "faulty": "getTree(true).visit(new FacetsContributionVisitor());", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_290/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:07:52.650536385 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_290/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:07:52.654536445 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_290/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:07:52.654536445 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_290/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 21:07:52.658536503 -0500\n@@ -212,7 +212,8 @@\n     @Override\n     protected void computeGeometricalProperties() {\n \n-        // compute the contribution of all boundary facets\n+        int i = 0;\n+\t\t// compute the contribution of all boundary facets\n         getTree(true).visit(new FacetsContributionVisitor());\n \n         if (getSize() < 0) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_290/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:07:52.658536503 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "encoding=new long[]{0x0L};"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_693/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:12:59.230773348 -0500\n@@ -77,7 +77,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_693/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:12:59.234773400 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_693/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:12:59.234773400 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_693/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:12:59.234773400 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 216, 
          "faulty": "getTree(true).visit(new FacetsContributionVisitor());", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "InsertBefore", 
          "seed": "int scale=32;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 162, 
          "faulty": "plus=null;", 
          "type": "Delete", 
          "seed": "final SubHyperplane<S> chopped=fitToCell(hyperplane.wholeHyperplane());"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_452/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:10:00.664413875 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_452/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:10:00.664413875 -0500\n@@ -253,13 +253,13 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                int scale = 32;\n+\t\t\t\treturn +1;\n             } else {\n \n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_452/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 21:10:00.664413875 -0500\n@@ -212,7 +212,8 @@\n     @Override\n     protected void computeGeometricalProperties() {\n \n-        // compute the contribution of all boundary facets\n+        int i = 0;\n+\t\t// compute the contribution of all boundary facets\n         getTree(true).visit(new FacetsContributionVisitor());\n \n         if (getSize() < 0) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_452/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:10:00.668413935 -0500\n@@ -158,9 +158,6 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n-            plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_769/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:14:11.759689676 -0500\n@@ -77,7 +77,10 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_769/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:14:11.759689676 -0500\n@@ -134,7 +134,10 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\tthis.throwable = throwable;\n+\t\tthis.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n@@ -178,7 +181,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                context = new HashMap<String, Object>();\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_769/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:14:11.763689726 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_769/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:14:11.763689726 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_639/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:12:19.334263774 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_639/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:12:19.338263826 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_639/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:12:19.338263826 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "return parent;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "if (nan) {\n  return +1;\n}\n else if (ot.nan) {\n  return -1;\n}\n else if (negInf || ot.posInf) {\n  return -1;\n}\n else if (posInf || ot.negInf) {\n  return +1;\n}\n else {\n  if (offset < ot.offset) {\n    encode(ot.offset);\n  }\n else   if (offset > ot.offset) {\n    ot.encode(offset);\n  }\n  final int limit=FastMath.min(encoding.length,ot.encoding.length);\n  for (int i=0; i < limit; ++i) {\n    if (encoding[i] < ot.encoding[i]) {\n      return -1;\n    }\n else     if (encoding[i] > ot.encoding[i]) {\n      return +1;\n    }\n  }\n  if (encoding.length < ot.encoding.length) {\n    return -1;\n  }\n else   if (encoding.length > ot.encoding.length) {\n    return +1;\n  }\n else {\n    return 0;\n  }\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 162, 
          "faulty": "plus=null;", 
          "type": "Replace", 
          "seed": "SubHyperplane<S> plusInside=null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_641/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:12:20.506278804 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_641/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:12:20.510278855 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_641/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:12:20.510278855 -0500\n@@ -253,7 +253,37 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                if (nan) {\n+\t\t\t\t\treturn +1;\n+\t\t\t\t} else if (ot.nan) {\n+\t\t\t\t\treturn -1;\n+\t\t\t\t} else if (negInf || ot.posInf) {\n+\t\t\t\t\treturn -1;\n+\t\t\t\t} else if (posInf || ot.negInf) {\n+\t\t\t\t\treturn +1;\n+\t\t\t\t} else {\n+\t\t\t\t\tif (offset < ot.offset) {\n+\t\t\t\t\t\tencode(ot.offset);\n+\t\t\t\t\t} else if (offset > ot.offset) {\n+\t\t\t\t\t\tot.encode(offset);\n+\t\t\t\t\t}\n+\t\t\t\t\tfinal int limit = FastMath.min(encoding.length,\n+\t\t\t\t\t\t\tot.encoding.length);\n+\t\t\t\t\tfor (int i = 0; i < limit; ++i) {\n+\t\t\t\t\t\tif (encoding[i] < ot.encoding[i]) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (encoding[i] > ot.encoding[i]) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tif (encoding.length < ot.encoding.length) {\n+\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t} else if (encoding.length > ot.encoding.length) {\n+\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\treturn 0;\n+\t\t\t\t\t}\n+\t\t\t\t}\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_641/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:12:20.510278855 -0500\n@@ -159,8 +159,7 @@\n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n-            plus         = null;\n-            minus        = null;\n+            SubHyperplane<S> plusInside = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 216, 
          "faulty": "getTree(true).visit(new FacetsContributionVisitor());", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 414, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "final double x=v.getX();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_311/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:08:08.026761773 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_311/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-30 21:08:08.030761832 -0500\n@@ -411,7 +411,8 @@\n     public Line intersection(final Plane other) {\n         final Vector3D direction = Vector3D.crossProduct(w, other.w);\n         if (direction.getNorm() < 1.0e-10) {\n-            return null;\n+            final double x = v.getX();\n+\t\t\treturn null;\n         }\n         final Vector3D point = intersection(this, other, new Plane(direction, tolerance));\n         return new Line(point, point.add(direction), tolerance);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_311/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:08:08.030761832 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_311/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 21:08:08.030761832 -0500\n@@ -212,7 +212,8 @@\n     @Override\n     protected void computeGeometricalProperties() {\n \n-        // compute the contribution of all boundary facets\n+        int i = 0;\n+\t\t// compute the contribution of all boundary facets\n         getTree(true).visit(new FacetsContributionVisitor());\n \n         if (getSize() < 0) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_508/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:10:40.952987979 -0500\n@@ -77,7 +77,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_508/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:10:40.952987979 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_508/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:10:40.956988032 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_508/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:10:40.956988032 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "InsertBefore", 
          "seed": "int scale=32;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_518/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:10:49.073094406 -0500\n@@ -77,7 +77,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_518/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:10:49.073094406 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_518/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:10:49.077094459 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_518/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:10:49.077094459 -0500\n@@ -253,7 +253,8 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                int scale = 32;\n+\t\t\t\treturn +1;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_518/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:10:49.077094459 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_419/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:09:29.527934977 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_419/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:09:29.527934977 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_419/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:09:29.531935040 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "return parent;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "if (nan) {\n  return +1;\n}\n else if (ot.nan) {\n  return -1;\n}\n else if (negInf || ot.posInf) {\n  return -1;\n}\n else if (posInf || ot.negInf) {\n  return +1;\n}\n else {\n  if (offset < ot.offset) {\n    encode(ot.offset);\n  }\n else   if (offset > ot.offset) {\n    ot.encode(offset);\n  }\n  final int limit=FastMath.min(encoding.length,ot.encoding.length);\n  for (int i=0; i < limit; ++i) {\n    if (encoding[i] < ot.encoding[i]) {\n      return -1;\n    }\n else     if (encoding[i] > ot.encoding[i]) {\n      return +1;\n    }\n  }\n  if (encoding.length < ot.encoding.length) {\n    return -1;\n  }\n else   if (encoding.length > ot.encoding.length) {\n    return +1;\n  }\n else {\n    return 0;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_603/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:11:53.681933868 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_603/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:11:53.685933919 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_603/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:11:53.685933919 -0500\n@@ -253,7 +253,37 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                if (nan) {\n+\t\t\t\t\treturn +1;\n+\t\t\t\t} else if (ot.nan) {\n+\t\t\t\t\treturn -1;\n+\t\t\t\t} else if (negInf || ot.posInf) {\n+\t\t\t\t\treturn -1;\n+\t\t\t\t} else if (posInf || ot.negInf) {\n+\t\t\t\t\treturn +1;\n+\t\t\t\t} else {\n+\t\t\t\t\tif (offset < ot.offset) {\n+\t\t\t\t\t\tencode(ot.offset);\n+\t\t\t\t\t} else if (offset > ot.offset) {\n+\t\t\t\t\t\tot.encode(offset);\n+\t\t\t\t\t}\n+\t\t\t\t\tfinal int limit = FastMath.min(encoding.length,\n+\t\t\t\t\t\t\tot.encoding.length);\n+\t\t\t\t\tfor (int i = 0; i < limit; ++i) {\n+\t\t\t\t\t\tif (encoding[i] < ot.encoding[i]) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (encoding[i] > ot.encoding[i]) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tif (encoding.length < ot.encoding.length) {\n+\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t} else if (encoding.length > ot.encoding.length) {\n+\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\treturn 0;\n+\t\t\t\t\t}\n+\t\t\t\t}\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_603/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:11:53.685933919 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }
      ], 
      "patch": "\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_613/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:12:02.162043132 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_613/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:12:02.162043132 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 414, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "double normProduct=u.getNorm() * v.getNorm();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_139/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-30 21:05:46.860932308 -0500\n@@ -411,7 +411,8 @@\n     public Line intersection(final Plane other) {\n         final Vector3D direction = Vector3D.crossProduct(w, other.w);\n         if (direction.getNorm() < 1.0e-10) {\n-            return null;\n+            double normProduct = u.getNorm() * v.getNorm();\n+\t\t\treturn null;\n         }\n         final Vector3D point = intersection(this, other, new Plane(direction, tolerance));\n         return new Line(point, point.add(direction), tolerance);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_139/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:05:46.860932308 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_139/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:05:46.860932308 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 216, 
          "faulty": "getTree(true).visit(new FacetsContributionVisitor());", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Replace", 
          "seed": "long mask=0xffffffff00000000L;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_373/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:08:54.243421625 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_373/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:08:54.243421625 -0500\n@@ -259,7 +259,7 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n+                    long mask = 0xffffffff00000000L;\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_373/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 21:08:54.247421681 -0500\n@@ -212,7 +212,8 @@\n     @Override\n     protected void computeGeometricalProperties() {\n \n-        // compute the contribution of all boundary facets\n+        int i = 0;\n+\t\t// compute the contribution of all boundary facets\n         getTree(true).visit(new FacetsContributionVisitor());\n \n         if (getSize() < 0) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_373/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:08:54.247421681 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_655/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:12:30.866411497 -0500\n@@ -77,12 +77,16 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_655/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:12:30.870411548 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_655/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:12:30.870411548 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "InsertBefore", 
          "seed": "int scale=32;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_570/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:11:29.021614950 -0500\n@@ -77,7 +77,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_570/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:11:29.025615001 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_570/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:11:29.025615001 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_570/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:11:29.029615053 -0500\n@@ -253,7 +253,8 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                int scale = 32;\n+\t\t\t\treturn +1;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_570/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:11:29.029615053 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }
      ], 
      "patch": "\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_581/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:11:36.701714463 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_581/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:11:36.705714514 -0500\n@@ -158,7 +158,6 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n             minus        = null;\n             return false;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_226/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:07:04.385806991 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_226/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:07:04.389807054 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_226/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:07:04.389807054 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "final double distance=end.distance((Point<Euclidean2D>)segment.getStart());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "int scale=32;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (posInf && negInf) {\n  posInf=false;\n  negInf=false;\n  nan=true;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_134/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:05:43.436894744 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_134/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:05:43.440894789 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_134/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:05:43.440894789 -0500\n@@ -253,13 +253,12 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                int scale = 32;\n             } else {\n \n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "final double distance=end.distance((Point<Euclidean2D>)segment.getStart());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "int scale=32;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_153/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:05:54.477015852 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_153/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:05:54.477015852 -0500\n@@ -253,7 +253,7 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                int scale = 32;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_153/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:05:54.481015895 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "encode(ot.offset);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_240/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:07:16.025986158 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_240/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:07:16.029986220 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_240/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:07:16.029986220 -0500\n@@ -253,13 +253,12 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                encode(ot.offset);\n             } else {\n \n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_240/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:07:16.029986220 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 216, 
          "faulty": "getTree(true).visit(new FacetsContributionVisitor());", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_306/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:08:04.486710158 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_306/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:08:04.486710158 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_306/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 21:08:04.490710216 -0500\n@@ -212,7 +212,8 @@\n     @Override\n     protected void computeGeometricalProperties() {\n \n-        // compute the contribution of all boundary facets\n+        int i = 0;\n+\t\t// compute the contribution of all boundary facets\n         getTree(true).visit(new FacetsContributionVisitor());\n \n         if (getSize() < 0) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "final ArrayList<SubHyperplane<S>> plusList=new ArrayList<SubHyperplane<S>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 216, 
          "faulty": "getTree(true).visit(new FacetsContributionVisitor());", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 414, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "final double x=v.getX();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 251, 
          "faulty": "addContribution(attribute.getPlusOutside(),false);", 
          "type": "InsertBefore", 
          "seed": "final double[] quat=new double[4];"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_317/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:08:11.346810033 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_317/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-30 21:08:11.350810091 -0500\n@@ -411,7 +411,8 @@\n     public Line intersection(final Plane other) {\n         final Vector3D direction = Vector3D.crossProduct(w, other.w);\n         if (direction.getNorm() < 1.0e-10) {\n-            return null;\n+            final double x = v.getX();\n+\t\t\treturn null;\n         }\n         final Vector3D point = intersection(this, other, new Plane(direction, tolerance));\n         return new Line(point, point.add(direction), tolerance);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_317/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:08:11.350810091 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_317/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:08:11.354810149 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_317/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 21:08:11.354810149 -0500\n@@ -212,7 +212,8 @@\n     @Override\n     protected void computeGeometricalProperties() {\n \n-        // compute the contribution of all boundary facets\n+        int i = 0;\n+\t\t// compute the contribution of all boundary facets\n         getTree(true).visit(new FacetsContributionVisitor());\n \n         if (getSize() < 0) {\n@@ -248,7 +249,8 @@\n             final BoundaryAttribute<Euclidean3D> attribute =\n                 (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n             if (attribute.getPlusOutside() != null) {\n-                addContribution(attribute.getPlusOutside(), false);\n+                final double[] quat = new double[4];\n+\t\t\t\taddContribution(attribute.getPlusOutside(), false);\n             }\n             if (attribute.getPlusInside() != null) {\n                 addContribution(attribute.getPlusInside(), true);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_317/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:08:11.354810149 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_619/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:12:05.450085442 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_619/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:12:05.454085494 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_619/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:12:05.458085545 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Delete", 
          "seed": "final double distance=end.distance((Point<Euclidean2D>)segment.getStart());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_763/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:14:00.035542375 -0500\n@@ -77,7 +77,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_763/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:14:00.039542425 -0500\n@@ -134,7 +134,9 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\tthis.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_763/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:14:00.039542425 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_763/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:14:00.043542476 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_564/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:11:24.565557129 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_564/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:11:24.569557181 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_564/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:11:24.573557233 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 162, 
          "faulty": "plus=null;", 
          "type": "Delete", 
          "seed": "final SubHyperplane<S> chopped=fitToCell(hyperplane.wholeHyperplane());"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_475/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:10:15.820641763 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_475/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:10:15.824641823 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_475/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:10:15.824641823 -0500\n@@ -158,8 +158,6 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n-            plus         = null;\n             minus        = null;\n             return false;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 164, 
          "faulty": "return false;", 
          "type": "InsertBefore", 
          "seed": "if (cut != null) {\n  cut=cut.split(hyperplane).getPlus();\n  plus.chopOffMinus(hyperplane);\n  minus.chopOffMinus(hyperplane);\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_658/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:12:32.698434932 -0500\n@@ -77,7 +77,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_658/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:12:32.702434983 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_658/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:12:32.702434983 -0500\n@@ -158,10 +158,13 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n-            return false;\n+            if (cut != null) {\n+\t\t\t\tcut = cut.split(hyperplane).getPlus();\n+\t\t\t\tplus.chopOffMinus(hyperplane);\n+\t\t\t\tminus.chopOffMinus(hyperplane);\n+\t\t\t}\n+\t\t\treturn false;\n         }\n \n         cut          = chopped;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_143/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:05:49.360959733 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_143/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:05:49.364959776 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "cut=cut.split(hyperplane).getPlus();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_621/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:12:06.370097276 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_621/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:12:06.374097327 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_621/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:12:06.374097327 -0500\n@@ -158,7 +158,6 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n             minus        = null;\n             return false;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_76/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:04:50.836317360 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_76/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:04:50.856317580 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_541/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:11:08.233344692 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_541/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:11:08.233344692 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_541/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:11:08.237344744 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_541/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:11:08.237344744 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_460/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:10:06.064495444 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_460/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:10:06.064495444 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_460/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:10:06.064495444 -0500\n@@ -158,7 +158,6 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n             minus        = null;\n             return false;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Replace", 
          "seed": "if (components.length == ot.components.length) {\n  if (nan) {\n    return +1;\n  }\n else   if (ot.nan) {\n    return -1;\n  }\n else   if (negInf || ot.posInf) {\n    return -1;\n  }\n else   if (posInf || ot.negInf) {\n    return +1;\n  }\n else {\n    if (offset < ot.offset) {\n      encode(ot.offset);\n    }\n else     if (offset > ot.offset) {\n      ot.encode(offset);\n    }\n    final int limit=FastMath.min(encoding.length,ot.encoding.length);\n    for (int i=0; i < limit; ++i) {\n      if (encoding[i] < ot.encoding[i]) {\n        return -1;\n      }\n else       if (encoding[i] > ot.encoding[i]) {\n        return +1;\n      }\n    }\n    if (encoding.length < ot.encoding.length) {\n      return -1;\n    }\n else     if (encoding.length > ot.encoding.length) {\n      return +1;\n    }\n else {\n      return 0;\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_446/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:09:56.560351599 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_446/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:09:56.560351599 -0500\n@@ -259,7 +259,39 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n+                    if (components.length == ot.components.length) {\n+\t\t\t\t\t\tif (nan) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t} else if (ot.nan) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (negInf || ot.posInf) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (posInf || ot.negInf) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tif (offset < ot.offset) {\n+\t\t\t\t\t\t\t\tencode(ot.offset);\n+\t\t\t\t\t\t\t} else if (offset > ot.offset) {\n+\t\t\t\t\t\t\t\tot.encode(offset);\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tfinal int limit = FastMath.min(encoding.length,\n+\t\t\t\t\t\t\t\t\tot.encoding.length);\n+\t\t\t\t\t\t\tfor (int i = 0; i < limit; ++i) {\n+\t\t\t\t\t\t\t\tif (encoding[i] < ot.encoding[i]) {\n+\t\t\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t\t\t} else if (encoding[i] > ot.encoding[i]) {\n+\t\t\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tif (encoding.length < ot.encoding.length) {\n+\t\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t\t} else if (encoding.length > ot.encoding.length) {\n+\t\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\treturn 0;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "int scale=32;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_145/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:05:50.292969956 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_145/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:05:50.292969956 -0500\n@@ -253,13 +253,12 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                int scale = 32;\n             } else {\n \n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_145/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:05:50.296970001 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_706/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:13:16.054987016 -0500\n@@ -77,7 +77,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_706/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:13:16.054987016 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_706/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:13:16.058987067 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "int scale=32;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Delete", 
          "seed": "nan=false;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_218/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:06:59.149725698 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_218/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:06:59.153725760 -0500\n@@ -253,13 +253,11 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n             } else {\n \n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_218/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:06:59.153725760 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_552/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:11:15.185435220 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_552/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:11:15.185435220 -0500\n@@ -125,7 +125,8 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -134,7 +135,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_552/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:11:15.189435272 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_552/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:11:15.189435272 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 164, 
          "faulty": "return false;", 
          "type": "InsertBefore", 
          "seed": "plus=null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_722/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:13:29.083152001 -0500\n@@ -77,7 +77,12 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_722/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:13:29.083152001 -0500\n@@ -134,7 +134,9 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\tthis.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_722/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:13:29.083152001 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_722/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:13:29.087152051 -0500\n@@ -158,10 +158,9 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n-            return false;\n+            plus = null;\n+\t\t\treturn false;\n         }\n \n         cut          = chopped;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "int scale=32;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Delete", 
          "seed": "nan=false;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_201/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:06:40.589521437 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_201/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:06:40.589521437 -0500\n@@ -253,7 +253,6 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 164, 
          "faulty": "return false;", 
          "type": "InsertBefore", 
          "seed": "plus=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "return lsb;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_651/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:12:28.522381500 -0500\n@@ -77,7 +77,10 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_651/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:12:28.526381551 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_651/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:12:28.526381551 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_651/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:12:28.526381551 -0500\n@@ -158,10 +158,9 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n-            return false;\n+            plus = null;\n+\t\t\treturn false;\n         }\n \n         cut          = chopped;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_407/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:09:20.471792776 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_407/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:09:20.471792776 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_407/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:09:20.475792839 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "encode(ot.offset);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java", 
          "line": 58, 
          "faulty": "final Plane otherPlane=(Plane)hyperplane;", 
          "type": "InsertBefore", 
          "seed": "final double[] quat=new double[4];"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_778/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:14:18.395772917 -0500\n@@ -77,7 +77,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_778/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:14:18.407773068 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java\t2018-12-30 20:38:43.781688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_778/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java\t2018-12-30 21:14:18.411773117 -0500\n@@ -55,7 +55,8 @@\n     @Override\n     public Side side(Hyperplane<Euclidean3D> hyperplane) {\n \n-        final Plane otherPlane = (Plane) hyperplane;\n+        final double[] quat = new double[4];\n+\t\tfinal Plane otherPlane = (Plane) hyperplane;\n         final Plane thisPlane  = (Plane) getHyperplane();\n         final Line  inter      = otherPlane.intersection(thisPlane);\n         final double tolerance = thisPlane.getTolerance();\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_778/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:14:18.411773117 -0500\n@@ -253,7 +253,7 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                encode(ot.offset);\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_778/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:14:18.411773117 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 162, 
          "faulty": "plus=null;", 
          "type": "Delete", 
          "seed": "final SubHyperplane<S> chopped=fitToCell(hyperplane.wholeHyperplane());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.ITERATIONS);"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_465/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:10:09.672549711 -0500\n@@ -77,7 +77,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tgetContext().addMessage(LocalizedFormats.ITERATIONS);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_465/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:10:09.676549772 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_465/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:10:09.676549772 -0500\n@@ -158,8 +158,6 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n-            plus         = null;\n             minus        = null;\n             return false;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "InsertBefore", 
          "seed": "final List<Object> list=new ArrayList<Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 162, 
          "faulty": "plus=null;", 
          "type": "InsertBefore", 
          "seed": "cut=null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_573/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:11:30.605635488 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_573/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:11:30.605635488 -0500\n@@ -125,7 +125,8 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        final List<Object> list = new ArrayList<Object>();\n+\t\treturn getMessage(Locale.US);\n     }\n \n     /**\n@@ -134,7 +135,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_573/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:11:30.609635540 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_573/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:11:30.609635540 -0500\n@@ -158,9 +158,8 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n-            plus         = null;\n-            minus        = null;\n+            cut = null;\n+\t\t\tplus         = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "posInf=false;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_674/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:12:44.034579746 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_674/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:12:44.038579796 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_674/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:12:44.038579796 -0500\n@@ -253,7 +253,7 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                posInf = false;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_674/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:12:44.038579796 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_469/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:10:12.496592059 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_469/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:10:12.500592119 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_469/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:10:12.500592119 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "int msb=Integer.MIN_VALUE;"
        }
      ], 
      "patch": "\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_610/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:12:00.394020368 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_610/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:12:00.398020420 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "final ArrayList<SubHyperplane<S>> plusList=new ArrayList<SubHyperplane<S>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "InsertBefore", 
          "seed": "int j=0;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_375/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:08:55.023432553 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_375/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:08:55.027432609 -0500\n@@ -823,7 +823,8 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            int j = 0;\n+\t\t\treturn null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_375/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:08:55.027432609 -0500\n@@ -158,7 +158,6 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n             minus        = null;\n             return false;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_383/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:09:00.851513997 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_383/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:09:00.855514054 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_383/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:09:00.855514054 -0500\n@@ -158,7 +158,6 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n             minus        = null;\n             return false;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "lsb=Integer.MAX_VALUE;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Delete", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_334/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:08:23.674988026 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_334/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:08:23.682988141 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_334/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:08:23.682988141 -0500\n@@ -253,13 +253,11 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n             } else {\n \n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_334/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:08:23.682988141 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_556/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:11:17.985471639 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_556/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:11:17.985471639 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "int scale=32;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_253/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:07:25.598131885 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_253/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:07:25.602131946 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_253/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:07:25.602131946 -0500\n@@ -253,13 +253,12 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                int scale = 32;\n             } else {\n \n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_253/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:07:25.606132007 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "encode(ot.offset);"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_747/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:13:47.287381860 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_747/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:13:47.287381860 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_747/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:13:47.291381911 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_747/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:13:47.291381911 -0500\n@@ -253,7 +253,7 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                encode(ot.offset);\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_747/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:13:47.291381911 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 216, 
          "faulty": "getTree(true).visit(new FacetsContributionVisitor());", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_323/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:08:15.634872158 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_323/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 21:08:15.634872158 -0500\n@@ -212,7 +212,8 @@\n     @Override\n     protected void computeGeometricalProperties() {\n \n-        // compute the contribution of all boundary facets\n+        int i = 0;\n+\t\t// compute the contribution of all boundary facets\n         getTree(true).visit(new FacetsContributionVisitor());\n \n         if (getSize() < 0) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_129/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:05:40.576863367 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_129/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:05:40.580863410 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_129/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:05:40.580863410 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "int scale=32;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Replace", 
          "seed": "if (posInf || ot.negInf) {\n  return +1;\n}\n else {\n  if (offset < ot.offset) {\n    encode(ot.offset);\n  }\n else   if (offset > ot.offset) {\n    ot.encode(offset);\n  }\n  final int limit=FastMath.min(encoding.length,ot.encoding.length);\n  for (int i=0; i < limit; ++i) {\n    if (encoding[i] < ot.encoding[i]) {\n      return -1;\n    }\n else     if (encoding[i] > ot.encoding[i]) {\n      return +1;\n    }\n  }\n  if (encoding.length < ot.encoding.length) {\n    return -1;\n  }\n else   if (encoding.length > ot.encoding.length) {\n    return +1;\n  }\n else {\n    return 0;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_181/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:06:25.485355875 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_181/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:06:25.489355919 -0500\n@@ -253,13 +253,37 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                int scale = 32;\n             } else {\n \n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n+                    if (posInf || ot.negInf) {\n+\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tif (offset < ot.offset) {\n+\t\t\t\t\t\t\tencode(ot.offset);\n+\t\t\t\t\t\t} else if (offset > ot.offset) {\n+\t\t\t\t\t\t\tot.encode(offset);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tfinal int limit = FastMath.min(encoding.length,\n+\t\t\t\t\t\t\t\tot.encoding.length);\n+\t\t\t\t\t\tfor (int i = 0; i < limit; ++i) {\n+\t\t\t\t\t\t\tif (encoding[i] < ot.encoding[i]) {\n+\t\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t\t} else if (encoding[i] > ot.encoding[i]) {\n+\t\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tif (encoding.length < ot.encoding.length) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (encoding.length > ot.encoding.length) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\treturn 0;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_181/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:06:25.489355919 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_191/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:06:32.669434628 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_191/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:06:32.673434671 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_191/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:06:32.673434671 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_191/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:06:32.677434715 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "int scale=32;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Delete", 
          "seed": "return false;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_186/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:06:29.481399681 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_186/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:06:29.485399725 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_186/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:06:29.485399725 -0500\n@@ -253,7 +253,6 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_186/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:06:29.489399769 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "final ArrayList<SubHyperplane<S>> plusList=new ArrayList<SubHyperplane<S>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 216, 
          "faulty": "getTree(true).visit(new FacetsContributionVisitor());", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 414, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "final double x=v.getX();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 251, 
          "faulty": "addContribution(attribute.getPlusOutside(),false);", 
          "type": "InsertBefore", 
          "seed": "final double[] quat=new double[4];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "InsertBefore", 
          "seed": "lsb=Integer.MAX_VALUE;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_348/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:08:34.407141476 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_348/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-30 21:08:34.411141534 -0500\n@@ -411,7 +411,8 @@\n     public Line intersection(final Plane other) {\n         final Vector3D direction = Vector3D.crossProduct(w, other.w);\n         if (direction.getNorm() < 1.0e-10) {\n-            return null;\n+            final double x = v.getX();\n+\t\t\treturn null;\n         }\n         final Vector3D point = intersection(this, other, new Plane(direction, tolerance));\n         return new Line(point, point.add(direction), tolerance);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_348/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:08:34.411141534 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_348/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:08:34.415141590 -0500\n@@ -253,7 +253,8 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                lsb = Integer.MAX_VALUE;\n+\t\t\t\treturn +1;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_348/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 21:08:34.415141590 -0500\n@@ -212,7 +212,8 @@\n     @Override\n     protected void computeGeometricalProperties() {\n \n-        // compute the contribution of all boundary facets\n+        int i = 0;\n+\t\t// compute the contribution of all boundary facets\n         getTree(true).visit(new FacetsContributionVisitor());\n \n         if (getSize() < 0) {\n@@ -248,7 +249,8 @@\n             final BoundaryAttribute<Euclidean3D> attribute =\n                 (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n             if (attribute.getPlusOutside() != null) {\n-                addContribution(attribute.getPlusOutside(), false);\n+                final double[] quat = new double[4];\n+\t\t\t\taddContribution(attribute.getPlusOutside(), false);\n             }\n             if (attribute.getPlusInside() != null) {\n                 addContribution(attribute.getPlusInside(), true);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_348/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:08:34.415141590 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_473/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:10:14.940628620 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_473/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:10:14.944628679 -0500\n@@ -158,7 +158,6 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n             minus        = null;\n             return false;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "return parent;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "if (nan) {\n  return +1;\n}\n else if (ot.nan) {\n  return -1;\n}\n else if (negInf || ot.posInf) {\n  return -1;\n}\n else if (posInf || ot.negInf) {\n  return +1;\n}\n else {\n  if (offset < ot.offset) {\n    encode(ot.offset);\n  }\n else   if (offset > ot.offset) {\n    ot.encode(offset);\n  }\n  final int limit=FastMath.min(encoding.length,ot.encoding.length);\n  for (int i=0; i < limit; ++i) {\n    if (encoding[i] < ot.encoding[i]) {\n      return -1;\n    }\n else     if (encoding[i] > ot.encoding[i]) {\n      return +1;\n    }\n  }\n  if (encoding.length < ot.encoding.length) {\n    return -1;\n  }\n else   if (encoding.length > ot.encoding.length) {\n    return +1;\n  }\n else {\n    return 0;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_593/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:11:46.609842590 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_593/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:11:46.609842590 -0500\n@@ -253,7 +253,37 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                if (nan) {\n+\t\t\t\t\treturn +1;\n+\t\t\t\t} else if (ot.nan) {\n+\t\t\t\t\treturn -1;\n+\t\t\t\t} else if (negInf || ot.posInf) {\n+\t\t\t\t\treturn -1;\n+\t\t\t\t} else if (posInf || ot.negInf) {\n+\t\t\t\t\treturn +1;\n+\t\t\t\t} else {\n+\t\t\t\t\tif (offset < ot.offset) {\n+\t\t\t\t\t\tencode(ot.offset);\n+\t\t\t\t\t} else if (offset > ot.offset) {\n+\t\t\t\t\t\tot.encode(offset);\n+\t\t\t\t\t}\n+\t\t\t\t\tfinal int limit = FastMath.min(encoding.length,\n+\t\t\t\t\t\t\tot.encoding.length);\n+\t\t\t\t\tfor (int i = 0; i < limit; ++i) {\n+\t\t\t\t\t\tif (encoding[i] < ot.encoding[i]) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (encoding[i] > ot.encoding[i]) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tif (encoding.length < ot.encoding.length) {\n+\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t} else if (encoding.length > ot.encoding.length) {\n+\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\treturn 0;\n+\t\t\t\t\t}\n+\t\t\t\t}\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_593/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:11:46.609842590 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "final double distance=end.distance((Point<Euclidean2D>)segment.getStart());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "int scale=32;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_131/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:05:41.536873899 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_131/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:05:41.536873899 -0500\n@@ -253,13 +253,12 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                int scale = 32;\n             } else {\n \n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_131/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:05:41.536873899 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 216, 
          "faulty": "getTree(true).visit(new FacetsContributionVisitor());", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "InsertBefore", 
          "seed": "int scale=32;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_431/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:09:44.848172491 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_431/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:09:44.848172491 -0500\n@@ -253,13 +253,13 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                int scale = 32;\n+\t\t\t\treturn +1;\n             } else {\n \n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_431/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 21:09:44.848172491 -0500\n@@ -212,7 +212,8 @@\n     @Override\n     protected void computeGeometricalProperties() {\n \n-        // compute the contribution of all boundary facets\n+        int i = 0;\n+\t\t// compute the contribution of all boundary facets\n         getTree(true).visit(new FacetsContributionVisitor());\n \n         if (getSize() < 0) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_431/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:09:44.852172552 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "final ArrayList<SubHyperplane<S>> plusList=new ArrayList<SubHyperplane<S>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 216, 
          "faulty": "getTree(true).visit(new FacetsContributionVisitor());", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 414, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "final double x=v.getX();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 251, 
          "faulty": "addContribution(attribute.getPlusOutside(),false);", 
          "type": "InsertBefore", 
          "seed": "final double[] quat=new double[4];"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "InsertBefore", 
          "seed": "lsb=Integer.MAX_VALUE;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Replace", 
          "seed": "nan=false;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_350/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:08:35.259153602 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_350/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-30 21:08:35.263153658 -0500\n@@ -411,7 +411,8 @@\n     public Line intersection(final Plane other) {\n         final Vector3D direction = Vector3D.crossProduct(w, other.w);\n         if (direction.getNorm() < 1.0e-10) {\n-            return null;\n+            final double x = v.getX();\n+\t\t\treturn null;\n         }\n         final Vector3D point = intersection(this, other, new Plane(direction, tolerance));\n         return new Line(point, point.add(direction), tolerance);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_350/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:08:35.263153658 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_350/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:08:35.263153658 -0500\n@@ -253,13 +253,14 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                lsb = Integer.MAX_VALUE;\n+\t\t\t\treturn +1;\n             } else {\n \n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n+                    nan = false;\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_350/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 21:08:35.267153716 -0500\n@@ -212,7 +212,8 @@\n     @Override\n     protected void computeGeometricalProperties() {\n \n-        // compute the contribution of all boundary facets\n+        int i = 0;\n+\t\t// compute the contribution of all boundary facets\n         getTree(true).visit(new FacetsContributionVisitor());\n \n         if (getSize() < 0) {\n@@ -248,7 +249,8 @@\n             final BoundaryAttribute<Euclidean3D> attribute =\n                 (BoundaryAttribute<Euclidean3D>) node.getAttribute();\n             if (attribute.getPlusOutside() != null) {\n-                addContribution(attribute.getPlusOutside(), false);\n+                final double[] quat = new double[4];\n+\t\t\t\taddContribution(attribute.getPlusOutside(), false);\n             }\n             if (attribute.getPlusInside() != null) {\n                 addContribution(attribute.getPlusInside(), true);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_350/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:08:35.267153716 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "encode(ot.offset);"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_761/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:13:59.075530301 -0500\n@@ -77,7 +77,11 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_761/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:13:59.079530351 -0500\n@@ -134,7 +134,9 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\tthis.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_761/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:13:59.079530351 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_761/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:13:59.083530401 -0500\n@@ -253,7 +253,7 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                encode(ot.offset);\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_761/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:13:59.083530401 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_148/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:05:51.888987464 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 216, 
          "faulty": "getTree(true).visit(new FacetsContributionVisitor());", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 414, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "final double x=v.getX();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_422/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:09:31.199961084 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_422/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-30 21:09:31.203961146 -0500\n@@ -411,7 +411,8 @@\n     public Line intersection(final Plane other) {\n         final Vector3D direction = Vector3D.crossProduct(w, other.w);\n         if (direction.getNorm() < 1.0e-10) {\n-            return null;\n+            final double x = v.getX();\n+\t\t\treturn null;\n         }\n         final Vector3D point = intersection(this, other, new Plane(direction, tolerance));\n         return new Line(point, point.add(direction), tolerance);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_422/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:09:31.203961146 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_422/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:09:31.207961208 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_422/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 21:09:31.207961208 -0500\n@@ -212,7 +212,8 @@\n     @Override\n     protected void computeGeometricalProperties() {\n \n-        // compute the contribution of all boundary facets\n+        int i = 0;\n+\t\t// compute the contribution of all boundary facets\n         getTree(true).visit(new FacetsContributionVisitor());\n \n         if (getSize() < 0) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_422/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:09:31.207961208 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java", 
          "line": 110, 
          "faulty": "return (global < -1.0e-10) ? new SplitSubHyperplane<Euclidean3D>(null,this) : new SplitSubHyperplane<Euclidean3D>(this,null);", 
          "type": "Replace", 
          "seed": "return (global < -1.0e-10) ? new SplitSubHyperplane<Euclidean3D>(null,this) : new SplitSubHyperplane<Euclidean3D>(this,null);"
        }
      ], 
      "patch": "\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_617/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:12:04.658075254 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java\t2018-12-30 20:38:43.781688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_617/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java\t2018-12-30 21:12:04.662075305 -0500\n@@ -107,9 +107,9 @@\n         if (inter == null) {\n             // the hyperplanes are parallel\n             final double global = otherPlane.getOffset(thisPlane);\n-            return (global < -1.0e-10) ?\n-                   new SplitSubHyperplane<Euclidean3D>(null, this) :\n-                   new SplitSubHyperplane<Euclidean3D>(this, null);\n+            return (global < -1.0e-10) ? new SplitSubHyperplane<Euclidean3D>(\n+\t\t\t\t\tnull, this) : new SplitSubHyperplane<Euclidean3D>(this,\n+\t\t\t\t\tnull);\n         }\n \n         // the hyperplanes do intersect\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_617/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:12:04.662075305 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 216, 
          "faulty": "getTree(true).visit(new FacetsContributionVisitor());", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 414, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "final double x=v.getX();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 414, 
          "faulty": "return null;", 
          "type": "Replace", 
          "seed": "if (direction.getNorm() < 1.0e-10) {\n  return null;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "int msb=Integer.MIN_VALUE;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java", 
          "line": 654, 
          "faulty": "pending=new double[]{getAngle(start),Double.POSITIVE_INFINITY};", 
          "type": "InsertBefore", 
          "seed": "double sup=Double.NEGATIVE_INFINITY;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_340/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:08:28.195052822 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_340/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-30 21:08:28.195052822 -0500\n@@ -411,7 +411,10 @@\n     public Line intersection(final Plane other) {\n         final Vector3D direction = Vector3D.crossProduct(w, other.w);\n         if (direction.getNorm() < 1.0e-10) {\n-            return null;\n+            final double x = v.getX();\n+\t\t\tif (direction.getNorm() < 1.0e-10) {\n+\t\t\t\treturn null;\n+\t\t\t}\n         }\n         final Vector3D point = intersection(this, other, new Plane(direction, tolerance));\n         return new Line(point, point.add(direction), tolerance);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_340/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:08:28.199052880 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java\t2018-12-30 20:38:43.761688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_340/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java\t2018-12-30 21:08:28.199052880 -0500\n@@ -650,7 +650,8 @@\n \n             } else {\n \n-                // the final interval is open toward infinity\n+                double sup = Double.NEGATIVE_INFINITY;\n+\t\t\t\t// the final interval is open toward infinity\n                 pending = new double[] {\n                     getAngle(start), Double.POSITIVE_INFINITY\n                 };\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_340/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:08:28.199052880 -0500\n@@ -253,7 +253,7 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                int msb = Integer.MIN_VALUE;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_340/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 21:08:28.199052880 -0500\n@@ -212,7 +212,8 @@\n     @Override\n     protected void computeGeometricalProperties() {\n \n-        // compute the contribution of all boundary facets\n+        int i = 0;\n+\t\t// compute the contribution of all boundary facets\n         getTree(true).visit(new FacetsContributionVisitor());\n \n         if (getSize() < 0) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "getContext().addMessage(LocalizedFormats.EVALUATIONS);"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_156/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:05:56.073033357 -0500\n@@ -83,6 +83,7 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        getContext().addMessage(LocalizedFormats.EVALUATIONS);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_156/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:05:56.077033401 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_156/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:05:56.077033401 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "encode(ot.offset);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "int msb=Integer.MIN_VALUE;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "minus.parent=this;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_264/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:07:34.086259947 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_264/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:07:34.086259947 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                context = new HashMap<String, Object>();\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_264/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:07:34.090260007 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_264/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:07:34.090260007 -0500\n@@ -253,13 +253,12 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                int msb = Integer.MIN_VALUE;\n             } else {\n \n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_264/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:07:34.090260007 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 216, 
          "faulty": "getTree(true).visit(new FacetsContributionVisitor());", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 414, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "final double x=v.getX();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 414, 
          "faulty": "return null;", 
          "type": "Replace", 
          "seed": "if (direction.getNorm() < 1.0e-10) {\n  return null;\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_325/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:08:16.810889156 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_325/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-30 21:08:16.814889214 -0500\n@@ -411,7 +411,10 @@\n     public Line intersection(final Plane other) {\n         final Vector3D direction = Vector3D.crossProduct(w, other.w);\n         if (direction.getNorm() < 1.0e-10) {\n-            return null;\n+            final double x = v.getX();\n+\t\t\tif (direction.getNorm() < 1.0e-10) {\n+\t\t\t\treturn null;\n+\t\t\t}\n         }\n         final Vector3D point = intersection(this, other, new Plane(direction, tolerance));\n         return new Line(point, point.add(direction), tolerance);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_325/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:08:16.814889214 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_325/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 21:08:16.814889214 -0500\n@@ -212,7 +212,8 @@\n     @Override\n     protected void computeGeometricalProperties() {\n \n-        // compute the contribution of all boundary facets\n+        int i = 0;\n+\t\t// compute the contribution of all boundary facets\n         getTree(true).visit(new FacetsContributionVisitor());\n \n         if (getSize() < 0) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_325/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:08:16.814889214 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "return parent;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "if (nan) {\n  return +1;\n}\n else if (ot.nan) {\n  return -1;\n}\n else if (negInf || ot.posInf) {\n  return -1;\n}\n else if (posInf || ot.negInf) {\n  return +1;\n}\n else {\n  if (offset < ot.offset) {\n    encode(ot.offset);\n  }\n else   if (offset > ot.offset) {\n    ot.encode(offset);\n  }\n  final int limit=FastMath.min(encoding.length,ot.encoding.length);\n  for (int i=0; i < limit; ++i) {\n    if (encoding[i] < ot.encoding[i]) {\n      return -1;\n    }\n else     if (encoding[i] > ot.encoding[i]) {\n      return +1;\n    }\n  }\n  if (encoding.length < ot.encoding.length) {\n    return -1;\n  }\n else   if (encoding.length > ot.encoding.length) {\n    return +1;\n  }\n else {\n    return 0;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_671/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:12:42.226556671 -0500\n@@ -77,7 +77,10 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_671/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:12:42.230556722 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_671/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:12:42.230556722 -0500\n@@ -253,7 +253,37 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                if (nan) {\n+\t\t\t\t\treturn +1;\n+\t\t\t\t} else if (ot.nan) {\n+\t\t\t\t\treturn -1;\n+\t\t\t\t} else if (negInf || ot.posInf) {\n+\t\t\t\t\treturn -1;\n+\t\t\t\t} else if (posInf || ot.negInf) {\n+\t\t\t\t\treturn +1;\n+\t\t\t\t} else {\n+\t\t\t\t\tif (offset < ot.offset) {\n+\t\t\t\t\t\tencode(ot.offset);\n+\t\t\t\t\t} else if (offset > ot.offset) {\n+\t\t\t\t\t\tot.encode(offset);\n+\t\t\t\t\t}\n+\t\t\t\t\tfinal int limit = FastMath.min(encoding.length,\n+\t\t\t\t\t\t\tot.encoding.length);\n+\t\t\t\t\tfor (int i = 0; i < limit; ++i) {\n+\t\t\t\t\t\tif (encoding[i] < ot.encoding[i]) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (encoding[i] > ot.encoding[i]) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tif (encoding.length < ot.encoding.length) {\n+\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t} else if (encoding.length > ot.encoding.length) {\n+\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\treturn 0;\n+\t\t\t\t\t}\n+\t\t\t\t}\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_671/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:12:42.234556773 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Replace", 
          "seed": "if (posInf || ot.negInf) {\n  return +1;\n}\n else {\n  if (offset < ot.offset) {\n    encode(ot.offset);\n  }\n else   if (offset > ot.offset) {\n    ot.encode(offset);\n  }\n  final int limit=FastMath.min(encoding.length,ot.encoding.length);\n  for (int i=0; i < limit; ++i) {\n    if (encoding[i] < ot.encoding[i]) {\n      return -1;\n    }\n else     if (encoding[i] > ot.encoding[i]) {\n      return +1;\n    }\n  }\n  if (encoding.length < ot.encoding.length) {\n    return -1;\n  }\n else   if (encoding.length > ot.encoding.length) {\n    return +1;\n  }\n else {\n    return 0;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_222/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:07:01.745766050 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_222/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:07:01.749766112 -0500\n@@ -259,7 +259,31 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n+                    if (posInf || ot.negInf) {\n+\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tif (offset < ot.offset) {\n+\t\t\t\t\t\t\tencode(ot.offset);\n+\t\t\t\t\t\t} else if (offset > ot.offset) {\n+\t\t\t\t\t\t\tot.encode(offset);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tfinal int limit = FastMath.min(encoding.length,\n+\t\t\t\t\t\t\t\tot.encoding.length);\n+\t\t\t\t\t\tfor (int i = 0; i < limit; ++i) {\n+\t\t\t\t\t\t\tif (encoding[i] < ot.encoding[i]) {\n+\t\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t\t} else if (encoding[i] > ot.encoding[i]) {\n+\t\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tif (encoding.length < ot.encoding.length) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (encoding.length > ot.encoding.length) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\treturn 0;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_222/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:07:01.749766112 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_624/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:12:08.294122016 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_624/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:12:08.294122016 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_624/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:12:08.294122016 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }
      ], 
      "patch": "\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_595/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:11:47.741857210 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_665/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:12:37.550496955 -0500\n@@ -77,7 +77,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_665/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:12:37.554497007 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_665/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:12:37.554497007 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_665/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:12:37.554497007 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Delete", 
          "seed": "if (negInf || ot.posInf) {\n  return -1;\n}\n else if (posInf || ot.negInf) {\n  return +1;\n}\n else {\n  if (offset < ot.offset) {\n    encode(ot.offset);\n  }\n else   if (offset > ot.offset) {\n    ot.encode(offset);\n  }\n  final int limit=FastMath.min(encoding.length,ot.encoding.length);\n  for (int i=0; i < limit; ++i) {\n    if (encoding[i] < ot.encoding[i]) {\n      return -1;\n    }\n else     if (encoding[i] > ot.encoding[i]) {\n      return +1;\n    }\n  }\n  if (encoding.length < ot.encoding.length) {\n    return -1;\n  }\n else   if (encoding.length > ot.encoding.length) {\n    return +1;\n  }\n else {\n    return 0;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_745/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:13:46.499371926 -0500\n@@ -77,7 +77,10 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_745/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:13:46.499371926 -0500\n@@ -134,7 +134,9 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\tthis.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_745/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:13:46.503371976 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_745/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:13:46.503371976 -0500\n@@ -253,7 +253,6 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_745/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:13:46.503371976 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 216, 
          "faulty": "getTree(true).visit(new FacetsContributionVisitor());", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java", 
          "line": 414, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "final double x=v.getX();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "final int len=context.keySet().size();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_454/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java\t2018-12-30 21:10:01.584427801 -0500\n@@ -411,7 +411,8 @@\n     public Line intersection(final Plane other) {\n         final Vector3D direction = Vector3D.crossProduct(w, other.w);\n         if (direction.getNorm() < 1.0e-10) {\n-            return null;\n+            final double x = v.getX();\n+\t\t\treturn null;\n         }\n         final Vector3D point = intersection(this, other, new Plane(direction, tolerance));\n         return new Line(point, point.add(direction), tolerance);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_454/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:10:01.584427801 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        final int len = context.keySet().size();\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_454/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:10:01.584427801 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_454/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:10:01.588427862 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_454/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 21:10:01.588427862 -0500\n@@ -212,7 +212,8 @@\n     @Override\n     protected void computeGeometricalProperties() {\n \n-        // compute the contribution of all boundary facets\n+        int i = 0;\n+\t\t// compute the contribution of all boundary facets\n         getTree(true).visit(new FacetsContributionVisitor());\n \n         if (getSize() < 0) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_454/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:10:01.588427862 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "InsertBefore", 
          "seed": "int scale=32;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 162, 
          "faulty": "plus=null;", 
          "type": "Delete", 
          "seed": "final SubHyperplane<S> chopped=fitToCell(hyperplane.wholeHyperplane());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_544/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:11:09.965367260 -0500\n@@ -77,7 +77,10 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_544/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:11:09.965367260 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_544/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:11:09.969367312 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_544/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:11:09.969367312 -0500\n@@ -253,13 +253,13 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                int scale = 32;\n+\t\t\t\treturn +1;\n             } else {\n \n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_544/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:11:09.969367312 -0500\n@@ -158,9 +158,6 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n-            plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 216, 
          "faulty": "getTree(true).visit(new FacetsContributionVisitor());", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "InsertBefore", 
          "seed": "int scale=32;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_477/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:10:16.620653702 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_477/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:10:16.620653702 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_477/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:10:16.624653762 -0500\n@@ -253,7 +253,8 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                int scale = 32;\n+\t\t\t\treturn +1;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_477/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 21:10:16.624653762 -0500\n@@ -212,7 +212,8 @@\n     @Override\n     protected void computeGeometricalProperties() {\n \n-        // compute the contribution of all boundary facets\n+        int i = 0;\n+\t\t// compute the contribution of all boundary facets\n         getTree(true).visit(new FacetsContributionVisitor());\n \n         if (getSize() < 0) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_477/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:10:16.624653762 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_687/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:12:54.530713531 -0500\n@@ -77,7 +77,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_687/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:12:54.530713531 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_687/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:12:54.534713583 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_687/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:12:54.534713583 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "final ArrayList<SubHyperplane<S>> plusList=new ArrayList<SubHyperplane<S>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "InsertBefore", 
          "seed": "int j=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java", 
          "line": 659, 
          "faulty": "current=null;", 
          "type": "InsertBefore", 
          "seed": "BSPTree<Euclidean1D> smallest=null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_314/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:08:09.762787025 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_314/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:08:09.762787025 -0500\n@@ -823,7 +823,8 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            int j = 0;\n+\t\t\treturn null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java\t2018-12-30 20:38:43.761688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_314/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java\t2018-12-30 21:08:09.766787083 -0500\n@@ -655,7 +655,8 @@\n                     getAngle(start), Double.POSITIVE_INFINITY\n                 };\n \n-                // there won't be any other intervals\n+                BSPTree<Euclidean1D> smallest = null;\n+\t\t\t\t// there won't be any other intervals\n                 current = null;\n \n             }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_314/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:08:09.766787083 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_314/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:08:09.766787083 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_548/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:11:12.741403411 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_548/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:11:12.741403411 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_548/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:11:12.745403464 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_548/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:11:12.745403464 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "final ArrayList<SubHyperplane<S>> plusList=new ArrayList<SubHyperplane<S>>();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_288/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:07:51.846524513 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_288/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:07:51.846524513 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_288/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:07:51.850524572 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "final ArrayList<SubHyperplane<S>> plusList=new ArrayList<SubHyperplane<S>>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "InsertBefore", 
          "seed": "int j=0;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_300/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:08:00.046645190 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_300/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:08:00.050645249 -0500\n@@ -823,7 +823,8 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            int j = 0;\n+\t\t\treturn null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_300/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:08:00.050645249 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_300/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:08:00.054645308 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "int scale=32;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_175/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:06:09.757183430 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_175/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:06:09.761183474 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_175/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:06:09.761183474 -0500\n@@ -253,7 +253,7 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                int scale = 32;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_175/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:06:09.761183474 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Replace", 
          "seed": "if (posInf || ot.negInf) {\n  return +1;\n}\n else {\n  if (offset < ot.offset) {\n    encode(ot.offset);\n  }\n else   if (offset > ot.offset) {\n    ot.encode(offset);\n  }\n  final int limit=FastMath.min(encoding.length,ot.encoding.length);\n  for (int i=0; i < limit; ++i) {\n    if (encoding[i] < ot.encoding[i]) {\n      return -1;\n    }\n else     if (encoding[i] > ot.encoding[i]) {\n      return +1;\n    }\n  }\n  if (encoding.length < ot.encoding.length) {\n    return -1;\n  }\n else   if (encoding.length > ot.encoding.length) {\n    return +1;\n  }\n else {\n    return 0;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_212/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:06:48.145604247 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_212/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:06:48.145604247 -0500\n@@ -259,7 +259,31 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n+                    if (posInf || ot.negInf) {\n+\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tif (offset < ot.offset) {\n+\t\t\t\t\t\t\tencode(ot.offset);\n+\t\t\t\t\t\t} else if (offset > ot.offset) {\n+\t\t\t\t\t\t\tot.encode(offset);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tfinal int limit = FastMath.min(encoding.length,\n+\t\t\t\t\t\t\t\tot.encoding.length);\n+\t\t\t\t\t\tfor (int i = 0; i < limit; ++i) {\n+\t\t\t\t\t\t\tif (encoding[i] < ot.encoding[i]) {\n+\t\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t\t} else if (encoding[i] > ot.encoding[i]) {\n+\t\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tif (encoding.length < ot.encoding.length) {\n+\t\t\t\t\t\t\treturn -1;\n+\t\t\t\t\t\t} else if (encoding.length > ot.encoding.length) {\n+\t\t\t\t\t\t\treturn +1;\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\treturn 0;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_212/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:06:48.149604292 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "int scale=32;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "return cut;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_161/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:05:59.277068499 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_161/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:05:59.281068543 -0500\n@@ -253,7 +253,7 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                int scale = 32;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_161/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:05:59.281068543 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 86, 
          "faulty": "return context.getLocalizedMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_743/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:13:45.711361990 -0500\n@@ -77,12 +77,16 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n     @Override\n     public String getLocalizedMessage() {\n-        return context.getLocalizedMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getLocalizedMessage();\n     }\n }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_743/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:13:45.715362042 -0500\n@@ -134,7 +134,9 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\tthis.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_743/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:13:45.715362042 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_743/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:13:45.715362042 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "context=new HashMap<String,Object>();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Delete", 
          "seed": "if ((encoding != null) && (encoding.length == 1) && (encoding[0] == 0x0L)) {\n  return;\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_776/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:14:17.187757771 -0500\n@@ -77,7 +77,12 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_776/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:14:17.191757822 -0500\n@@ -134,7 +134,12 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\tthis.throwable = throwable;\n+\t\tthis.throwable = throwable;\n+\t\tthis.throwable = throwable;\n+\t\tthis.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n@@ -178,7 +183,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                context = new HashMap<String, Object>();\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_776/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:14:17.191757822 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_776/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:14:17.195757872 -0500\n@@ -253,7 +253,6 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_776/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:14:17.195757872 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 137, 
          "faulty": "return getMessage(Locale.getDefault());", 
          "type": "InsertBefore", 
          "seed": "this.throwable=throwable;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "InsertBefore", 
          "seed": "plus=null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_636/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:12:17.730243199 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_636/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:12:17.734243251 -0500\n@@ -134,7 +134,8 @@\n      * @return the localized message.\n      */\n     public String getLocalizedMessage() {\n-        return getMessage(Locale.getDefault());\n+        this.throwable = throwable;\n+\t\treturn getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_636/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:12:17.734243251 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_636/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:12:17.734243251 -0500\n@@ -158,7 +158,8 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n+            plus = null;\n+\t\t\tcut          = null;\n             plus         = null;\n             minus        = null;\n             return false;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_585/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:11:39.545751270 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java", 
          "line": 216, 
          "faulty": "getTree(true).visit(new FacetsContributionVisitor());", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_248/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:07:22.122079129 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_248/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:07:22.122079129 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 20:38:43.773688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_248/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java\t2018-12-30 21:07:22.126079190 -0500\n@@ -212,7 +212,8 @@\n     @Override\n     protected void computeGeometricalProperties() {\n \n-        // compute the contribution of all boundary facets\n+        int i = 0;\n+\t\t// compute the contribution of all boundary facets\n         getTree(true).visit(new FacetsContributionVisitor());\n \n         if (getSize() < 0) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_248/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:07:22.126079190 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java", 
          "line": 59, 
          "faulty": "final Plane thisPlane=(Plane)getHyperplane();", 
          "type": "InsertBefore", 
          "seed": "double[][] o=new double[3][3];"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_206/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:06:44.145560411 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_206/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:06:44.145560411 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java\t2018-12-30 20:38:43.781688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_206/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubPlane.java\t2018-12-30 21:06:44.149560455 -0500\n@@ -56,7 +56,8 @@\n     public Side side(Hyperplane<Euclidean3D> hyperplane) {\n \n         final Plane otherPlane = (Plane) hyperplane;\n-        final Plane thisPlane  = (Plane) getHyperplane();\n+        double[][] o = new double[3][3];\n+\t\tfinal Plane thisPlane  = (Plane) getHyperplane();\n         final Line  inter      = otherPlane.intersection(thisPlane);\n         final double tolerance = thisPlane.getTolerance();\n \n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_206/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:06:44.149560455 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_206/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:06:44.149560455 -0500\n@@ -160,7 +160,6 @@\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (posInf && negInf) {\n  posInf=false;\n  negInf=false;\n  nan=true;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 182, 
          "faulty": "sb.append(separator);", 
          "type": "InsertBefore", 
          "seed": "msgPatterns.add(pat);"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_169/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:06:05.217133644 -0500\n@@ -178,7 +178,8 @@\n                                                         locale);\n             sb.append(fmt.format(args));\n             if (++count < len) {\n-                // Add a separator if there are other messages.\n+                msgPatterns.add(pat);\n+\t\t\t\t// Add a separator if there are other messages.\n                 sb.append(separator);\n             }\n         }\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_169/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:06:05.221133688 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_169/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:06:05.221133688 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "final ArrayList<SubHyperplane<S>> plusList=new ArrayList<SubHyperplane<S>>();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_269/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:07:37.754314956 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_269/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:07:37.758315016 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_269/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:07:37.758315016 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_269/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:07:37.758315016 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 262, 
          "faulty": "ot.encode(offset);", 
          "type": "Delete", 
          "seed": "if (offset > ot.offset) {\n  ot.encode(offset);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 162, 
          "faulty": "plus=null;", 
          "type": "Replace", 
          "seed": "if (cut != null) {\n  cut=cut.split(hyperplane).getPlus();\n  plus.chopOffMinus(hyperplane);\n  minus.chopOffMinus(hyperplane);\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_94/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:05:05.364476898 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_94/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:05:05.364476898 -0500\n@@ -259,7 +259,6 @@\n                 if (offset < ot.offset) {\n                     encode(ot.offset);\n                 } else if (offset > ot.offset) {\n-                    ot.encode(offset);\n                 }\n \n                 final int limit = FastMath.min(encoding.length, ot.encoding.length);\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_94/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:05:05.368476941 -0500\n@@ -159,7 +159,11 @@\n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n             cut          = null;\n-            plus         = null;\n+            if (cut != null) {\n+\t\t\t\tcut = cut.split(hyperplane).getPlus();\n+\t\t\t\tplus.chopOffMinus(hyperplane);\n+\t\t\t\tminus.chopOffMinus(hyperplane);\n+\t\t\t}\n             minus        = null;\n             return false;\n         }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_151/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:05:53.601006243 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_151/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:05:53.601006243 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "final ArrayList<SubHyperplane<S>> plusList=new ArrayList<SubHyperplane<S>>();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_279/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:07:45.150425288 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_279/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:07:45.150425288 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_279/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:07:45.154425348 -0500\n@@ -158,7 +158,6 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n             minus        = null;\n             return false;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 811, 
          "faulty": "return null;", 
          "type": "InsertBefore", 
          "seed": "int i=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.US);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "Replace", 
          "seed": "posInf=false;"
        }
      ], 
      "patch": "\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_661/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:12:34.638459738 -0500\n@@ -805,7 +805,8 @@\n             }\n \n             if (selectedDistance > 1.0e-10) {\n-                // this is a degenerated loop, it probably comes from a very\n+                int i = 0;\n+\t\t\t\t// this is a degenerated loop, it probably comes from a very\n                 // tiny region with some segments smaller than the threshold, we\n                 // simply ignore it\n                 return null;\n@@ -823,7 +824,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_661/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:12:34.638459738 -0500\n@@ -253,7 +253,7 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                posInf = false;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_661/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:12:34.638459738 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java", 
          "line": 256, 
          "faulty": "return +1;", 
          "type": "InsertBefore", 
          "seed": "int scale=32;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 163, 
          "faulty": "minus=null;", 
          "type": "Delete", 
          "seed": "final Sides sides=new Sides();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_496/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:10:31.344861767 -0500\n@@ -77,7 +77,8 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_496/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:10:31.348861820 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 20:38:43.821688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_496/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java\t2018-12-30 21:10:31.348861820 -0500\n@@ -253,7 +253,8 @@\n             } else if (negInf || ot.posInf) {\n                 return -1;\n             } else if (posInf || ot.negInf) {\n-                return +1;\n+                int scale = 32;\n+\t\t\t\treturn +1;\n             } else {\n \n                 if (offset < ot.offset) {\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_496/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:10:31.352861873 -0500\n@@ -158,9 +158,7 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n-            minus        = null;\n             return false;\n         }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java", 
          "line": 128, 
          "faulty": "return getMessage(Locale.US);", 
          "type": "Replace", 
          "seed": "return getMessage(Locale.getDefault());"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java", 
          "line": 80, 
          "faulty": "return context.getMessage();", 
          "type": "InsertBefore", 
          "seed": "context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java", 
          "line": 826, 
          "faulty": "throw new MathInternalError();", 
          "type": "Replace", 
          "seed": "return null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java", 
          "line": 161, 
          "faulty": "cut=null;", 
          "type": "Delete", 
          "seed": "if (chopped == null || chopped.isEmpty()) {\n  cut=null;\n  plus=null;\n  minus=null;\n  return false;\n}"
        }
      ], 
      "patch": "--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 20:38:43.657688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_483/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/MathIllegalStateException.java\t2018-12-30 21:10:20.848716659 -0500\n@@ -77,7 +77,9 @@\n     /** {@inheritDoc} */\n     @Override\n     public String getMessage() {\n-        return context.getMessage();\n+        context.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\tcontext.addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION);\n+\t\treturn context.getMessage();\n     }\n \n     /** {@inheritDoc} */\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 20:38:43.677688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_483/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/exception/util/ExceptionContext.java\t2018-12-30 21:10:20.852716718 -0500\n@@ -125,7 +125,7 @@\n      * @return the message.\n      */\n     public String getMessage() {\n-        return getMessage(Locale.US);\n+        return getMessage(Locale.getDefault());\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 20:38:43.789688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_483/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java\t2018-12-30 21:10:20.852716718 -0500\n@@ -823,7 +823,7 @@\n         }\n \n         if ((end == null) && !open) {\n-            throw new MathInternalError();\n+            return null;\n         }\n \n         return loop;\n\n\n--- /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 20:38:43.809688000 -0500\n+++ /tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/patches_s2wd/Patch_483/patched/tmp/GenProg_Bug_dot_jar_Commons-Math_2a6c6409/src/main/java/org/apache/commons/math3/geometry/partitioning/BSPTree.java\t2018-12-30 21:10:20.852716718 -0500\n@@ -158,7 +158,6 @@\n \n         final SubHyperplane<S> chopped = fitToCell(hyperplane.wholeHyperplane());\n         if (chopped == null || chopped.isEmpty()) {\n-            cut          = null;\n             plus         = null;\n             minus        = null;\n             return false;\n\n\n"
    }
  ]
}