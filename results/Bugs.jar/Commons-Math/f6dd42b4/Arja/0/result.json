{
  "repair_end": "2018-12-29 11:54:07.806079", 
  "repair_begin": "2018-12-29 09:54:04.741243", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "verifyInterval(min,max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 173, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(max,0);\n  ret=max;\n}\n else {\n  throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);\n}", 
          "type": "InsertBefore", 
          "seed": "if (Math.abs(yMin) <= functionValueAccuracy) {\n  setResult(min,0);\n  ret=min;\n}\n else if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(max,0);\n  ret=max;\n}\n else {\n  throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1496/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:38:30.910566534 -0500\n@@ -118,7 +118,8 @@\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n+        verifyInterval(min, max);\n+\t\tif (Math.abs(yMax) <= functionValueAccuracy) {\n             setResult(yMax, 0);\n             return result;\n         }\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -170,16 +173,31 @@\n             if (Math.abs(yMin) <= functionValueAccuracy) {\n                 setResult(min, 0);\n                 ret = min;\n-            } else if (Math.abs(yMax) <= functionValueAccuracy) {\n-                setResult(max, 0);\n-                ret = max;\n             } else {\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw MathRuntimeException.createIllegalArgumentException(\n-                        \"function values at endpoints do not have different signs.  \" +\n-                        \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n-                        min, max, yMin, yMax);\n-            }\n+\t\t\t\tif (Math.abs(yMin) <= functionValueAccuracy) {\n+\t\t\t\t\tsetResult(min, 0);\n+\t\t\t\t\tret = min;\n+\t\t\t\t} else if (Math.abs(yMax) <= functionValueAccuracy) {\n+\t\t\t\t\tsetResult(max, 0);\n+\t\t\t\t\tret = max;\n+\t\t\t\t} else {\n+\t\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n+\t\t\t\t\t\t\t\t\tmin, max, yMin, yMax);\n+\t\t\t\t}\n+\t\t\t\tif (Math.abs(yMax) <= functionValueAccuracy) {\n+\t\t\t\t\tsetResult(max, 0);\n+\t\t\t\t\tret = max;\n+\t\t\t\t} else {\n+\t\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n+\t\t\t\t\t\t\t\t\tmin, max, yMin, yMax);\n+\t\t\t\t}\n+\t\t\t}\n         } else if (sign < 0){\n             // solve using only the first endpoint as initial guess\n             ret = solve(f, min, yMin, max, yMax, min, yMin);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 196, 
          "faulty": "return (start < mid) && (mid < end);", 
          "type": "InsertBefore", 
          "seed": "this.resultComputed=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "Replace", 
          "seed": "this.f=f;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1074/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 05:09:32.405618291 -0500\n@@ -193,7 +193,8 @@\n      * @return true if the arguments form an increasing sequence\n      */\n     protected boolean isSequence(final double start, final double mid, final double end) {\n-        return (start < mid) && (mid < end);\n+        this.resultComputed = false;\n+\t\treturn (start < mid) && (mid < end);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1074/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:09:32.409618284 -0500\n@@ -118,18 +118,17 @@\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n-            setResult(yMax, 0);\n-            return result;\n-        }\n+        this.f = f;\n \n         // reduce interval if initial and max bracket the root\n         if (yInitial * yMax < 0) {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 295, 
          "faulty": "if (dx > 0.0) {\n  x1=x1 + 0.5 * tolerance;\n}\n else if (dx <= 0.0) {\n  x1=x1 - 0.5 * tolerance;\n}", 
          "type": "InsertBefore", 
          "seed": "iterationCount=i;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "Delete", 
          "seed": "this.f=f;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_886/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:56:57.974938992 -0500\n@@ -118,18 +118,15 @@\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n-            setResult(yMax, 0);\n-            return result;\n-        }\n-\n         // reduce interval if initial and max bracket the root\n         if (yInitial * yMax < 0) {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -292,11 +289,14 @@\n             // Compute new X1, Y1\n             if (Math.abs(delta) > tolerance) {\n                 x1 = x1 + delta;\n-            } else if (dx > 0.0) {\n-                x1 = x1 + 0.5 * tolerance;\n-            } else if (dx <= 0.0) {\n-                x1 = x1 - 0.5 * tolerance;\n-            }\n+            } else {\n+\t\t\t\titerationCount = i;\n+\t\t\t\tif (dx > 0.0) {\n+\t\t\t\t\tx1 = x1 + 0.5 * tolerance;\n+\t\t\t\t} else if (dx <= 0.0) {\n+\t\t\t\t\tx1 = x1 - 0.5 * tolerance;\n+\t\t\t\t}\n+\t\t\t}\n             y1 = f.value(x1);\n             if ((y1 > 0) == (y2 > 0)) {\n                 x2 = x0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 283, 
          "faulty": "oldDelta=delta;", 
          "type": "Delete", 
          "seed": "if (x0 == x2) {\n  p=dx * r3;\n  p1=1.0 - r3;\n}\n else {\n  double r1=y0 / y2;\n  double r2=y1 / y2;\n  p=r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));\n  p1=(r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 102, 
          "faulty": "if (Math.abs(yInitial) <= functionValueAccuracy) {\n  setResult(initial,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "this.functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_641/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:40:47.896636921 -0500\n@@ -99,7 +99,8 @@\n \n         // return the initial guess if it is good enough\n         double yInitial = f.value(initial);\n-        if (Math.abs(yInitial) <= functionValueAccuracy) {\n+        this.functionValueAccuracy = defaultFunctionValueAccuracy;\n+\t\tif (Math.abs(yInitial) <= functionValueAccuracy) {\n             setResult(initial, 0);\n             return result;\n         }\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -280,7 +283,6 @@\n                     // in the wrong direction, or progress is slow.\n                     // Fall back to bisection.\n                     delta = 0.5 * dx;\n-                    oldDelta = delta;\n                 } else {\n                     oldDelta = delta;\n                     delta = p / p1;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 109, 
          "faulty": "if (Math.abs(yMin) <= functionValueAccuracy) {\n  setResult(yMin,0);\n  return result;\n}", 
          "type": "Replace", 
          "seed": "functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_691/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:43:45.436328862 -0500\n@@ -106,10 +106,7 @@\n \n         // return the first endpoint if it is good enough\n         double yMin = f.value(min);\n-        if (Math.abs(yMin) <= functionValueAccuracy) {\n-            setResult(yMin, 0);\n-            return result;\n-        }\n+        functionValueAccuracy = defaultFunctionValueAccuracy;\n \n         // reduce interval if min and initial bracket the root\n         if (yInitial * yMin < 0) {\n@@ -128,8 +125,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 196, 
          "faulty": "return (start < mid) && (mid < end);", 
          "type": "Replace", 
          "seed": "return (start < mid) && (mid < end);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 97, 
          "faulty": "clearResult();", 
          "type": "InsertBefore", 
          "seed": "iterationCount+=this.iterationCount;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_948/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:00:50.818530932 -0500\n@@ -94,7 +94,8 @@\n                         final double min, final double max, final double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n-        clearResult();\n+        iterationCount += this.iterationCount;\n+\t\tclearResult();\n         verifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 127, 
          "faulty": "if (yInitial * yMax < 0) {\n  return solve(f,initial,yInitial,max,yMax,initial,yInitial);\n}", 
          "type": "InsertBefore", 
          "seed": "if (f == null) {\n  throw MathRuntimeException.createIllegalArgumentException(\"function to solve cannot be null\");\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_931/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:59:53.306631684 -0500\n@@ -123,13 +123,19 @@\n             return result;\n         }\n \n-        // reduce interval if initial and max bracket the root\n+        if (f == null) {\n+\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t.createIllegalArgumentException(\"function to solve cannot be null\");\n+\t\t}\n+\t\t// reduce interval if initial and max bracket the root\n         if (yInitial * yMax < 0) {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 97, 
          "faulty": "clearResult();", 
          "type": "Replace", 
          "seed": "this.functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1634/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:47:57.113571886 -0500\n@@ -94,7 +94,7 @@\n                         final double min, final double max, final double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n-        clearResult();\n+        this.functionValueAccuracy = defaultFunctionValueAccuracy;\n         verifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 283, 
          "faulty": "oldDelta=delta;", 
          "type": "InsertBefore", 
          "seed": "x1=x1 - 0.5 * tolerance;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_857/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:55:07.755132304 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -280,7 +282,8 @@\n                     // in the wrong direction, or progress is slow.\n                     // Fall back to bisection.\n                     delta = 0.5 * dx;\n-                    oldDelta = delta;\n+                    x1 = x1 - 0.5 * tolerance;\n+\t\t\t\t\toldDelta = delta;\n                 } else {\n                     oldDelta = delta;\n                     delta = p / p1;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 209, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 120, 
          "faulty": "double yMax=f.value(max);", 
          "type": "InsertBefore", 
          "seed": "setResult(initial,0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1664/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 05:50:08.793340791 -0500\n@@ -207,8 +207,8 @@\n     protected void verifyInterval(final double lower, final double upper) {\n         if (lower >= upper) {\n             throw MathRuntimeException.createIllegalArgumentException(\n-                    \"endpoints do not specify an interval: [{0}, {1}]\",\n-                    lower, upper);\n+\t\t\t\t\t\"endpoints do not specify an interval: [{0}, {1}]\", lower,\n+\t\t\t\t\tupper);\n         }\n     }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1664/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:50:08.797340784 -0500\n@@ -116,7 +116,8 @@\n             return solve(f, min, yMin, initial, yInitial, min, yMin);\n         }\n \n-        // return the second endpoint if it is good enough\n+        setResult(initial, 0);\n+\t\t// return the second endpoint if it is good enough\n         double yMax = f.value(max);\n         if (Math.abs(yMax) <= functionValueAccuracy) {\n             setResult(yMax, 0);\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 127, 
          "faulty": "if (yInitial * yMax < 0) {\n  return solve(f,initial,yInitial,max,yMax,initial,yInitial);\n}", 
          "type": "InsertBefore", 
          "seed": "this.resultComputed=true;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_648/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:41:13.496592484 -0500\n@@ -123,13 +123,16 @@\n             return result;\n         }\n \n-        // reduce interval if initial and max bracket the root\n+        this.resultComputed = true;\n+\t\t// reduce interval if initial and max bracket the root\n         if (yInitial * yMax < 0) {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 109, 
          "faulty": "if (Math.abs(yMin) <= functionValueAccuracy) {\n  setResult(yMin,0);\n  return result;\n}", 
          "type": "Delete", 
          "seed": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1115/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:12:03.845353658 -0500\n@@ -106,11 +106,6 @@\n \n         // return the first endpoint if it is good enough\n         double yMin = f.value(min);\n-        if (Math.abs(yMin) <= functionValueAccuracy) {\n-            setResult(yMin, 0);\n-            return result;\n-        }\n-\n         // reduce interval if min and initial bracket the root\n         if (yInitial * yMin < 0) {\n             return solve(f, min, yMin, initial, yInitial, min, yMin);\n@@ -128,8 +123,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 97, 
          "faulty": "clearResult();", 
          "type": "InsertBefore", 
          "seed": "iterationCount+=this.iterationCount;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_589/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:37:29.924980750 -0500\n@@ -94,7 +94,8 @@\n                         final double min, final double max, final double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n-        clearResult();\n+        iterationCount += this.iterationCount;\n+\t\tclearResult();\n         verifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 120, 
          "faulty": "double yMax=f.value(max);", 
          "type": "InsertBefore", 
          "seed": "verifySequence(min,initial,max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_939/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:00:17.922588557 -0500\n@@ -116,7 +116,8 @@\n             return solve(f, min, yMin, initial, yInitial, min, yMin);\n         }\n \n-        // return the second endpoint if it is good enough\n+        verifySequence(min, initial, max);\n+\t\t// return the second endpoint if it is good enough\n         double yMax = f.value(max);\n         if (Math.abs(yMax) <= functionValueAccuracy) {\n             setResult(yMax, 0);\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 282, 
          "faulty": "delta=0.5 * dx;", 
          "type": "InsertBefore", 
          "seed": "oldDelta=x2 - x1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1256/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:21:54.272321456 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -276,7 +278,8 @@\n                 }\n                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||\n                         p >= Math.abs(0.5 * oldDelta * p1)) {\n-                    // Inverse quadratic interpolation gives a value\n+                    oldDelta = x2 - x1;\n+\t\t\t\t\t// Inverse quadratic interpolation gives a value\n                     // in the wrong direction, or progress is slow.\n                     // Fall back to bisection.\n                     delta = 0.5 * dx;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 209, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);", 
          "type": "InsertBefore", 
          "seed": "if (f == null) {\n  throw MathRuntimeException.createIllegalArgumentException(\"function to solve cannot be null\");\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_792/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 04:50:43.315596503 -0500\n@@ -206,7 +206,11 @@\n      */\n     protected void verifyInterval(final double lower, final double upper) {\n         if (lower >= upper) {\n-            throw MathRuntimeException.createIllegalArgumentException(\n+            if (f == null) {\n+\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t.createIllegalArgumentException(\"function to solve cannot be null\");\n+\t\t\t}\n+\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n                     \"endpoints do not specify an interval: [{0}, {1}]\",\n                     lower, upper);\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_792/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:50:43.319596495 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 295, 
          "faulty": "if (dx > 0.0) {\n  x1=x1 + 0.5 * tolerance;\n}\n else if (dx <= 0.0) {\n  x1=x1 - 0.5 * tolerance;\n}", 
          "type": "InsertBefore", 
          "seed": "if (delta / oldDelta > 1) {\n  delta=0.5 * oldDelta;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1086/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:10:15.069543722 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -292,11 +294,16 @@\n             // Compute new X1, Y1\n             if (Math.abs(delta) > tolerance) {\n                 x1 = x1 + delta;\n-            } else if (dx > 0.0) {\n-                x1 = x1 + 0.5 * tolerance;\n-            } else if (dx <= 0.0) {\n-                x1 = x1 - 0.5 * tolerance;\n-            }\n+            } else {\n+\t\t\t\tif (delta / oldDelta > 1) {\n+\t\t\t\t\tdelta = 0.5 * oldDelta;\n+\t\t\t\t}\n+\t\t\t\tif (dx > 0.0) {\n+\t\t\t\t\tx1 = x1 + 0.5 * tolerance;\n+\t\t\t\t} else if (dx <= 0.0) {\n+\t\t\t\t\tx1 = x1 - 0.5 * tolerance;\n+\t\t\t\t}\n+\t\t\t}\n             y1 = f.value(x1);\n             if ((y1 > 0) == (y2 > 0)) {\n                 x2 = x0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Delete", 
          "seed": "this.functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "return solve(f,min,max);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1362/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:29:15.251544364 -0500\n@@ -111,11 +111,6 @@\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n-\n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n         if (Math.abs(yMax) <= functionValueAccuracy) {\n@@ -128,8 +123,7 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        return solve(f, min, max);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Replace", 
          "seed": "if (Math.abs(yInitial) <= functionValueAccuracy) {\n  setResult(initial,0);\n  return result;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1282/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:23:44.136127758 -0500\n@@ -111,10 +111,10 @@\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n+        if (Math.abs(yInitial) <= functionValueAccuracy) {\n+\t\t\tsetResult(initial, 0);\n+\t\t\treturn result;\n+\t\t}\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "return solve(f,min,max);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1239/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:20:47.500439220 -0500\n@@ -128,8 +128,7 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        return solve(f, min, max);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 296, 
          "faulty": "x1=x1 + 0.5 * tolerance;", 
          "type": "InsertBefore", 
          "seed": "if (Math.abs(y1) <= functionValueAccuracy) {\n  setResult(x1,i);\n  return result;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1332/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:27:06.255771612 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -293,7 +295,11 @@\n             if (Math.abs(delta) > tolerance) {\n                 x1 = x1 + delta;\n             } else if (dx > 0.0) {\n-                x1 = x1 + 0.5 * tolerance;\n+                if (Math.abs(y1) <= functionValueAccuracy) {\n+\t\t\t\t\tsetResult(x1, i);\n+\t\t\t\t\treturn result;\n+\t\t\t\t}\n+\t\t\t\tx1 = x1 + 0.5 * tolerance;\n             } else if (dx <= 0.0) {\n                 x1 = x1 - 0.5 * tolerance;\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 102, 
          "faulty": "if (Math.abs(yInitial) <= functionValueAccuracy) {\n  setResult(initial,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "setResult(max,0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_476/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:30:05.101754619 -0500\n@@ -99,7 +99,8 @@\n \n         // return the initial guess if it is good enough\n         double yInitial = f.value(initial);\n-        if (Math.abs(yInitial) <= functionValueAccuracy) {\n+        setResult(max, 0);\n+\t\tif (Math.abs(yInitial) <= functionValueAccuracy) {\n             setResult(initial, 0);\n             return result;\n         }\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 109, 
          "faulty": "if (Math.abs(yMin) <= functionValueAccuracy) {\n  setResult(yMin,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_350/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:21:12.962683025 -0500\n@@ -106,7 +106,10 @@\n \n         // return the first endpoint if it is good enough\n         double yMin = f.value(min);\n-        if (Math.abs(yMin) <= functionValueAccuracy) {\n+        if (yInitial * yMin < 0) {\n+\t\t\treturn solve(f, min, yMin, initial, yInitial, min, yMin);\n+\t\t}\n+\t\tif (Math.abs(yMin) <= functionValueAccuracy) {\n             setResult(yMin, 0);\n             return result;\n         }\n@@ -128,8 +131,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 209, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);", 
          "type": "InsertBefore", 
          "seed": "iterationCount+=this.iterationCount;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "verifyInterval(min,max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1592/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 05:45:06.773870951 -0500\n@@ -206,7 +206,8 @@\n      */\n     protected void verifyInterval(final double lower, final double upper) {\n         if (lower >= upper) {\n-            throw MathRuntimeException.createIllegalArgumentException(\n+            iterationCount += this.iterationCount;\n+\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n                     \"endpoints do not specify an interval: [{0}, {1}]\",\n                     lower, upper);\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1592/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:45:06.773870951 -0500\n@@ -118,7 +118,8 @@\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n+        verifyInterval(min, max);\n+\t\tif (Math.abs(yMax) <= functionValueAccuracy) {\n             setResult(yMax, 0);\n             return result;\n         }\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "Delete", 
          "seed": "resultComputed=true;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_676/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:42:56.092414455 -0500\n@@ -118,18 +118,15 @@\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n-            setResult(yMax, 0);\n-            return result;\n-        }\n-\n         // reduce interval if initial and max bracket the root\n         if (yInitial * yMax < 0) {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 209, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "return solve(f,min,max);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_862/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 04:55:27.135098306 -0500\n@@ -207,8 +207,8 @@\n     protected void verifyInterval(final double lower, final double upper) {\n         if (lower >= upper) {\n             throw MathRuntimeException.createIllegalArgumentException(\n-                    \"endpoints do not specify an interval: [{0}, {1}]\",\n-                    lower, upper);\n+\t\t\t\t\t\"endpoints do not specify an interval: [{0}, {1}]\", lower,\n+\t\t\t\t\tupper);\n         }\n     }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_862/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:55:27.139098299 -0500\n@@ -128,8 +128,7 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        return solve(f, min, max);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 225, 
          "faulty": "if (!isSequence(lower,initial,upper)) {\n  throw MathRuntimeException.createIllegalArgumentException(\"invalid interval, initial value parameters:  lower={0}, initial={1}, upper={2}\",lower,initial,upper);\n}", 
          "type": "InsertBefore", 
          "seed": "this.resultComputed=true;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_941/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 05:00:22.414580688 -0500\n@@ -222,7 +222,8 @@\n      * @throws IllegalArgumentException\n      */\n     protected void verifySequence(final double lower, final double initial, final double upper) {\n-        if (!isSequence(lower, initial, upper)) {\n+        this.resultComputed = true;\n+\t\tif (!isSequence(lower, initial, upper)) {\n             throw MathRuntimeException.createIllegalArgumentException(\n                     \"invalid interval, initial value parameters:  lower={0}, initial={1}, upper={2}\",\n                     lower, initial, upper);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_941/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:00:22.414580688 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 109, 
          "faulty": "if (Math.abs(yMin) <= functionValueAccuracy) {\n  setResult(yMin,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 120, 
          "faulty": "double yMax=f.value(max);", 
          "type": "InsertBefore", 
          "seed": "verifySequence(min,initial,max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_630/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:40:12.048699155 -0500\n@@ -106,7 +106,8 @@\n \n         // return the first endpoint if it is good enough\n         double yMin = f.value(min);\n-        if (Math.abs(yMin) <= functionValueAccuracy) {\n+        functionValueAccuracy = defaultFunctionValueAccuracy;\n+\t\tif (Math.abs(yMin) <= functionValueAccuracy) {\n             setResult(yMin, 0);\n             return result;\n         }\n@@ -116,7 +117,8 @@\n             return solve(f, min, yMin, initial, yInitial, min, yMin);\n         }\n \n-        // return the second endpoint if it is good enough\n+        verifySequence(min, initial, max);\n+\t\t// return the second endpoint if it is good enough\n         double yMax = f.value(max);\n         if (Math.abs(yMax) <= functionValueAccuracy) {\n             setResult(yMax, 0);\n@@ -128,8 +130,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 108, 
          "faulty": "double yMin=f.value(min);", 
          "type": "InsertBefore", 
          "seed": "this.resultComputed=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Replace", 
          "seed": "this.functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1107/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:11:36.697401086 -0500\n@@ -104,17 +104,15 @@\n             return result;\n         }\n \n-        // return the first endpoint if it is good enough\n+        this.resultComputed = false;\n+\t\t// return the first endpoint if it is good enough\n         double yMin = f.value(min);\n         if (Math.abs(yMin) <= functionValueAccuracy) {\n             setResult(yMin, 0);\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n+        this.functionValueAccuracy = defaultFunctionValueAccuracy;\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n@@ -128,8 +126,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 282, 
          "faulty": "delta=0.5 * dx;", 
          "type": "InsertBefore", 
          "seed": "this.defaultFunctionValueAccuracy=1.0e-15;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_968/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:02:03.262404058 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -276,7 +278,8 @@\n                 }\n                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||\n                         p >= Math.abs(0.5 * oldDelta * p1)) {\n-                    // Inverse quadratic interpolation gives a value\n+                    this.defaultFunctionValueAccuracy = 1.0e-15;\n+\t\t\t\t\t// Inverse quadratic interpolation gives a value\n                     // in the wrong direction, or progress is slow.\n                     // Fall back to bisection.\n                     delta = 0.5 * dx;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 102, 
          "faulty": "if (Math.abs(yInitial) <= functionValueAccuracy) {\n  setResult(initial,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "clearResult();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 295, 
          "faulty": "if (dx > 0.0) {\n  x1=x1 + 0.5 * tolerance;\n}\n else if (dx <= 0.0) {\n  x1=x1 - 0.5 * tolerance;\n}", 
          "type": "InsertBefore", 
          "seed": "iterationCount=i;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1130/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:13:03.745249027 -0500\n@@ -99,7 +99,8 @@\n \n         // return the initial guess if it is good enough\n         double yInitial = f.value(initial);\n-        if (Math.abs(yInitial) <= functionValueAccuracy) {\n+        clearResult();\n+\t\tif (Math.abs(yInitial) <= functionValueAccuracy) {\n             setResult(initial, 0);\n             return result;\n         }\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -292,11 +295,14 @@\n             // Compute new X1, Y1\n             if (Math.abs(delta) > tolerance) {\n                 x1 = x1 + delta;\n-            } else if (dx > 0.0) {\n-                x1 = x1 + 0.5 * tolerance;\n-            } else if (dx <= 0.0) {\n-                x1 = x1 - 0.5 * tolerance;\n-            }\n+            } else {\n+\t\t\t\titerationCount = i;\n+\t\t\t\tif (dx > 0.0) {\n+\t\t\t\t\tx1 = x1 + 0.5 * tolerance;\n+\t\t\t\t} else if (dx <= 0.0) {\n+\t\t\t\t\tx1 = x1 - 0.5 * tolerance;\n+\t\t\t\t}\n+\t\t\t}\n             y1 = f.value(x1);\n             if ((y1 > 0) == (y2 > 0)) {\n                 x2 = x0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 108, 
          "faulty": "double yMin=f.value(min);", 
          "type": "InsertBefore", 
          "seed": "this.resultComputed=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_322/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:19:09.386899072 -0500\n@@ -104,7 +104,8 @@\n             return result;\n         }\n \n-        // return the first endpoint if it is good enough\n+        this.resultComputed = false;\n+\t\t// return the first endpoint if it is good enough\n         double yMin = f.value(min);\n         if (Math.abs(yMin) <= functionValueAccuracy) {\n             setResult(yMin, 0);\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 97, 
          "faulty": "clearResult();", 
          "type": "InsertBefore", 
          "seed": "if (f == null) {\n  throw MathRuntimeException.createIllegalArgumentException(\"function to solve cannot be null\");\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 109, 
          "faulty": "if (Math.abs(yMin) <= functionValueAccuracy) {\n  setResult(yMin,0);\n  return result;\n}", 
          "type": "Delete", 
          "seed": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_973/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:02:20.930373121 -0500\n@@ -94,7 +94,11 @@\n                         final double min, final double max, final double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n-        clearResult();\n+        if (f == null) {\n+\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t.createIllegalArgumentException(\"function to solve cannot be null\");\n+\t\t\t}\n+\t\tclearResult();\n         verifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n@@ -106,11 +110,6 @@\n \n         // return the first endpoint if it is good enough\n         double yMin = f.value(min);\n-        if (Math.abs(yMin) <= functionValueAccuracy) {\n-            setResult(yMin, 0);\n-            return result;\n-        }\n-\n         // reduce interval if min and initial bracket the root\n         if (yInitial * yMin < 0) {\n             return solve(f, min, yMin, initial, yInitial, min, yMin);\n@@ -128,8 +127,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 120, 
          "faulty": "double yMax=f.value(max);", 
          "type": "InsertBefore", 
          "seed": "resultComputed=true;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1247/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:21:18.732384133 -0500\n@@ -116,7 +116,8 @@\n             return solve(f, min, yMin, initial, yInitial, min, yMin);\n         }\n \n-        // return the second endpoint if it is good enough\n+        resultComputed = true;\n+\t\t// return the second endpoint if it is good enough\n         double yMax = f.value(max);\n         if (Math.abs(yMax) <= functionValueAccuracy) {\n             setResult(yMax, 0);\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 196, 
          "faulty": "return (start < mid) && (mid < end);", 
          "type": "InsertBefore", 
          "seed": "this.resultComputed=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 173, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(max,0);\n  ret=max;\n}\n else {\n  throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);\n}", 
          "type": "InsertBefore", 
          "seed": "if (Math.abs(yMin) <= functionValueAccuracy) {\n  setResult(min,0);\n  ret=min;\n}\n else if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(max,0);\n  ret=max;\n}\n else {\n  throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_586/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 04:37:21.064996147 -0500\n@@ -193,7 +193,8 @@\n      * @return true if the arguments form an increasing sequence\n      */\n     protected boolean isSequence(final double start, final double mid, final double end) {\n-        return (start < mid) && (mid < end);\n+        this.resultComputed = false;\n+\t\treturn (start < mid) && (mid < end);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_586/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:37:21.068996140 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -170,16 +172,31 @@\n             if (Math.abs(yMin) <= functionValueAccuracy) {\n                 setResult(min, 0);\n                 ret = min;\n-            } else if (Math.abs(yMax) <= functionValueAccuracy) {\n-                setResult(max, 0);\n-                ret = max;\n             } else {\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw MathRuntimeException.createIllegalArgumentException(\n-                        \"function values at endpoints do not have different signs.  \" +\n-                        \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n-                        min, max, yMin, yMax);\n-            }\n+\t\t\t\tif (Math.abs(yMin) <= functionValueAccuracy) {\n+\t\t\t\t\tsetResult(min, 0);\n+\t\t\t\t\tret = min;\n+\t\t\t\t} else if (Math.abs(yMax) <= functionValueAccuracy) {\n+\t\t\t\t\tsetResult(max, 0);\n+\t\t\t\t\tret = max;\n+\t\t\t\t} else {\n+\t\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n+\t\t\t\t\t\t\t\t\tmin, max, yMin, yMax);\n+\t\t\t\t}\n+\t\t\t\tif (Math.abs(yMax) <= functionValueAccuracy) {\n+\t\t\t\t\tsetResult(max, 0);\n+\t\t\t\t\tret = max;\n+\t\t\t\t} else {\n+\t\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n+\t\t\t\t\t\t\t\t\tmin, max, yMin, yMax);\n+\t\t\t\t}\n+\t\t\t}\n         } else if (sign < 0){\n             // solve using only the first endpoint as initial guess\n             ret = solve(f, min, yMin, max, yMax, min, yMin);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 97, 
          "faulty": "clearResult();", 
          "type": "InsertBefore", 
          "seed": "setResult(initial,0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_495/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:31:22.117620497 -0500\n@@ -94,7 +94,8 @@\n                         final double min, final double max, final double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n-        clearResult();\n+        setResult(initial, 0);\n+\t\tclearResult();\n         verifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 196, 
          "faulty": "return (start < mid) && (mid < end);", 
          "type": "InsertBefore", 
          "seed": "this.resultComputed=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_808/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 04:51:41.183494870 -0500\n@@ -193,7 +193,8 @@\n      * @return true if the arguments form an increasing sequence\n      */\n     protected boolean isSequence(final double start, final double mid, final double end) {\n-        return (start < mid) && (mid < end);\n+        this.resultComputed = false;\n+\t\treturn (start < mid) && (mid < end);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_808/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:51:41.187494863 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 247, 
          "faulty": "return result;", 
          "type": "InsertBefore", 
          "seed": "if (Math.abs(y2) < Math.abs(y1)) {\n  x0=x1;\n  x1=x2;\n  x2=x0;\n  y0=y1;\n  y1=y2;\n  y2=y0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_721/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:45:51.384109672 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -244,7 +246,15 @@\n                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);\n             if (Math.abs(dx) <= tolerance) {\n                 setResult(x1, i);\n-                return result;\n+                if (Math.abs(y2) < Math.abs(y1)) {\n+\t\t\t\t\tx0 = x1;\n+\t\t\t\t\tx1 = x2;\n+\t\t\t\t\tx2 = x0;\n+\t\t\t\t\ty0 = y1;\n+\t\t\t\t\ty1 = y2;\n+\t\t\t\t\ty2 = y0;\n+\t\t\t\t}\n+\t\t\t\treturn result;\n             }\n             if ((Math.abs(oldDelta) < tolerance) ||\n                     (Math.abs(y0) <= Math.abs(y1))) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Delete", 
          "seed": "this.functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_396/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:24:31.126336939 -0500\n@@ -111,11 +111,6 @@\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n-\n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n         if (Math.abs(yMax) <= functionValueAccuracy) {\n@@ -128,8 +123,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1001/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:04:16.630170585 -0500\n@@ -118,7 +118,10 @@\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n+        if (yInitial * yMin < 0) {\n+\t\t\treturn solve(f, min, yMin, initial, yInitial, min, yMin);\n+\t\t}\n+\t\tif (Math.abs(yMax) <= functionValueAccuracy) {\n             setResult(yMax, 0);\n             return result;\n         }\n@@ -128,8 +131,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 196, 
          "faulty": "return (start < mid) && (mid < end);", 
          "type": "InsertBefore", 
          "seed": "functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1504/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 05:39:02.142511625 -0500\n@@ -193,7 +193,8 @@\n      * @return true if the arguments form an increasing sequence\n      */\n     protected boolean isSequence(final double start, final double mid, final double end) {\n-        return (start < mid) && (mid < end);\n+        functionValueAccuracy = defaultFunctionValueAccuracy;\n+\t\treturn (start < mid) && (mid < end);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1504/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:39:02.142511625 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 102, 
          "faulty": "if (Math.abs(yInitial) <= functionValueAccuracy) {\n  setResult(initial,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "this.functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_623/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:39:45.232745716 -0500\n@@ -99,7 +99,8 @@\n \n         // return the initial guess if it is good enough\n         double yInitial = f.value(initial);\n-        if (Math.abs(yInitial) <= functionValueAccuracy) {\n+        this.functionValueAccuracy = defaultFunctionValueAccuracy;\n+\t\tif (Math.abs(yInitial) <= functionValueAccuracy) {\n             setResult(initial, 0);\n             return result;\n         }\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 209, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Replace", 
          "seed": "this.functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1603/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 05:45:46.493801202 -0500\n@@ -207,8 +207,8 @@\n     protected void verifyInterval(final double lower, final double upper) {\n         if (lower >= upper) {\n             throw MathRuntimeException.createIllegalArgumentException(\n-                    \"endpoints do not specify an interval: [{0}, {1}]\",\n-                    lower, upper);\n+\t\t\t\t\t\"endpoints do not specify an interval: [{0}, {1}]\", lower,\n+\t\t\t\t\tupper);\n         }\n     }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1603/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:45:46.497801195 -0500\n@@ -111,10 +111,7 @@\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n+        this.functionValueAccuracy = defaultFunctionValueAccuracy;\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n@@ -128,8 +125,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 108, 
          "faulty": "double yMin=f.value(min);", 
          "type": "InsertBefore", 
          "seed": "setResult(initial,0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_499/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:31:35.629596972 -0500\n@@ -104,7 +104,8 @@\n             return result;\n         }\n \n-        // return the first endpoint if it is good enough\n+        setResult(initial, 0);\n+\t\t// return the first endpoint if it is good enough\n         double yMin = f.value(min);\n         if (Math.abs(yMin) <= functionValueAccuracy) {\n             setResult(yMin, 0);\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 101, 
          "faulty": "double yInitial=f.value(initial);", 
          "type": "InsertBefore", 
          "seed": "setResult(max,0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_535/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:33:53.713356664 -0500\n@@ -97,7 +97,8 @@\n         clearResult();\n         verifySequence(min, initial, max);\n \n-        // return the initial guess if it is good enough\n+        setResult(max, 0);\n+\t\t// return the initial guess if it is good enough\n         double yInitial = f.value(initial);\n         if (Math.abs(yInitial) <= functionValueAccuracy) {\n             setResult(initial, 0);\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 209, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 98, 
          "faulty": "verifySequence(min,initial,max);", 
          "type": "InsertBefore", 
          "seed": "this.iterationCount=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_738/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 04:47:03.279983218 -0500\n@@ -207,8 +207,8 @@\n     protected void verifyInterval(final double lower, final double upper) {\n         if (lower >= upper) {\n             throw MathRuntimeException.createIllegalArgumentException(\n-                    \"endpoints do not specify an interval: [{0}, {1}]\",\n-                    lower, upper);\n+\t\t\t\t\t\"endpoints do not specify an interval: [{0}, {1}]\", lower,\n+\t\t\t\t\tupper);\n         }\n     }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_738/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:47:03.287983204 -0500\n@@ -95,7 +95,8 @@\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n         clearResult();\n-        verifySequence(min, initial, max);\n+        this.iterationCount = 0;\n+\t\tverifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n         double yInitial = f.value(initial);\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 173, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(max,0);\n  ret=max;\n}\n else {\n  throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);\n}", 
          "type": "InsertBefore", 
          "seed": "this.defaultFunctionValueAccuracy=1.0e-15;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_850/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:54:39.491181890 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -170,16 +172,19 @@\n             if (Math.abs(yMin) <= functionValueAccuracy) {\n                 setResult(min, 0);\n                 ret = min;\n-            } else if (Math.abs(yMax) <= functionValueAccuracy) {\n-                setResult(max, 0);\n-                ret = max;\n             } else {\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw MathRuntimeException.createIllegalArgumentException(\n-                        \"function values at endpoints do not have different signs.  \" +\n-                        \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n-                        min, max, yMin, yMax);\n-            }\n+\t\t\t\tthis.defaultFunctionValueAccuracy = 1.0e-15;\n+\t\t\t\tif (Math.abs(yMax) <= functionValueAccuracy) {\n+\t\t\t\t\tsetResult(max, 0);\n+\t\t\t\t\tret = max;\n+\t\t\t\t} else {\n+\t\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n+\t\t\t\t\t\t\t\t\tmin, max, yMin, yMax);\n+\t\t\t\t}\n+\t\t\t}\n         } else if (sign < 0){\n             // solve using only the first endpoint as initial guess\n             ret = solve(f, min, yMin, max, yMax, min, yMin);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 296, 
          "faulty": "x1=x1 + 0.5 * tolerance;", 
          "type": "InsertBefore", 
          "seed": "if (f == null) {\n  throw MathRuntimeException.createIllegalArgumentException(\"function to solve cannot be null\");\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_745/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:47:28.799938344 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -293,7 +295,11 @@\n             if (Math.abs(delta) > tolerance) {\n                 x1 = x1 + delta;\n             } else if (dx > 0.0) {\n-                x1 = x1 + 0.5 * tolerance;\n+                if (f == null) {\n+\t\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t\t.createIllegalArgumentException(\"function to solve cannot be null\");\n+\t\t\t\t}\n+\t\t\t\tx1 = x1 + 0.5 * tolerance;\n             } else if (dx <= 0.0) {\n                 x1 = x1 - 0.5 * tolerance;\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 120, 
          "faulty": "double yMax=f.value(max);", 
          "type": "InsertBefore", 
          "seed": "resultComputed=true;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "Delete", 
          "seed": "if (yInitial * yMax < 0) {\n  return solve(f,initial,yInitial,max,yMax,initial,yInitial);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_882/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:56:45.878960202 -0500\n@@ -116,20 +116,18 @@\n             return solve(f, min, yMin, initial, yInitial, min, yMin);\n         }\n \n-        // return the second endpoint if it is good enough\n+        resultComputed = true;\n+\t\t// return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n-            setResult(yMax, 0);\n-            return result;\n-        }\n-\n         // reduce interval if initial and max bracket the root\n         if (yInitial * yMax < 0) {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 98, 
          "faulty": "verifySequence(min,initial,max);", 
          "type": "InsertBefore", 
          "seed": "this.iterationCount=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1443/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:34:48.254958140 -0500\n@@ -95,7 +95,8 @@\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n         clearResult();\n-        verifySequence(min, initial, max);\n+        this.iterationCount = 0;\n+\t\tverifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n         double yInitial = f.value(initial);\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 97, 
          "faulty": "clearResult();", 
          "type": "Replace", 
          "seed": "if (f == null) {\n  throw MathRuntimeException.createIllegalArgumentException(\"function to solve cannot be null\");\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 283, 
          "faulty": "oldDelta=delta;", 
          "type": "InsertBefore", 
          "seed": "if (x0 == x2) {\n  p=dx * r3;\n  p1=1.0 - r3;\n}\n else {\n  double r1=y0 / y2;\n  double r2=y1 / y2;\n  p=r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));\n  p1=(r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1413/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:32:42.847178831 -0500\n@@ -94,7 +94,10 @@\n                         final double min, final double max, final double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n-        clearResult();\n+        if (f == null) {\n+\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t.createIllegalArgumentException(\"function to solve cannot be null\");\n+\t\t}\n         verifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n@@ -128,8 +131,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -280,7 +285,16 @@\n                     // in the wrong direction, or progress is slow.\n                     // Fall back to bisection.\n                     delta = 0.5 * dx;\n-                    oldDelta = delta;\n+                    if (x0 == x2) {\n+\t\t\t\t\t\tp = dx * r3;\n+\t\t\t\t\t\tp1 = 1.0 - r3;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tdouble r1 = y0 / y2;\n+\t\t\t\t\t\tdouble r2 = y1 / y2;\n+\t\t\t\t\t\tp = r3 * (dx * r1 * (r1 - r2) - (x1 - x0) * (r2 - 1.0));\n+\t\t\t\t\t\tp1 = (r1 - 1.0) * (r2 - 1.0) * (r3 - 1.0);\n+\t\t\t\t\t}\n+\t\t\t\t\toldDelta = delta;\n                 } else {\n                     oldDelta = delta;\n                     delta = p / p1;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "verifyInterval(min,max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_689/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:43:40.972336605 -0500\n@@ -118,7 +118,8 @@\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n+        verifyInterval(min, max);\n+\t\tif (Math.abs(yMax) <= functionValueAccuracy) {\n             setResult(yMax, 0);\n             return result;\n         }\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 109, 
          "faulty": "if (Math.abs(yMin) <= functionValueAccuracy) {\n  setResult(yMin,0);\n  return result;\n}", 
          "type": "Delete", 
          "seed": "functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1594/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:45:11.041863456 -0500\n@@ -106,11 +106,6 @@\n \n         // return the first endpoint if it is good enough\n         double yMin = f.value(min);\n-        if (Math.abs(yMin) <= functionValueAccuracy) {\n-            setResult(yMin, 0);\n-            return result;\n-        }\n-\n         // reduce interval if min and initial bracket the root\n         if (yInitial * yMin < 0) {\n             return solve(f, min, yMin, initial, yInitial, min, yMin);\n@@ -118,7 +113,8 @@\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n+        functionValueAccuracy = defaultFunctionValueAccuracy;\n+\t\tif (Math.abs(yMax) <= functionValueAccuracy) {\n             setResult(yMax, 0);\n             return result;\n         }\n@@ -128,8 +124,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 97, 
          "faulty": "clearResult();", 
          "type": "Delete", 
          "seed": "clearResult();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_662/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:42:08.152497632 -0500\n@@ -94,7 +94,6 @@\n                         final double min, final double max, final double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n-        clearResult();\n         verifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n@@ -128,8 +127,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 102, 
          "faulty": "if (Math.abs(yInitial) <= functionValueAccuracy) {\n  setResult(initial,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "clearResult();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "Replace", 
          "seed": "this.f=f;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1623/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:47:10.693653371 -0500\n@@ -99,7 +99,8 @@\n \n         // return the initial guess if it is good enough\n         double yInitial = f.value(initial);\n-        if (Math.abs(yInitial) <= functionValueAccuracy) {\n+        clearResult();\n+\t\tif (Math.abs(yInitial) <= functionValueAccuracy) {\n             setResult(initial, 0);\n             return result;\n         }\n@@ -118,18 +119,17 @@\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n-            setResult(yMax, 0);\n-            return result;\n-        }\n+        this.f = f;\n \n         // reduce interval if initial and max bracket the root\n         if (yInitial * yMax < 0) {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 120, 
          "faulty": "double yMax=f.value(max);", 
          "type": "InsertBefore", 
          "seed": "this.functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_928/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:59:44.534647053 -0500\n@@ -116,7 +116,8 @@\n             return solve(f, min, yMin, initial, yInitial, min, yMin);\n         }\n \n-        // return the second endpoint if it is good enough\n+        this.functionValueAccuracy = defaultFunctionValueAccuracy;\n+\t\t// return the second endpoint if it is good enough\n         double yMax = f.value(max);\n         if (Math.abs(yMax) <= functionValueAccuracy) {\n             setResult(yMax, 0);\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 209, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);", 
          "type": "InsertBefore", 
          "seed": "if (f == null) {\n  throw MathRuntimeException.createIllegalArgumentException(\"function to solve cannot be null\");\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 283, 
          "faulty": "oldDelta=delta;", 
          "type": "InsertBefore", 
          "seed": "x1=x1 - 0.5 * tolerance;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_826/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 04:52:57.563360769 -0500\n@@ -206,7 +206,11 @@\n      */\n     protected void verifyInterval(final double lower, final double upper) {\n         if (lower >= upper) {\n-            throw MathRuntimeException.createIllegalArgumentException(\n+            if (f == null) {\n+\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t.createIllegalArgumentException(\"function to solve cannot be null\");\n+\t\t\t}\n+\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n                     \"endpoints do not specify an interval: [{0}, {1}]\",\n                     lower, upper);\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_826/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:52:57.567360762 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -280,7 +282,8 @@\n                     // in the wrong direction, or progress is slow.\n                     // Fall back to bisection.\n                     delta = 0.5 * dx;\n-                    oldDelta = delta;\n+                    x1 = x1 - 0.5 * tolerance;\n+\t\t\t\t\toldDelta = delta;\n                 } else {\n                     oldDelta = delta;\n                     delta = p / p1;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 178, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);", 
          "type": "InsertBefore", 
          "seed": "iterationCount+=this.iterationCount;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_913/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:58:41.954756715 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -174,7 +176,8 @@\n                 setResult(max, 0);\n                 ret = max;\n             } else {\n-                // neither value is close to zero and min and max do not bracket root.\n+                iterationCount += this.iterationCount;\n+\t\t\t\t// neither value is close to zero and min and max do not bracket root.\n                 throw MathRuntimeException.createIllegalArgumentException(\n                         \"function values at endpoints do not have different signs.  \" +\n                         \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 173, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(max,0);\n  ret=max;\n}\n else {\n  throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);\n}", 
          "type": "InsertBefore", 
          "seed": "if (sign < 0) {\n  ret=solve(f,min,yMin,max,yMax,min,yMin);\n}\n else {\n  if (yMin == 0.0) {\n    ret=min;\n  }\n else {\n    ret=max;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1299/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:24:55.832001394 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -170,16 +172,27 @@\n             if (Math.abs(yMin) <= functionValueAccuracy) {\n                 setResult(min, 0);\n                 ret = min;\n-            } else if (Math.abs(yMax) <= functionValueAccuracy) {\n-                setResult(max, 0);\n-                ret = max;\n             } else {\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw MathRuntimeException.createIllegalArgumentException(\n-                        \"function values at endpoints do not have different signs.  \" +\n-                        \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n-                        min, max, yMin, yMax);\n-            }\n+\t\t\t\tif (sign < 0) {\n+\t\t\t\t\tret = solve(f, min, yMin, max, yMax, min, yMin);\n+\t\t\t\t} else {\n+\t\t\t\t\tif (yMin == 0.0) {\n+\t\t\t\t\t\tret = min;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tret = max;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tif (Math.abs(yMax) <= functionValueAccuracy) {\n+\t\t\t\t\tsetResult(max, 0);\n+\t\t\t\t\tret = max;\n+\t\t\t\t} else {\n+\t\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n+\t\t\t\t\t\t\t\t\tmin, max, yMin, yMax);\n+\t\t\t\t}\n+\t\t\t}\n         } else if (sign < 0){\n             // solve using only the first endpoint as initial guess\n             ret = solve(f, min, yMin, max, yMax, min, yMin);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Replace", 
          "seed": "if (f.value(max) == 0.0) {\n  return max;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_903/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:58:10.654811575 -0500\n@@ -111,10 +111,9 @@\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n+        if (f.value(max) == 0.0) {\n+\t\t\treturn max;\n+\t\t}\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n@@ -128,8 +127,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Replace", 
          "seed": "this.functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "Delete", 
          "seed": "this.f=f;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_868/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:55:49.415059225 -0500\n@@ -111,25 +111,19 @@\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n+        this.functionValueAccuracy = defaultFunctionValueAccuracy;\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n-            setResult(yMax, 0);\n-            return result;\n-        }\n-\n         // reduce interval if initial and max bracket the root\n         if (yInitial * yMax < 0) {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 97, 
          "faulty": "clearResult();", 
          "type": "Replace", 
          "seed": "this.resultComputed=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_609/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:38:51.848838426 -0500\n@@ -94,7 +94,7 @@\n                         final double min, final double max, final double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n-        clearResult();\n+        this.resultComputed = false;\n         verifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 283, 
          "faulty": "oldDelta=delta;", 
          "type": "Delete", 
          "seed": "return functionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Replace", 
          "seed": "setResult(initial,0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_799/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:51:10.091549473 -0500\n@@ -111,10 +111,7 @@\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n+        setResult(initial, 0);\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n@@ -128,8 +125,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -280,7 +279,6 @@\n                     // in the wrong direction, or progress is slow.\n                     // Fall back to bisection.\n                     delta = 0.5 * dx;\n-                    oldDelta = delta;\n                 } else {\n                     oldDelta = delta;\n                     delta = p / p1;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 283, 
          "faulty": "oldDelta=delta;", 
          "type": "Delete", 
          "seed": "x1=x1 - 0.5 * tolerance;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_684/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:43:24.208365682 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -280,7 +282,6 @@\n                     // in the wrong direction, or progress is slow.\n                     // Fall back to bisection.\n                     delta = 0.5 * dx;\n-                    oldDelta = delta;\n                 } else {\n                     oldDelta = delta;\n                     delta = p / p1;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 196, 
          "faulty": "return (start < mid) && (mid < end);", 
          "type": "InsertBefore", 
          "seed": "functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 97, 
          "faulty": "clearResult();", 
          "type": "Delete", 
          "seed": "clearResult();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1481/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 05:37:29.062675284 -0500\n@@ -193,7 +193,8 @@\n      * @return true if the arguments form an increasing sequence\n      */\n     protected boolean isSequence(final double start, final double mid, final double end) {\n-        return (start < mid) && (mid < end);\n+        functionValueAccuracy = defaultFunctionValueAccuracy;\n+\t\treturn (start < mid) && (mid < end);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1481/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:37:29.062675284 -0500\n@@ -94,7 +94,6 @@\n                         final double min, final double max, final double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n-        clearResult();\n         verifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n@@ -128,8 +127,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "Replace", 
          "seed": "this.f=f;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_562/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:35:48.405157203 -0500\n@@ -118,18 +118,17 @@\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n-            setResult(yMax, 0);\n-            return result;\n-        }\n+        this.f = f;\n \n         // reduce interval if initial and max bracket the root\n         if (yInitial * yMax < 0) {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 97, 
          "faulty": "clearResult();", 
          "type": "Replace", 
          "seed": "if (f == null) {\n  throw MathRuntimeException.createIllegalArgumentException(\"function to solve cannot be null\");\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_244/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:13:28.243496443 -0500\n@@ -94,7 +94,10 @@\n                         final double min, final double max, final double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n-        clearResult();\n+        if (f == null) {\n+\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t.createIllegalArgumentException(\"function to solve cannot be null\");\n+\t\t}\n         verifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n@@ -128,8 +131,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 97, 
          "faulty": "clearResult();", 
          "type": "Replace", 
          "seed": "if (f == null) {\n  throw MathRuntimeException.createIllegalArgumentException(\"function to solve cannot be null\");\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 127, 
          "faulty": "if (yInitial * yMax < 0) {\n  return solve(f,initial,yInitial,max,yMax,initial,yInitial);\n}", 
          "type": "InsertBefore", 
          "seed": "if (f == null) {\n  throw MathRuntimeException.createIllegalArgumentException(\"function to solve cannot be null\");\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1389/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:31:08.475344968 -0500\n@@ -94,7 +94,10 @@\n                         final double min, final double max, final double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n-        clearResult();\n+        if (f == null) {\n+\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t.createIllegalArgumentException(\"function to solve cannot be null\");\n+\t\t}\n         verifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n@@ -123,13 +126,19 @@\n             return result;\n         }\n \n-        // reduce interval if initial and max bracket the root\n+        if (f == null) {\n+\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t.createIllegalArgumentException(\"function to solve cannot be null\");\n+\t\t}\n+\t\t// reduce interval if initial and max bracket the root\n         if (yInitial * yMax < 0) {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 283, 
          "faulty": "oldDelta=delta;", 
          "type": "InsertBefore", 
          "seed": "iterationCount=i;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1214/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:19:10.924608130 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -280,7 +282,8 @@\n                     // in the wrong direction, or progress is slow.\n                     // Fall back to bisection.\n                     delta = 0.5 * dx;\n-                    oldDelta = delta;\n+                    iterationCount = i;\n+\t\t\t\t\toldDelta = delta;\n                 } else {\n                     oldDelta = delta;\n                     delta = p / p1;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 97, 
          "faulty": "clearResult();", 
          "type": "Replace", 
          "seed": "this.iterationCount=0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_564/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:35:52.889149406 -0500\n@@ -94,7 +94,7 @@\n                         final double min, final double max, final double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n-        clearResult();\n+        this.iterationCount = 0;\n         verifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 196, 
          "faulty": "return (start < mid) && (mid < end);", 
          "type": "Replace", 
          "seed": "return (start < mid) && (mid < end);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 247, 
          "faulty": "return result;", 
          "type": "InsertBefore", 
          "seed": "if (Math.abs(y2) < Math.abs(y1)) {\n  x0=x1;\n  x1=x2;\n  x2=x0;\n  y0=y1;\n  y1=y2;\n  y2=y0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1090/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:10:28.417520395 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -244,7 +246,15 @@\n                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);\n             if (Math.abs(dx) <= tolerance) {\n                 setResult(x1, i);\n-                return result;\n+                if (Math.abs(y2) < Math.abs(y1)) {\n+\t\t\t\t\tx0 = x1;\n+\t\t\t\t\tx1 = x2;\n+\t\t\t\t\tx2 = x0;\n+\t\t\t\t\ty0 = y1;\n+\t\t\t\t\ty1 = y2;\n+\t\t\t\t\ty2 = y0;\n+\t\t\t\t}\n+\t\t\t\treturn result;\n             }\n             if ((Math.abs(oldDelta) < tolerance) ||\n                     (Math.abs(y0) <= Math.abs(y1))) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 283, 
          "faulty": "oldDelta=delta;", 
          "type": "InsertBefore", 
          "seed": "if (Math.abs(dx) <= tolerance) {\n  setResult(x1,i);\n  return result;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_638/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:40:39.024652322 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -280,7 +282,11 @@\n                     // in the wrong direction, or progress is slow.\n                     // Fall back to bisection.\n                     delta = 0.5 * dx;\n-                    oldDelta = delta;\n+                    if (Math.abs(dx) <= tolerance) {\n+\t\t\t\t\t\tsetResult(x1, i);\n+\t\t\t\t\t\treturn result;\n+\t\t\t\t\t}\n+\t\t\t\t\toldDelta = delta;\n                 } else {\n                     oldDelta = delta;\n                     delta = p / p1;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 108, 
          "faulty": "double yMin=f.value(min);", 
          "type": "InsertBefore", 
          "seed": "this.defaultFunctionValueAccuracy=1.0e-15;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 173, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(max,0);\n  ret=max;\n}\n else {\n  throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);\n}", 
          "type": "InsertBefore", 
          "seed": "if (sign < 0) {\n  ret=solve(f,min,yMin,max,yMax,min,yMin);\n}\n else {\n  if (yMin == 0.0) {\n    ret=min;\n  }\n else {\n    ret=max;\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_761/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:48:37.691817235 -0500\n@@ -104,7 +104,8 @@\n             return result;\n         }\n \n-        // return the first endpoint if it is good enough\n+        this.defaultFunctionValueAccuracy = 1.0e-15;\n+\t\t// return the first endpoint if it is good enough\n         double yMin = f.value(min);\n         if (Math.abs(yMin) <= functionValueAccuracy) {\n             setResult(yMin, 0);\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -170,16 +173,27 @@\n             if (Math.abs(yMin) <= functionValueAccuracy) {\n                 setResult(min, 0);\n                 ret = min;\n-            } else if (Math.abs(yMax) <= functionValueAccuracy) {\n-                setResult(max, 0);\n-                ret = max;\n             } else {\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw MathRuntimeException.createIllegalArgumentException(\n-                        \"function values at endpoints do not have different signs.  \" +\n-                        \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n-                        min, max, yMin, yMax);\n-            }\n+\t\t\t\tif (sign < 0) {\n+\t\t\t\t\tret = solve(f, min, yMin, max, yMax, min, yMin);\n+\t\t\t\t} else {\n+\t\t\t\t\tif (yMin == 0.0) {\n+\t\t\t\t\t\tret = min;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tret = max;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tif (Math.abs(yMax) <= functionValueAccuracy) {\n+\t\t\t\t\tsetResult(max, 0);\n+\t\t\t\t\tret = max;\n+\t\t\t\t} else {\n+\t\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n+\t\t\t\t\t\t\t\t\tmin, max, yMin, yMax);\n+\t\t\t\t}\n+\t\t\t}\n         } else if (sign < 0){\n             // solve using only the first endpoint as initial guess\n             ret = solve(f, min, yMin, max, yMax, min, yMin);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 196, 
          "faulty": "return (start < mid) && (mid < end);", 
          "type": "Replace", 
          "seed": "return (start < mid) && (mid < end);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "this.f=f;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1679/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:51:09.981233163 -0500\n@@ -118,7 +118,8 @@\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n+        this.f = f;\n+\t\tif (Math.abs(yMax) <= functionValueAccuracy) {\n             setResult(yMax, 0);\n             return result;\n         }\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 97, 
          "faulty": "clearResult();", 
          "type": "Replace", 
          "seed": "iterationCount+=this.iterationCount;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 283, 
          "faulty": "oldDelta=delta;", 
          "type": "Delete", 
          "seed": "x2=x0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_569/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:36:06.181126299 -0500\n@@ -94,7 +94,7 @@\n                         final double min, final double max, final double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n-        clearResult();\n+        iterationCount += this.iterationCount;\n         verifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -280,7 +282,6 @@\n                     // in the wrong direction, or progress is slow.\n                     // Fall back to bisection.\n                     delta = 0.5 * dx;\n-                    oldDelta = delta;\n                 } else {\n                     oldDelta = delta;\n                     delta = p / p1;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 102, 
          "faulty": "if (Math.abs(yInitial) <= functionValueAccuracy) {\n  setResult(initial,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "setResult(max,0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 109, 
          "faulty": "if (Math.abs(yMin) <= functionValueAccuracy) {\n  setResult(yMin,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1365/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:29:24.215528575 -0500\n@@ -99,14 +99,16 @@\n \n         // return the initial guess if it is good enough\n         double yInitial = f.value(initial);\n-        if (Math.abs(yInitial) <= functionValueAccuracy) {\n+        setResult(max, 0);\n+\t\tif (Math.abs(yInitial) <= functionValueAccuracy) {\n             setResult(initial, 0);\n             return result;\n         }\n \n         // return the first endpoint if it is good enough\n         double yMin = f.value(min);\n-        if (Math.abs(yMin) <= functionValueAccuracy) {\n+        functionValueAccuracy = defaultFunctionValueAccuracy;\n+\t\tif (Math.abs(yMin) <= functionValueAccuracy) {\n             setResult(yMin, 0);\n             return result;\n         }\n@@ -128,8 +130,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 296, 
          "faulty": "x1=x1 + 0.5 * tolerance;", 
          "type": "InsertBefore", 
          "seed": "setResult(x1,i);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1011/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:04:56.086101538 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -293,7 +295,8 @@\n             if (Math.abs(delta) > tolerance) {\n                 x1 = x1 + delta;\n             } else if (dx > 0.0) {\n-                x1 = x1 + 0.5 * tolerance;\n+                setResult(x1, i);\n+\t\t\t\tx1 = x1 + 0.5 * tolerance;\n             } else if (dx <= 0.0) {\n                 x1 = x1 - 0.5 * tolerance;\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 225, 
          "faulty": "if (!isSequence(lower,initial,upper)) {\n  throw MathRuntimeException.createIllegalArgumentException(\"invalid interval, initial value parameters:  lower={0}, initial={1}, upper={2}\",lower,initial,upper);\n}", 
          "type": "InsertBefore", 
          "seed": "if (!isSequence(lower,initial,upper)) {\n  throw MathRuntimeException.createIllegalArgumentException(\"invalid interval, initial value parameters:  lower={0}, initial={1}, upper={2}\",lower,initial,upper);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_962/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 05:01:41.942441392 -0500\n@@ -223,6 +223,12 @@\n      */\n     protected void verifySequence(final double lower, final double initial, final double upper) {\n         if (!isSequence(lower, initial, upper)) {\n+\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\"invalid interval, initial value parameters:  lower={0}, initial={1}, upper={2}\",\n+\t\t\t\t\t\t\tlower, initial, upper);\n+\t\t}\n+\t\tif (!isSequence(lower, initial, upper)) {\n             throw MathRuntimeException.createIllegalArgumentException(\n                     \"invalid interval, initial value parameters:  lower={0}, initial={1}, upper={2}\",\n                     lower, initial, upper);\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_962/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:01:41.942441392 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 295, 
          "faulty": "if (dx > 0.0) {\n  x1=x1 + 0.5 * tolerance;\n}\n else if (dx <= 0.0) {\n  x1=x1 - 0.5 * tolerance;\n}", 
          "type": "InsertBefore", 
          "seed": "iterationCount=i;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1318/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:26:12.175866877 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -292,11 +294,14 @@\n             // Compute new X1, Y1\n             if (Math.abs(delta) > tolerance) {\n                 x1 = x1 + delta;\n-            } else if (dx > 0.0) {\n-                x1 = x1 + 0.5 * tolerance;\n-            } else if (dx <= 0.0) {\n-                x1 = x1 - 0.5 * tolerance;\n-            }\n+            } else {\n+\t\t\t\titerationCount = i;\n+\t\t\t\tif (dx > 0.0) {\n+\t\t\t\t\tx1 = x1 + 0.5 * tolerance;\n+\t\t\t\t} else if (dx <= 0.0) {\n+\t\t\t\t\tx1 = x1 - 0.5 * tolerance;\n+\t\t\t\t}\n+\t\t\t}\n             y1 = f.value(x1);\n             if ((y1 > 0) == (y2 > 0)) {\n                 x2 = x0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 209, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);", 
          "type": "InsertBefore", 
          "seed": "iterationCount+=this.iterationCount;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_763/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 04:48:42.187809333 -0500\n@@ -206,7 +206,8 @@\n      */\n     protected void verifyInterval(final double lower, final double upper) {\n         if (lower >= upper) {\n-            throw MathRuntimeException.createIllegalArgumentException(\n+            iterationCount += this.iterationCount;\n+\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n                     \"endpoints do not specify an interval: [{0}, {1}]\",\n                     lower, upper);\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_763/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:48:42.191809326 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 97, 
          "faulty": "clearResult();", 
          "type": "Delete", 
          "seed": "clearResult();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 109, 
          "faulty": "if (Math.abs(yMin) <= functionValueAccuracy) {\n  setResult(yMin,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1578/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:44:07.225975533 -0500\n@@ -94,7 +94,6 @@\n                         final double min, final double max, final double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n-        clearResult();\n         verifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n@@ -106,7 +105,8 @@\n \n         // return the first endpoint if it is good enough\n         double yMin = f.value(min);\n-        if (Math.abs(yMin) <= functionValueAccuracy) {\n+        functionValueAccuracy = defaultFunctionValueAccuracy;\n+\t\tif (Math.abs(yMin) <= functionValueAccuracy) {\n             setResult(yMin, 0);\n             return result;\n         }\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 209, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 97, 
          "faulty": "clearResult();", 
          "type": "InsertBefore", 
          "seed": "iterationCount+=this.iterationCount;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1415/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 05:32:47.259171066 -0500\n@@ -207,8 +207,8 @@\n     protected void verifyInterval(final double lower, final double upper) {\n         if (lower >= upper) {\n             throw MathRuntimeException.createIllegalArgumentException(\n-                    \"endpoints do not specify an interval: [{0}, {1}]\",\n-                    lower, upper);\n+\t\t\t\t\t\"endpoints do not specify an interval: [{0}, {1}]\", lower,\n+\t\t\t\t\tupper);\n         }\n     }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1415/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:32:47.259171066 -0500\n@@ -94,7 +94,8 @@\n                         final double min, final double max, final double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n-        clearResult();\n+        iterationCount += this.iterationCount;\n+\t\tclearResult();\n         verifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 178, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);", 
          "type": "InsertBefore", 
          "seed": "if (f.value(max) == 0.0) {\n  return max;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 108, 
          "faulty": "double yMin=f.value(min);", 
          "type": "InsertBefore", 
          "seed": "this.resultComputed=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_409/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:25:20.610250584 -0500\n@@ -104,7 +104,8 @@\n             return result;\n         }\n \n-        // return the first endpoint if it is good enough\n+        this.resultComputed = false;\n+\t\t// return the first endpoint if it is good enough\n         double yMin = f.value(min);\n         if (Math.abs(yMin) <= functionValueAccuracy) {\n             setResult(yMin, 0);\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -174,7 +177,10 @@\n                 setResult(max, 0);\n                 ret = max;\n             } else {\n-                // neither value is close to zero and min and max do not bracket root.\n+                if (f.value(max) == 0.0) {\n+\t\t\t\t\treturn max;\n+\t\t\t\t}\n+\t\t\t\t// neither value is close to zero and min and max do not bracket root.\n                 throw MathRuntimeException.createIllegalArgumentException(\n                         \"function values at endpoints do not have different signs.  \" +\n                         \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 120, 
          "faulty": "double yMax=f.value(max);", 
          "type": "InsertBefore", 
          "seed": "setResult(initial,0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "Replace", 
          "seed": "verifyInterval(min,max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_522/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:33:04.881441625 -0500\n@@ -116,20 +116,20 @@\n             return solve(f, min, yMin, initial, yInitial, min, yMin);\n         }\n \n-        // return the second endpoint if it is good enough\n+        setResult(initial, 0);\n+\t\t// return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n-            setResult(yMax, 0);\n-            return result;\n-        }\n+        verifyInterval(min, max);\n \n         // reduce interval if initial and max bracket the root\n         if (yInitial * yMax < 0) {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 296, 
          "faulty": "x1=x1 + 0.5 * tolerance;", 
          "type": "InsertBefore", 
          "seed": "setResult(x1,i);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 102, 
          "faulty": "if (Math.abs(yInitial) <= functionValueAccuracy) {\n  setResult(initial,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "this.functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1110/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:11:45.921384971 -0500\n@@ -99,7 +99,8 @@\n \n         // return the initial guess if it is good enough\n         double yInitial = f.value(initial);\n-        if (Math.abs(yInitial) <= functionValueAccuracy) {\n+        this.functionValueAccuracy = defaultFunctionValueAccuracy;\n+\t\tif (Math.abs(yInitial) <= functionValueAccuracy) {\n             setResult(initial, 0);\n             return result;\n         }\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -293,7 +296,8 @@\n             if (Math.abs(delta) > tolerance) {\n                 x1 = x1 + delta;\n             } else if (dx > 0.0) {\n-                x1 = x1 + 0.5 * tolerance;\n+                setResult(x1, i);\n+\t\t\t\tx1 = x1 + 0.5 * tolerance;\n             } else if (dx <= 0.0) {\n                 x1 = x1 - 0.5 * tolerance;\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Replace", 
          "seed": "this.resultComputed=false;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1216/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:19:15.376600364 -0500\n@@ -111,10 +111,7 @@\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n+        this.resultComputed = false;\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n@@ -128,8 +125,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 295, 
          "faulty": "if (dx > 0.0) {\n  x1=x1 + 0.5 * tolerance;\n}\n else if (dx <= 0.0) {\n  x1=x1 - 0.5 * tolerance;\n}", 
          "type": "InsertBefore", 
          "seed": "clearResult();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1169/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:15:53.140953252 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -292,11 +294,14 @@\n             // Compute new X1, Y1\n             if (Math.abs(delta) > tolerance) {\n                 x1 = x1 + delta;\n-            } else if (dx > 0.0) {\n-                x1 = x1 + 0.5 * tolerance;\n-            } else if (dx <= 0.0) {\n-                x1 = x1 - 0.5 * tolerance;\n-            }\n+            } else {\n+\t\t\t\tclearResult();\n+\t\t\t\tif (dx > 0.0) {\n+\t\t\t\t\tx1 = x1 + 0.5 * tolerance;\n+\t\t\t\t} else if (dx <= 0.0) {\n+\t\t\t\t\tx1 = x1 - 0.5 * tolerance;\n+\t\t\t\t}\n+\t\t\t}\n             y1 = f.value(x1);\n             if ((y1 > 0) == (y2 > 0)) {\n                 x2 = x0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 101, 
          "faulty": "double yInitial=f.value(initial);", 
          "type": "InsertBefore", 
          "seed": "setResult(max,0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 173, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(max,0);\n  ret=max;\n}\n else {\n  throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);\n}", 
          "type": "InsertBefore", 
          "seed": "if (Math.abs(yMin) <= functionValueAccuracy) {\n  setResult(min,0);\n  ret=min;\n}\n else if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(max,0);\n  ret=max;\n}\n else {\n  throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_906/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:58:19.658795793 -0500\n@@ -97,7 +97,8 @@\n         clearResult();\n         verifySequence(min, initial, max);\n \n-        // return the initial guess if it is good enough\n+        setResult(max, 0);\n+\t\t// return the initial guess if it is good enough\n         double yInitial = f.value(initial);\n         if (Math.abs(yInitial) <= functionValueAccuracy) {\n             setResult(initial, 0);\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -170,16 +173,31 @@\n             if (Math.abs(yMin) <= functionValueAccuracy) {\n                 setResult(min, 0);\n                 ret = min;\n-            } else if (Math.abs(yMax) <= functionValueAccuracy) {\n-                setResult(max, 0);\n-                ret = max;\n             } else {\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw MathRuntimeException.createIllegalArgumentException(\n-                        \"function values at endpoints do not have different signs.  \" +\n-                        \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n-                        min, max, yMin, yMax);\n-            }\n+\t\t\t\tif (Math.abs(yMin) <= functionValueAccuracy) {\n+\t\t\t\t\tsetResult(min, 0);\n+\t\t\t\t\tret = min;\n+\t\t\t\t} else if (Math.abs(yMax) <= functionValueAccuracy) {\n+\t\t\t\t\tsetResult(max, 0);\n+\t\t\t\t\tret = max;\n+\t\t\t\t} else {\n+\t\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n+\t\t\t\t\t\t\t\t\tmin, max, yMin, yMax);\n+\t\t\t\t}\n+\t\t\t\tif (Math.abs(yMax) <= functionValueAccuracy) {\n+\t\t\t\t\tsetResult(max, 0);\n+\t\t\t\t\tret = max;\n+\t\t\t\t} else {\n+\t\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n+\t\t\t\t\t\t\t\t\tmin, max, yMin, yMax);\n+\t\t\t\t}\n+\t\t\t}\n         } else if (sign < 0){\n             // solve using only the first endpoint as initial guess\n             ret = solve(f, min, yMin, max, yMax, min, yMin);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Replace", 
          "seed": "verifyBracketing(min,max,f);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_977/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:02:34.482349393 -0500\n@@ -111,10 +111,7 @@\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n+        verifyBracketing(min, max, f);\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n@@ -128,8 +125,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "Delete", 
          "seed": "this.f=f;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 173, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(max,0);\n  ret=max;\n}\n else {\n  throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);\n}", 
          "type": "InsertBefore", 
          "seed": "this.defaultFunctionValueAccuracy=1.0e-15;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1688/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:51:44.613171552 -0500\n@@ -118,18 +118,15 @@\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n-            setResult(yMax, 0);\n-            return result;\n-        }\n-\n         // reduce interval if initial and max bracket the root\n         if (yInitial * yMax < 0) {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -170,16 +167,19 @@\n             if (Math.abs(yMin) <= functionValueAccuracy) {\n                 setResult(min, 0);\n                 ret = min;\n-            } else if (Math.abs(yMax) <= functionValueAccuracy) {\n-                setResult(max, 0);\n-                ret = max;\n             } else {\n-                // neither value is close to zero and min and max do not bracket root.\n-                throw MathRuntimeException.createIllegalArgumentException(\n-                        \"function values at endpoints do not have different signs.  \" +\n-                        \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n-                        min, max, yMin, yMax);\n-            }\n+\t\t\t\tthis.defaultFunctionValueAccuracy = 1.0e-15;\n+\t\t\t\tif (Math.abs(yMax) <= functionValueAccuracy) {\n+\t\t\t\t\tsetResult(max, 0);\n+\t\t\t\t\tret = max;\n+\t\t\t\t} else {\n+\t\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t\t.createIllegalArgumentException(\n+\t\t\t\t\t\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n+\t\t\t\t\t\t\t\t\tmin, max, yMin, yMax);\n+\t\t\t\t}\n+\t\t\t}\n         } else if (sign < 0){\n             // solve using only the first endpoint as initial guess\n             ret = solve(f, min, yMin, max, yMax, min, yMin);\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 209, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Replace", 
          "seed": "setResult(initial,0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_805/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 04:51:32.179510682 -0500\n@@ -207,8 +207,8 @@\n     protected void verifyInterval(final double lower, final double upper) {\n         if (lower >= upper) {\n             throw MathRuntimeException.createIllegalArgumentException(\n-                    \"endpoints do not specify an interval: [{0}, {1}]\",\n-                    lower, upper);\n+\t\t\t\t\t\"endpoints do not specify an interval: [{0}, {1}]\", lower,\n+\t\t\t\t\tupper);\n         }\n     }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_805/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:51:32.183510675 -0500\n@@ -111,10 +111,7 @@\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n+        setResult(initial, 0);\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n@@ -128,8 +125,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 247, 
          "faulty": "return result;", 
          "type": "InsertBefore", 
          "seed": "x2=x0;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Delete", 
          "seed": "if (f.value(min) == 0.0) {\n  return min;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_595/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:37:51.704942907 -0500\n@@ -111,11 +111,6 @@\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n-\n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n         if (Math.abs(yMax) <= functionValueAccuracy) {\n@@ -128,8 +123,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -244,7 +241,8 @@\n                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);\n             if (Math.abs(dx) <= tolerance) {\n                 setResult(x1, i);\n-                return result;\n+                x2 = x0;\n+\t\t\t\treturn result;\n             }\n             if ((Math.abs(oldDelta) < tolerance) ||\n                     (Math.abs(y0) <= Math.abs(y1))) {\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 209, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_520/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 04:33:00.501449246 -0500\n@@ -207,8 +207,8 @@\n     protected void verifyInterval(final double lower, final double upper) {\n         if (lower >= upper) {\n             throw MathRuntimeException.createIllegalArgumentException(\n-                    \"endpoints do not specify an interval: [{0}, {1}]\",\n-                    lower, upper);\n+\t\t\t\t\t\"endpoints do not specify an interval: [{0}, {1}]\", lower,\n+\t\t\t\t\tupper);\n         }\n     }\n \n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_520/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:33:00.501449246 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "if (yInitial * yMax < 0) {\n  return solve(f,initial,yInitial,max,yMax,initial,yInitial);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1404/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:32:05.615244370 -0500\n@@ -118,7 +118,10 @@\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n+        if (yInitial * yMax < 0) {\n+\t\t\treturn solve(f, initial, yInitial, max, yMax, initial, yInitial);\n+\t\t}\n+\t\tif (Math.abs(yMax) <= functionValueAccuracy) {\n             setResult(yMax, 0);\n             return result;\n         }\n@@ -128,8 +131,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 108, 
          "faulty": "double yMin=f.value(min);", 
          "type": "InsertBefore", 
          "seed": "if (Math.abs(yInitial) <= functionValueAccuracy) {\n  setResult(initial,0);\n  return result;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1720/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:53:51.652945653 -0500\n@@ -104,7 +104,11 @@\n             return result;\n         }\n \n-        // return the first endpoint if it is good enough\n+        if (Math.abs(yInitial) <= functionValueAccuracy) {\n+\t\t\tsetResult(initial, 0);\n+\t\t\treturn result;\n+\t\t}\n+\t\t// return the first endpoint if it is good enough\n         double yMin = f.value(min);\n         if (Math.abs(yMin) <= functionValueAccuracy) {\n             setResult(yMin, 0);\n@@ -128,8 +132,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "this.f=f;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_566/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:35:57.261141806 -0500\n@@ -118,7 +118,8 @@\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n+        this.f = f;\n+\t\tif (Math.abs(yMax) <= functionValueAccuracy) {\n             setResult(yMax, 0);\n             return result;\n         }\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 120, 
          "faulty": "double yMax=f.value(max);", 
          "type": "InsertBefore", 
          "seed": "setResult(initial,0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_407/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:25:16.202258276 -0500\n@@ -116,7 +116,8 @@\n             return solve(f, min, yMin, initial, yInitial, min, yMin);\n         }\n \n-        // return the second endpoint if it is good enough\n+        setResult(initial, 0);\n+\t\t// return the second endpoint if it is good enough\n         double yMax = f.value(max);\n         if (Math.abs(yMax) <= functionValueAccuracy) {\n             setResult(yMax, 0);\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 109, 
          "faulty": "if (Math.abs(yMin) <= functionValueAccuracy) {\n  setResult(yMin,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Delete", 
          "seed": "this.functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1084/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:10:10.601551530 -0500\n@@ -106,16 +106,14 @@\n \n         // return the first endpoint if it is good enough\n         double yMin = f.value(min);\n-        if (Math.abs(yMin) <= functionValueAccuracy) {\n+        if (yInitial * yMin < 0) {\n+\t\t\treturn solve(f, min, yMin, initial, yInitial, min, yMin);\n+\t\t}\n+\t\tif (Math.abs(yMin) <= functionValueAccuracy) {\n             setResult(yMin, 0);\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n-\n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n         if (Math.abs(yMax) <= functionValueAccuracy) {\n@@ -128,8 +126,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 109, 
          "faulty": "if (Math.abs(yMin) <= functionValueAccuracy) {\n  setResult(yMin,0);\n  return result;\n}", 
          "type": "Delete", 
          "seed": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Replace", 
          "seed": "this.functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1474/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:37:02.818721437 -0500\n@@ -106,15 +106,7 @@\n \n         // return the first endpoint if it is good enough\n         double yMin = f.value(min);\n-        if (Math.abs(yMin) <= functionValueAccuracy) {\n-            setResult(yMin, 0);\n-            return result;\n-        }\n-\n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n+        this.functionValueAccuracy = defaultFunctionValueAccuracy;\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n@@ -128,8 +120,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Replace", 
          "seed": "this.functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_357/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:21:39.746636222 -0500\n@@ -111,10 +111,7 @@\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n+        this.functionValueAccuracy = defaultFunctionValueAccuracy;\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n@@ -128,8 +125,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 127, 
          "faulty": "if (yInitial * yMax < 0) {\n  return solve(f,initial,yInitial,max,yMax,initial,yInitial);\n}", 
          "type": "InsertBefore", 
          "seed": "this.functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_531/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:33:40.509379635 -0500\n@@ -123,13 +123,16 @@\n             return result;\n         }\n \n-        // reduce interval if initial and max bracket the root\n+        this.functionValueAccuracy = defaultFunctionValueAccuracy;\n+\t\t// reduce interval if initial and max bracket the root\n         if (yInitial * yMax < 0) {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 209, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);", 
          "type": "InsertBefore", 
          "seed": "this.functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 120, 
          "faulty": "double yMax=f.value(max);", 
          "type": "InsertBefore", 
          "seed": "if (f.value(max) == 0.0) {\n  return max;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1543/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 05:41:43.626227807 -0500\n@@ -206,7 +206,8 @@\n      */\n     protected void verifyInterval(final double lower, final double upper) {\n         if (lower >= upper) {\n-            throw MathRuntimeException.createIllegalArgumentException(\n+            this.functionValueAccuracy = defaultFunctionValueAccuracy;\n+\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n                     \"endpoints do not specify an interval: [{0}, {1}]\",\n                     lower, upper);\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1543/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:41:43.630227799 -0500\n@@ -116,7 +116,10 @@\n             return solve(f, min, yMin, initial, yInitial, min, yMin);\n         }\n \n-        // return the second endpoint if it is good enough\n+        if (f.value(max) == 0.0) {\n+\t\t\treturn max;\n+\t\t}\n+\t\t// return the second endpoint if it is good enough\n         double yMax = f.value(max);\n         if (Math.abs(yMax) <= functionValueAccuracy) {\n             setResult(yMax, 0);\n@@ -128,8 +131,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Replace", 
          "seed": "if (f.value(min) == 0.0) {\n  return min;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_658/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:41:54.672521023 -0500\n@@ -111,10 +111,9 @@\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n+        if (f.value(min) == 0.0) {\n+\t\t\treturn min;\n+\t\t}\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n@@ -128,8 +127,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 209, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);", 
          "type": "InsertBefore", 
          "seed": "iterationCount+=this.iterationCount;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 296, 
          "faulty": "x1=x1 + 0.5 * tolerance;", 
          "type": "InsertBefore", 
          "seed": "setResult(x1,i);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_832/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 04:53:20.211321015 -0500\n@@ -206,7 +206,8 @@\n      */\n     protected void verifyInterval(final double lower, final double upper) {\n         if (lower >= upper) {\n-            throw MathRuntimeException.createIllegalArgumentException(\n+            iterationCount += this.iterationCount;\n+\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n                     \"endpoints do not specify an interval: [{0}, {1}]\",\n                     lower, upper);\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_832/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:53:20.211321015 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -293,7 +295,8 @@\n             if (Math.abs(delta) > tolerance) {\n                 x1 = x1 + delta;\n             } else if (dx > 0.0) {\n-                x1 = x1 + 0.5 * tolerance;\n+                setResult(x1, i);\n+\t\t\t\tx1 = x1 + 0.5 * tolerance;\n             } else if (dx <= 0.0) {\n                 x1 = x1 - 0.5 * tolerance;\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 296, 
          "faulty": "x1=x1 + 0.5 * tolerance;", 
          "type": "InsertBefore", 
          "seed": "if (f == null) {\n  throw MathRuntimeException.createIllegalArgumentException(\"function to solve cannot be null\");\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Replace", 
          "seed": "this.functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1569/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:43:32.566036413 -0500\n@@ -111,10 +111,7 @@\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n+        this.functionValueAccuracy = defaultFunctionValueAccuracy;\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n@@ -128,8 +125,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -293,7 +292,11 @@\n             if (Math.abs(delta) > tolerance) {\n                 x1 = x1 + delta;\n             } else if (dx > 0.0) {\n-                x1 = x1 + 0.5 * tolerance;\n+                if (f == null) {\n+\t\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t\t.createIllegalArgumentException(\"function to solve cannot be null\");\n+\t\t\t\t}\n+\t\t\t\tx1 = x1 + 0.5 * tolerance;\n             } else if (dx <= 0.0) {\n                 x1 = x1 - 0.5 * tolerance;\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 109, 
          "faulty": "if (Math.abs(yMin) <= functionValueAccuracy) {\n  setResult(yMin,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "this.f=f;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1527/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:40:38.838341658 -0500\n@@ -106,7 +106,8 @@\n \n         // return the first endpoint if it is good enough\n         double yMin = f.value(min);\n-        if (Math.abs(yMin) <= functionValueAccuracy) {\n+        functionValueAccuracy = defaultFunctionValueAccuracy;\n+\t\tif (Math.abs(yMin) <= functionValueAccuracy) {\n             setResult(yMin, 0);\n             return result;\n         }\n@@ -118,7 +119,8 @@\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n+        this.f = f;\n+\t\tif (Math.abs(yMax) <= functionValueAccuracy) {\n             setResult(yMax, 0);\n             return result;\n         }\n@@ -128,8 +130,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 178, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);", 
          "type": "InsertBefore", 
          "seed": "if (f.value(max) == 0.0) {\n  return max;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1105/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:11:32.205408934 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -174,7 +176,10 @@\n                 setResult(max, 0);\n                 ret = max;\n             } else {\n-                // neither value is close to zero and min and max do not bracket root.\n+                if (f.value(max) == 0.0) {\n+\t\t\t\t\treturn max;\n+\t\t\t\t}\n+\t\t\t\t// neither value is close to zero and min and max do not bracket root.\n                 throw MathRuntimeException.createIllegalArgumentException(\n                         \"function values at endpoints do not have different signs.  \" +\n                         \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 283, 
          "faulty": "oldDelta=delta;", 
          "type": "Delete", 
          "seed": "return functionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 296, 
          "faulty": "x1=x1 + 0.5 * tolerance;", 
          "type": "InsertBefore", 
          "seed": "if (f == null) {\n  throw MathRuntimeException.createIllegalArgumentException(\"function to solve cannot be null\");\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1320/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:26:16.655858985 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -280,7 +282,6 @@\n                     // in the wrong direction, or progress is slow.\n                     // Fall back to bisection.\n                     delta = 0.5 * dx;\n-                    oldDelta = delta;\n                 } else {\n                     oldDelta = delta;\n                     delta = p / p1;\n@@ -293,7 +294,11 @@\n             if (Math.abs(delta) > tolerance) {\n                 x1 = x1 + delta;\n             } else if (dx > 0.0) {\n-                x1 = x1 + 0.5 * tolerance;\n+                if (f == null) {\n+\t\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t\t.createIllegalArgumentException(\"function to solve cannot be null\");\n+\t\t\t\t}\n+\t\t\t\tx1 = x1 + 0.5 * tolerance;\n             } else if (dx <= 0.0) {\n                 x1 = x1 - 0.5 * tolerance;\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_37/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:58:15.577086590 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 196, 
          "faulty": "return (start < mid) && (mid < end);", 
          "type": "Replace", 
          "seed": "return (start < mid) && (mid < end);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 295, 
          "faulty": "if (dx > 0.0) {\n  x1=x1 + 0.5 * tolerance;\n}\n else if (dx <= 0.0) {\n  x1=x1 - 0.5 * tolerance;\n}", 
          "type": "InsertBefore", 
          "seed": "if (delta / oldDelta > 1) {\n  delta=0.5 * oldDelta;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Replace", 
          "seed": "setResult(initial,0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1176/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:16:20.044906293 -0500\n@@ -111,10 +111,7 @@\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n+        setResult(initial, 0);\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n@@ -128,8 +125,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -292,11 +291,16 @@\n             // Compute new X1, Y1\n             if (Math.abs(delta) > tolerance) {\n                 x1 = x1 + delta;\n-            } else if (dx > 0.0) {\n-                x1 = x1 + 0.5 * tolerance;\n-            } else if (dx <= 0.0) {\n-                x1 = x1 - 0.5 * tolerance;\n-            }\n+            } else {\n+\t\t\t\tif (delta / oldDelta > 1) {\n+\t\t\t\t\tdelta = 0.5 * oldDelta;\n+\t\t\t\t}\n+\t\t\t\tif (dx > 0.0) {\n+\t\t\t\t\tx1 = x1 + 0.5 * tolerance;\n+\t\t\t\t} else if (dx <= 0.0) {\n+\t\t\t\t\tx1 = x1 - 0.5 * tolerance;\n+\t\t\t\t}\n+\t\t\t}\n             y1 = f.value(x1);\n             if ((y1 > 0) == (y2 > 0)) {\n                 x2 = x0;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 178, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);", 
          "type": "InsertBefore", 
          "seed": "iterationCount+=this.iterationCount;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 97, 
          "faulty": "clearResult();", 
          "type": "Delete", 
          "seed": "if (f.value(max) == 0.0) {\n  return max;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1704/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:52:47.313060040 -0500\n@@ -94,7 +94,6 @@\n                         final double min, final double max, final double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n-        clearResult();\n         verifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n@@ -128,8 +127,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -174,7 +175,8 @@\n                 setResult(max, 0);\n                 ret = max;\n             } else {\n-                // neither value is close to zero and min and max do not bracket root.\n+                iterationCount += this.iterationCount;\n+\t\t\t\t// neither value is close to zero and min and max do not bracket root.\n                 throw MathRuntimeException.createIllegalArgumentException(\n                         \"function values at endpoints do not have different signs.  \" +\n                         \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 196, 
          "faulty": "return (start < mid) && (mid < end);", 
          "type": "Replace", 
          "seed": "return (start < mid) && (mid < end);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_503/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:31:47.849575698 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 178, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);", 
          "type": "InsertBefore", 
          "seed": "if (f.value(max) == 0.0) {\n  return max;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 127, 
          "faulty": "if (yInitial * yMax < 0) {\n  return solve(f,initial,yInitial,max,yMax,initial,yInitial);\n}", 
          "type": "InsertBefore", 
          "seed": "if (f == null) {\n  throw MathRuntimeException.createIllegalArgumentException(\"function to solve cannot be null\");\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1695/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:52:11.561123620 -0500\n@@ -123,13 +123,19 @@\n             return result;\n         }\n \n-        // reduce interval if initial and max bracket the root\n+        if (f == null) {\n+\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t.createIllegalArgumentException(\"function to solve cannot be null\");\n+\t\t}\n+\t\t// reduce interval if initial and max bracket the root\n         if (yInitial * yMax < 0) {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -174,7 +180,10 @@\n                 setResult(max, 0);\n                 ret = max;\n             } else {\n-                // neither value is close to zero and min and max do not bracket root.\n+                if (f.value(max) == 0.0) {\n+\t\t\t\t\treturn max;\n+\t\t\t\t}\n+\t\t\t\t// neither value is close to zero and min and max do not bracket root.\n                 throw MathRuntimeException.createIllegalArgumentException(\n                         \"function values at endpoints do not have different signs.  \" +\n                         \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 296, 
          "faulty": "x1=x1 + 0.5 * tolerance;", 
          "type": "InsertBefore", 
          "seed": "if (f == null) {\n  throw MathRuntimeException.createIllegalArgumentException(\"function to solve cannot be null\");\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 102, 
          "faulty": "if (Math.abs(yInitial) <= functionValueAccuracy) {\n  setResult(initial,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "clearResult();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 109, 
          "faulty": "if (Math.abs(yMin) <= functionValueAccuracy) {\n  setResult(yMin,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "clearResult();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_908/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:58:24.178787871 -0500\n@@ -99,14 +99,16 @@\n \n         // return the initial guess if it is good enough\n         double yInitial = f.value(initial);\n-        if (Math.abs(yInitial) <= functionValueAccuracy) {\n+        clearResult();\n+\t\tif (Math.abs(yInitial) <= functionValueAccuracy) {\n             setResult(initial, 0);\n             return result;\n         }\n \n         // return the first endpoint if it is good enough\n         double yMin = f.value(min);\n-        if (Math.abs(yMin) <= functionValueAccuracy) {\n+        clearResult();\n+\t\tif (Math.abs(yMin) <= functionValueAccuracy) {\n             setResult(yMin, 0);\n             return result;\n         }\n@@ -128,8 +130,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -293,7 +297,11 @@\n             if (Math.abs(delta) > tolerance) {\n                 x1 = x1 + delta;\n             } else if (dx > 0.0) {\n-                x1 = x1 + 0.5 * tolerance;\n+                if (f == null) {\n+\t\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t\t.createIllegalArgumentException(\"function to solve cannot be null\");\n+\t\t\t\t}\n+\t\t\t\tx1 = x1 + 0.5 * tolerance;\n             } else if (dx <= 0.0) {\n                 x1 = x1 - 0.5 * tolerance;\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 296, 
          "faulty": "x1=x1 + 0.5 * tolerance;", 
          "type": "InsertBefore", 
          "seed": "setResult(x1,i);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 102, 
          "faulty": "if (Math.abs(yInitial) <= functionValueAccuracy) {\n  setResult(initial,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "clearResult();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_713/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:45:20.000164886 -0500\n@@ -99,7 +99,8 @@\n \n         // return the initial guess if it is good enough\n         double yInitial = f.value(initial);\n-        if (Math.abs(yInitial) <= functionValueAccuracy) {\n+        clearResult();\n+\t\tif (Math.abs(yInitial) <= functionValueAccuracy) {\n             setResult(initial, 0);\n             return result;\n         }\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -293,7 +296,8 @@\n             if (Math.abs(delta) > tolerance) {\n                 x1 = x1 + delta;\n             } else if (dx > 0.0) {\n-                x1 = x1 + 0.5 * tolerance;\n+                setResult(x1, i);\n+\t\t\t\tx1 = x1 + 0.5 * tolerance;\n             } else if (dx <= 0.0) {\n                 x1 = x1 - 0.5 * tolerance;\n             }\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 246, 
          "faulty": "setResult(x1,i);", 
          "type": "InsertBefore", 
          "seed": "if (Math.abs(y2) < Math.abs(y1)) {\n  x0=x1;\n  x1=x2;\n  x2=x0;\n  y0=y1;\n  y1=y2;\n  y2=y0;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_678/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:43:00.644406557 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -243,7 +245,15 @@\n             double tolerance =\n                 Math.max(relativeAccuracy * Math.abs(x1), absoluteAccuracy);\n             if (Math.abs(dx) <= tolerance) {\n-                setResult(x1, i);\n+                if (Math.abs(y2) < Math.abs(y1)) {\n+\t\t\t\t\tx0 = x1;\n+\t\t\t\t\tx1 = x2;\n+\t\t\t\t\tx2 = x0;\n+\t\t\t\t\ty0 = y1;\n+\t\t\t\t\ty1 = y2;\n+\t\t\t\t\ty2 = y0;\n+\t\t\t\t}\n+\t\t\t\tsetResult(x1, i);\n                 return result;\n             }\n             if ((Math.abs(oldDelta) < tolerance) ||\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 170, 
          "faulty": "if (Math.abs(yMin) <= functionValueAccuracy) {\n  setResult(min,0);\n  ret=min;\n}\n else if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(max,0);\n  ret=max;\n}\n else {\n  throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);\n}", 
          "type": "InsertBefore", 
          "seed": "ret=min;"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_615/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:39:14.132799724 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -166,7 +168,8 @@\n         // Verify bracketing\n         double sign = yMin * yMax;\n         if (sign > 0) {\n-            // check if either value is close to a zero\n+            ret = min;\n+\t\t\t// check if either value is close to a zero\n             if (Math.abs(yMin) <= functionValueAccuracy) {\n                 setResult(min, 0);\n                 ret = min;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 97, 
          "faulty": "clearResult();", 
          "type": "Delete", 
          "seed": "clearResult();"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 109, 
          "faulty": "if (Math.abs(yMin) <= functionValueAccuracy) {\n  setResult(yMin,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_633/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:40:21.164683328 -0500\n@@ -94,7 +94,6 @@\n                         final double min, final double max, final double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n-        clearResult();\n         verifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n@@ -106,7 +105,10 @@\n \n         // return the first endpoint if it is good enough\n         double yMin = f.value(min);\n-        if (Math.abs(yMin) <= functionValueAccuracy) {\n+        if (yInitial * yMin < 0) {\n+\t\t\treturn solve(f, min, yMin, initial, yInitial, min, yMin);\n+\t\t}\n+\t\tif (Math.abs(yMin) <= functionValueAccuracy) {\n             setResult(yMin, 0);\n             return result;\n         }\n@@ -128,8 +130,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 97, 
          "faulty": "clearResult();", 
          "type": "InsertBefore", 
          "seed": "if (f == null) {\n  throw MathRuntimeException.createIllegalArgumentException(\"function to solve cannot be null\");\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_701/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:44:30.544250635 -0500\n@@ -94,7 +94,11 @@\n                         final double min, final double max, final double initial)\n         throws MaxIterationsExceededException, FunctionEvaluationException {\n \n-        clearResult();\n+        if (f == null) {\n+\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t.createIllegalArgumentException(\"function to solve cannot be null\");\n+\t\t\t}\n+\t\tclearResult();\n         verifySequence(min, initial, max);\n \n         // return the initial guess if it is good enough\n@@ -128,8 +132,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 209, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);", 
          "type": "InsertBefore", 
          "seed": "if (f == null) {\n  throw MathRuntimeException.createIllegalArgumentException(\"function to solve cannot be null\");\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "verifyInterval(min,max);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_950/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 05:00:55.506522720 -0500\n@@ -206,7 +206,11 @@\n      */\n     protected void verifyInterval(final double lower, final double upper) {\n         if (lower >= upper) {\n-            throw MathRuntimeException.createIllegalArgumentException(\n+            if (f == null) {\n+\t\t\t\tthrow MathRuntimeException\n+\t\t\t\t\t\t.createIllegalArgumentException(\"function to solve cannot be null\");\n+\t\t\t}\n+\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n                     \"endpoints do not specify an interval: [{0}, {1}]\",\n                     lower, upper);\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_950/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:00:55.506522720 -0500\n@@ -118,7 +118,8 @@\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n+        verifyInterval(min, max);\n+\t\tif (Math.abs(yMax) <= functionValueAccuracy) {\n             setResult(yMax, 0);\n             return result;\n         }\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 196, 
          "faulty": "return (start < mid) && (mid < end);", 
          "type": "InsertBefore", 
          "seed": "this.iterationCount=iterationCount;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1224/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 05:19:47.232544799 -0500\n@@ -193,7 +193,8 @@\n      * @return true if the arguments form an increasing sequence\n      */\n     protected boolean isSequence(final double start, final double mid, final double end) {\n-        return (start < mid) && (mid < end);\n+        this.iterationCount = iterationCount;\n+\t\treturn (start < mid) && (mid < end);\n     }\n \n     /**\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1224/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:19:47.236544792 -0500\n@@ -128,8 +128,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Replace", 
          "seed": "setResult(initial,0);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_670/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:42:33.480453685 -0500\n@@ -111,10 +111,7 @@\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n+        setResult(initial, 0);\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n@@ -128,8 +125,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 283, 
          "faulty": "oldDelta=delta;", 
          "type": "InsertBefore", 
          "seed": "iterationCount=i;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 108, 
          "faulty": "double yMin=f.value(min);", 
          "type": "InsertBefore", 
          "seed": "if (Math.abs(yInitial) <= functionValueAccuracy) {\n  setResult(initial,0);\n  return result;\n}"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_1393/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:31:21.819321474 -0500\n@@ -104,7 +104,11 @@\n             return result;\n         }\n \n-        // return the first endpoint if it is good enough\n+        if (Math.abs(yInitial) <= functionValueAccuracy) {\n+\t\t\tsetResult(initial, 0);\n+\t\t\treturn result;\n+\t\t}\n+\t\t// return the first endpoint if it is good enough\n         double yMin = f.value(min);\n         if (Math.abs(yMin) <= functionValueAccuracy) {\n             setResult(yMin, 0);\n@@ -128,8 +132,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -280,7 +286,8 @@\n                     // in the wrong direction, or progress is slow.\n                     // Fall back to bisection.\n                     delta = 0.5 * dx;\n-                    oldDelta = delta;\n+                    iterationCount = i;\n+\t\t\t\t\toldDelta = delta;\n                 } else {\n                     oldDelta = delta;\n                     delta = p / p1;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 109, 
          "faulty": "if (Math.abs(yMin) <= functionValueAccuracy) {\n  setResult(yMin,0);\n  return result;\n}", 
          "type": "InsertBefore", 
          "seed": "functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_664/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:42:12.668489795 -0500\n@@ -106,7 +106,8 @@\n \n         // return the first endpoint if it is good enough\n         double yMin = f.value(min);\n-        if (Math.abs(yMin) <= functionValueAccuracy) {\n+        functionValueAccuracy = defaultFunctionValueAccuracy;\n+\t\tif (Math.abs(yMin) <= functionValueAccuracy) {\n             setResult(yMin, 0);\n             return result;\n         }\n@@ -128,8 +129,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 196, 
          "faulty": "return (start < mid) && (mid < end);", 
          "type": "Replace", 
          "seed": "return (start < mid) && (mid < end);"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 282, 
          "faulty": "delta=0.5 * dx;", 
          "type": "InsertBefore", 
          "seed": "oldDelta=x2 - x1;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 121, 
          "faulty": "if (Math.abs(yMax) <= functionValueAccuracy) {\n  setResult(yMax,0);\n  return result;\n}", 
          "type": "Delete", 
          "seed": "this.f=f;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_937/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 05:00:13.358596552 -0500\n@@ -118,18 +118,15 @@\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n-        if (Math.abs(yMax) <= functionValueAccuracy) {\n-            setResult(yMax, 0);\n-            return result;\n-        }\n-\n         // reduce interval if initial and max bracket the root\n         if (yInitial * yMax < 0) {\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n@@ -276,7 +273,8 @@\n                 }\n                 if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||\n                         p >= Math.abs(0.5 * oldDelta * p1)) {\n-                    // Inverse quadratic interpolation gives a value\n+                    oldDelta = x2 - x1;\n+\t\t\t\t\t// Inverse quadratic interpolation gives a value\n                     // in the wrong direction, or progress is slow.\n                     // Fall back to bisection.\n                     delta = 0.5 * dx;\n\n\n"
    }, 
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java", 
          "line": 209, 
          "faulty": "throw MathRuntimeException.createIllegalArgumentException(\"endpoints do not specify an interval: [{0}, {1}]\",lower,upper);", 
          "type": "InsertBefore", 
          "seed": "iterationCount+=this.iterationCount;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 115, 
          "faulty": "if (yInitial * yMin < 0) {\n  return solve(f,min,yMin,initial,yInitial,min,yMin);\n}", 
          "type": "Replace", 
          "seed": "this.functionValueAccuracy=defaultFunctionValueAccuracy;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java", 
          "line": 132, 
          "faulty": "return solve(f,min,yMin,max,yMax,initial,yInitial);", 
          "type": "Replace", 
          "seed": "throw MathRuntimeException.createIllegalArgumentException(\"function values at endpoints do not have different signs.  \" + \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\",min,max,yMin,yMax);"
        }
      ], 
      "patch": "--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 03:53:43.264759000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_454/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java\t2018-12-29 04:28:33.097914921 -0500\n@@ -206,7 +206,8 @@\n      */\n     protected void verifyInterval(final double lower, final double upper) {\n         if (lower >= upper) {\n-            throw MathRuntimeException.createIllegalArgumentException(\n+            iterationCount += this.iterationCount;\n+\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n                     \"endpoints do not specify an interval: [{0}, {1}]\",\n                     lower, upper);\n         }\n\n\n--- /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 03:53:43.256758000 -0500\n+++ /tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/patches_kjw0/Patch_454/patched/tmp/Arja_Bug_dot_jar_Commons-Math_f6dd42b4/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java\t2018-12-29 04:28:33.097914921 -0500\n@@ -111,10 +111,7 @@\n             return result;\n         }\n \n-        // reduce interval if min and initial bracket the root\n-        if (yInitial * yMin < 0) {\n-            return solve(f, min, yMin, initial, yInitial, min, yMin);\n-        }\n+        this.functionValueAccuracy = defaultFunctionValueAccuracy;\n \n         // return the second endpoint if it is good enough\n         double yMax = f.value(max);\n@@ -128,8 +125,10 @@\n             return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n         }\n \n-        // full Brent algorithm starting with provided initial guess\n-        return solve(f, min, yMin, max, yMax, initial, yInitial);\n+        throw MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\"function values at endpoints do not have different signs.  \"\n+\t\t\t\t\t\t+ \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\", min,\n+\t\t\t\tmax, yMin, yMax);\n \n     }\n \n\n\n"
    }
  ]
}